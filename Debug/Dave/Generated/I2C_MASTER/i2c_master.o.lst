   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "i2c_master.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.__NVIC_ClearPendingIRQ,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	__NVIC_ClearPendingIRQ:
  23              	.LFB28:
  24              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include/core_cm0.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**************************************************************************//**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * @file     core_cm0.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * @version  V5.0.2
   5:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * @date     19. April 2017
   6:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
   7:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*
   8:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  *
  10:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * not use this file except in compliance with the License.
  14:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * You may obtain a copy of the License at
  15:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  *
  16:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  *
  18:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * See the License for the specific language governing permissions and
  22:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  * limitations under the License.
  23:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
  24:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  25:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #if   defined ( __ICCARM__ )
  26:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #elif defined (__clang__)
  28:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif
  30:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  31:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  34:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #include <stdint.h>
  35:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  36:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
  37:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
  38:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif
  39:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  40:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
  41:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  44:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  47:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****      Unions are used for effective representation of core registers.
  49:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  50:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
  53:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  54:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  55:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
  56:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  *                 CMSIS definitions
  57:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  58:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
  59:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup Cortex_M0
  60:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   @{
  61:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
  62:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  63:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #include "cmsis_version.h"
  64:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  
  65:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*  CMSIS CM0 definitions */
  66:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  71:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  73:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     This core does not support an FPU at all
  75:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** */
  76:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define __FPU_USED       0U
  77:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #if defined ( __CC_ARM )
  79:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  82:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  83:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  87:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  88:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
  89:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  92:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  93:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
  94:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARMVFP__
  95:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  97:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 102:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
 104:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __FPU_VFP__
 105:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 107:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __CSMC__ )
 109:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 112:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 113:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif
 114:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 117:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 118:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 119:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** }
 120:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif
 121:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 122:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 124:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 126:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 129:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 130:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
 131:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif
 132:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 133:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* check device defines and use defaults */
 134:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __CM0_REV
 136:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #define __CM0_REV               0x0000U
 137:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 139:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 140:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 144:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 145:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 149:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif
 150:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 153:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     \li to specify the access to peripheral variables.
 157:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 160:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #else
 162:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif
 164:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 167:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* following defines should be used for structure members */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 172:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group Cortex_M0 */
 173:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 174:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 175:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 176:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 177:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  *                 Register Abstraction
 178:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   Core Register contain:
 179:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register
 180:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Register
 181:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   - Core SCB Register
 182:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Register
 183:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 184:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 185:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** */
 188:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 189:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 190:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 191:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Core Register type definitions.
 193:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   @{
 194:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 196:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 197:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 200:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 201:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   struct
 202:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 203:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** } APSR_Type;
 211:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 212:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* APSR Register Definitions */
 213:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 216:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 219:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 222:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 225:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 226:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 227:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 229:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 230:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 231:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   struct
 232:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 233:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** } IPSR_Type;
 238:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 239:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* IPSR Register Definitions */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 243:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 244:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 245:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 247:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 248:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 249:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   struct
 250:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** } xPSR_Type;
 262:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 263:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* xPSR Register Definitions */
 264:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 267:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 270:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 273:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 279:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 282:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 283:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 284:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 286:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 287:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 288:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   struct
 289:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 290:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** } CONTROL_Type;
 296:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 297:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* CONTROL Register Definitions */
 298:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 301:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 303:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 304:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 305:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 306:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   @{
 309:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 311:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 312:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 314:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 315:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 316:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0[31U];
 318:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RSERVED1[31U];
 320:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED2[31U];
 322:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED3[31U];
 324:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED4[64U];
 325:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** }  NVIC_Type;
 327:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 328:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 330:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 332:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 333:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   @{
 336:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 338:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 339:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 341:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 342:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 343:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0;
 346:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED1;
 350:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** } SCB_Type;
 353:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 354:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SCB CPUID Register Definitions */
 355:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 358:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 361:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 364:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 367:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 370:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 374:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 377:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 380:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 383:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 386:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 389:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 392:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 395:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 398:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 402:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 405:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 408:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 411:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 414:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Control Register Definitions */
 415:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 418:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 421:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 424:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 428:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 431:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 435:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 437:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 438:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 439:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 440:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   @{
 443:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 444:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 445:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 446:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 448:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 449:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 450:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** } SysTick_Type;
 455:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 456:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 463:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 466:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 469:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Reload Register Definitions */
 470:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 473:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Current Register Definitions */
 474:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 477:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 481:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 484:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 487:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 489:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 490:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 491:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 492:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   @{
 496:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 497:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 499:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 500:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 501:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 502:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   @{
 505:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 506:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 507:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 508:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted value.
 512:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** */
 513:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 515:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 516:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted bit field value.
 520:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** */
 521:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 523:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 525:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 526:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 527:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 528:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   @{
 531:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 532:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 533:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* Memory mapping of Core Hardware */
 534:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 539:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 543:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 544:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*@} */
 545:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 546:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 547:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 548:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 549:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  *                Hardware Abstraction Layer
 550:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   Core Function Interface contains:
 551:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Functions
 552:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Functions
 553:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register Access Functions
 554:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 555:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 556:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** */
 558:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 559:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 560:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 561:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 563:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   @{
 567:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 568:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 569:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 573:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #else
 575:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*#define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping   not available for Cortex-M0 */
 576:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*#define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping   not available for Cortex-M0 */
 577:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 589:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 593:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #else
 595:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 599:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 601:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 602:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 603:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 604:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 605:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 606:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 607:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 608:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 609:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 610:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Enable Interrupt
 611:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 612:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 613:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 614:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 615:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 616:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 617:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 618:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 619:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 620:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   }
 621:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** }
 622:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 623:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 624:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 625:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Get Interrupt Enable status
 626:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 627:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 628:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \return             0  Interrupt is not enabled.
 629:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \return             1  Interrupt is enabled.
 630:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 631:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 632:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 633:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 634:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 635:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 636:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1
 637:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   }
 638:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   else
 639:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 640:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     return(0U);
 641:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   }
 642:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** }
 643:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 644:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 645:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 646:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Disable Interrupt
 647:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 648:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 649:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 650:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 651:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 652:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 653:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 654:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 655:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 656:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     __DSB();
 657:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     __ISB();
 658:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   }
 659:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** }
 660:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 661:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 662:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 663:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Get Pending Interrupt
 664:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 665:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 666:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \return             0  Interrupt status is not pending.
 667:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \return             1  Interrupt status is pending.
 668:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 669:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 670:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 671:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 672:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 673:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 674:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1
 675:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   }
 676:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   else
 677:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 678:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     return(0U);
 679:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   }
 680:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** }
 681:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 682:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 683:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 684:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Set Pending Interrupt
 685:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 686:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 687:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 688:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 689:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 690:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
 691:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 692:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 693:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 694:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   }
 695:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** }
 696:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 697:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** 
 698:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** /**
 699:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Clear Pending Interrupt
 700:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 701:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 702:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 703:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****  */
 704:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 705:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** {
  25              	 .loc 1 705 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 021C     	 mov r2,r0
  39 0008 FB1D     	 add r3,r7,#7
  40 000a 1A70     	 strb r2,[r3]
 706:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
  41              	 .loc 1 706 0
  42 000c FB1D     	 add r3,r7,#7
  43 000e 1B78     	 ldrb r3,[r3]
  44 0010 7F2B     	 cmp r3,#127
  45 0012 0AD8     	 bhi .L1
 707:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   {
 708:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
  46              	 .loc 1 708 0
  47 0014 0649     	 ldr r1,.L3
  48 0016 FB1D     	 add r3,r7,#7
  49 0018 1B78     	 ldrb r3,[r3]
  50 001a 1A1C     	 mov r2,r3
  51 001c 1F23     	 mov r3,#31
  52 001e 1340     	 and r3,r2
  53 0020 0122     	 mov r2,#1
  54 0022 9A40     	 lsl r2,r2,r3
  55 0024 C023     	 mov r3,#192
  56 0026 5B00     	 lsl r3,r3,#1
  57 0028 CA50     	 str r2,[r1,r3]
  58              	.L1:
 709:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h ****   }
 710:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Include\core_cm0.h **** }
  59              	 .loc 1 710 0
  60 002a BD46     	 mov sp,r7
  61 002c 02B0     	 add sp,sp,#8
  62              	 
  63 002e 80BD     	 pop {r7,pc}
  64              	.L4:
  65              	 .align 2
  66              	.L3:
  67 0030 00E100E0 	 .word -536813312
  68              	 .cfi_endproc
  69              	.LFE28:
  71              	 .section .text.XMC_USIC_CH_EnableEvent,"ax",%progbits
  72              	 .align 2
  73              	 .code 16
  74              	 .thumb_func
  76              	XMC_USIC_CH_EnableEvent:
  77              	.LFB74:
  78              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2017-09-08
   4:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  84:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
  86:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  88:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  89:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  90:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  91:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  92:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
  94:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
  95:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
  96:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
  97:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
  98:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
  99:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 100:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 101:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 102:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 103:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 104:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 105:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 106:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 107:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 109:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 110:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 111:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 112:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 113:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 114:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 115:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 116:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 117:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 118:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 119:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 120:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 121:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 122:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 124:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 125:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 126:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 127:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 131:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 133:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 134:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 135:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 137:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 139:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 140:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 141:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 142:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 143:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 145:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 146:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 147:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 148:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 149:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 152:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 153:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 154:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 155:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 157:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 158:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 159:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 161:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 162:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 163:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 164:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 165:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 166:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 167:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 168:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 169:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 170:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 171:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 172:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 174:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 175:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 176:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 177:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 178:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 179:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 180:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 182:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 183:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 184:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 185:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 186:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 187:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 188:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 189:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 190:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 191:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 192:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 193:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 194:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 197:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 198:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 200:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 201:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 202:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 203:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 205:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 206:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 213:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 214:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 215:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 216:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 217:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 218:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 219:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 221:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 222:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 225:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 227:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 229:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 230:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 231:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 232:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 233:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 234:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 235:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 236:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 237:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 238:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 239:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 241:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 242:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 243:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 244:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 245:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 246:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 247:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 248:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 249:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 250:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 251:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 252:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 253:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 254:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 255:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 256:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 257:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 258:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 259:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 260:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 261:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 262:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 263:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 264:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 265:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 266:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 269:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 270:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 271:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 273:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 274:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 275:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 276:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 277:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 278:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 279:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 280:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 282:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 283:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 284:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 285:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 286:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 288:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 289:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 290:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 291:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 292:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 295:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 297:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 299:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 300:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 301:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 303:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 304:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 305:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 306:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 307:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 308:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 309:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 310:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 311:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 312:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 315:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 317:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 319:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 320:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 321:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 324:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 326:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 328:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 329:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 330:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 333:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 335:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 338:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 339:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 340:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 341:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 342:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 344:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 345:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 346:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 347:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 348:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 349:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 350:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 351:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 352:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 353:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 356:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 358:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 360:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 361:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 362:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 365:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 367:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 369:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 370:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 371:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 374:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 376:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 378:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 379:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 380:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 383:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 385:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 387:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 388:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 389:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 390:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 393:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 395:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 397:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 398:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 399:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 400:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 401:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 402:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 403:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 404:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 405:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 406:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 407:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 408:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 409:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 412:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 414:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 416:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 417:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 418:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 419:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 420:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 421:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 422:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 423:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 424:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 425:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 426:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 427:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 428:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 431:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 433:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 435:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 436:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 437:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 438:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 439:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 440:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 441:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 442:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 443:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 444:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 445:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 446:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 447:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 448:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 451:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 452:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
 453:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 454:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 455:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 456:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 457:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 458:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 459:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 461:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 462:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 463:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 464:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 465:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 466:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 467:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 468:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 469:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 470:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 471:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 472:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 473:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 474:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 475:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 476:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 477:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 478:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 479:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 480:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 481:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 482:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 483:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 485:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 487:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 488:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 489:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 490:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 491:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 492:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 493:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 494:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 495:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 496:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 497:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 498:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 499:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 500:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 501:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 502:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 503:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   };
 504:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 505:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 506:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 507:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 508:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 509:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 510:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 511:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 512:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 513:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   };
 514:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 515:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 516:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 517:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 518:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 519:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 520:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 521:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 522:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 523:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 524:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 525:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 526:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 527:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 528:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 529:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 530:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 531:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 532:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 533:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 534:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 535:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 536:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 537:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 539:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 540:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 541:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 542:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 543:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 544:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 545:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 546:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 547:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 548:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 550:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 551:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 552:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 553:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 554:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 555:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 556:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 557:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 558:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 559:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 560:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 562:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 563:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 564:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 565:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 566:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 567:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 568:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 569:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 570:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 571:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 572:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 573:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 574:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 575:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 576:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 577:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 578:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 579:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 581:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 582:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 583:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 584:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 585:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 586:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 587:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 588:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 589:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 590:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 591:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 592:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 593:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 594:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 595:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 596:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 597:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 598:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 599:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 600:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 601:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 602:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 603:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 605:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 606:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 607:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 608:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 609:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 610:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 611:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 612:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 613:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 614:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 615:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 616:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 617:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 619:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 620:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 621:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 622:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 623:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 624:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 625:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 626:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 627:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 628:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 629:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 630:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 631:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 633:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 634:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 635:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 636:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 637:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 638:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 639:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 640:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 641:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 642:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 643:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 644:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 645:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 646:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 647:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 648:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 649:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 650:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 651:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 652:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 653:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 654:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 655:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 656:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 657:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 658:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 659:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 660:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 661:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 662:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 663:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 664:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 665:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 666:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 667:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 668:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 669:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 670:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 671:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 672:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 673:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 674:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 675:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 676:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 677:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 678:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 679:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 680:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 681:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 682:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 683:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 684:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 685:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 686:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 687:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 688:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 689:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 690:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 691:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 692:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 693:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 694:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 695:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 696:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 697:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 698:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 699:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 700:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 701:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 702:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 703:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 704:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 705:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 706:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 707:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 708:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 709:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 710:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 711:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 712:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 713:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 714:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 715:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 716:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 717:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 718:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 719:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 720:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 721:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 722:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 723:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 726:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 728:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 729:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 730:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 731:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 732:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 733:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 734:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 735:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 736:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 737:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 738:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 739:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 740:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 741:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 742:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 744:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 745:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 746:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 747:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 748:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 749:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 750:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 751:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 752:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 753:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 757:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 758:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 759:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 760:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 761:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 762:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 763:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 765:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 766:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 767:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 768:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 769:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 770:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 771:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 772:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 773:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 774:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 775:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 776:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 777:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 778:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 779:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 780:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 781:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 782:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 783:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 784:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 785:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 786:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 787:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 788:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 789:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 790:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 791:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 792:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 793:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 794:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 795:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 799:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 800:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 801:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 803:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 805:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 807:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 813:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 814:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 815:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 816:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 817:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 818:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 819:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 820:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 821:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 822:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 823:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 824:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 825:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 826:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 827:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 828:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 829:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 830:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 831:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 832:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 833:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 834:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 835:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 836:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 837:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 838:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 839:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 840:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 841:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 842:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 843:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 844:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 845:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 846:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 847:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 848:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 849:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 850:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 851:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 852:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 853:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 854:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 855:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 856:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 857:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 858:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 859:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 860:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 861:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 862:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 863:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 864:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 865:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 866:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 867:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 868:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 869:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 870:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 871:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 872:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 873:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 874:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 875:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 876:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 877:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 878:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 879:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 880:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 881:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 882:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 883:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 884:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 885:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 886:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 887:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 888:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 889:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 890:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 893:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 894:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 895:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 896:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 897:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 898:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 899:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 900:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 901:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 902:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 903:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 904:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 905:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 906:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 907:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 908:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 910:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 911:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 912:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 913:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 914:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 915:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 916:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 917:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 918:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 919:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 920:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
 926:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 927:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 928:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 929:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
 930:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 933:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
 935:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
 936:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
 937:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 938:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
 939:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 940:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 941:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 942:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 943:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 944:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 945:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
 946:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 947:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 948:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 949:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
 950:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 951:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 952:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
 953:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 954:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
 955:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 956:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 957:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 958:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 959:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 960:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 961:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 962:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
 963:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
 964:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 965:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 966:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 967:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
 968:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
 969:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 970:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
 973:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
 975:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
 977:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
 979:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
 980:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 981:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 982:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
 983:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
 984:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
 985:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 986:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 987:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 988:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
 989:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
 990:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 991:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
 992:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 993:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
 994:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
 995:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
 996:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
 997:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
 998:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 999:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1000:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1001:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1002:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1003:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1004:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1005:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1006:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1007:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1008:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1009:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1010:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1011:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1012:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1013:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1014:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1015:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1016:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1017:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1018:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1019:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1020:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1021:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1022:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1023:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1024:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1025:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1026:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1027:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1028:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1029:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1030:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1031:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1032:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1033:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1034:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1035:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1036:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1037:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1038:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1039:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1040:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1041:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1042:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1043:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1044:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1045:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1046:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1047:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value 
1048:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1049:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1050:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1051:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1052:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1053:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1054:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1055:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1056:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1057:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1058:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1059:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1060:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1061:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1062:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1063:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1064:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1065:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1066:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1067:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1068:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1069:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1070:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1071:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1072:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1073:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1074:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1075:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1081:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1082:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1083:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1084:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1085:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1086:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1087:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1088:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1089:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1090:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1091:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1092:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1093:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1094:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1095:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1096:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1097:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1098:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1099:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1100:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1101:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1102:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1103:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1104:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1105:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1106:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1107:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1108:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1109:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1110:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1111:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1112:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1113:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1114:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1115:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1116:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1117:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1118:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
  79              	 .loc 2 1118 0
  80              	 .cfi_startproc
  81 0000 80B5     	 push {r7,lr}
  82              	.LCFI3:
  83              	 .cfi_def_cfa_offset 8
  84              	 .cfi_offset 7,-8
  85              	 .cfi_offset 14,-4
  86 0002 82B0     	 sub sp,sp,#8
  87              	.LCFI4:
  88              	 .cfi_def_cfa_offset 16
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI5:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
  93 0008 3960     	 str r1,[r7]
1119:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
  94              	 .loc 2 1119 0
  95 000a 7B68     	 ldr r3,[r7,#4]
  96 000c 1A6C     	 ldr r2,[r3,#64]
  97 000e 3B68     	 ldr r3,[r7]
  98 0010 1A43     	 orr r2,r3
  99 0012 7B68     	 ldr r3,[r7,#4]
 100 0014 1A64     	 str r2,[r3,#64]
1120:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 101              	 .loc 2 1120 0
 102 0016 BD46     	 mov sp,r7
 103 0018 02B0     	 add sp,sp,#8
 104              	 
 105 001a 80BD     	 pop {r7,pc}
 106              	 .cfi_endproc
 107              	.LFE74:
 109              	 .section .text.XMC_USIC_CH_DisableEvent,"ax",%progbits
 110              	 .align 2
 111              	 .code 16
 112              	 .thumb_func
 114              	XMC_USIC_CH_DisableEvent:
 115              	.LFB75:
1121:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1122:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1123:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1124:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1125:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1126:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1127:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1128:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1129:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1130:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1131:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1132:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1133:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1134:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1135:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1136:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1137:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
1138:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1139:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 116              	 .loc 2 1139 0
 117              	 .cfi_startproc
 118 0000 80B5     	 push {r7,lr}
 119              	.LCFI6:
 120              	 .cfi_def_cfa_offset 8
 121              	 .cfi_offset 7,-8
 122              	 .cfi_offset 14,-4
 123 0002 82B0     	 sub sp,sp,#8
 124              	.LCFI7:
 125              	 .cfi_def_cfa_offset 16
 126 0004 00AF     	 add r7,sp,#0
 127              	.LCFI8:
 128              	 .cfi_def_cfa_register 7
 129 0006 7860     	 str r0,[r7,#4]
 130 0008 3960     	 str r1,[r7]
1140:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
 131              	 .loc 2 1140 0
 132 000a 7B68     	 ldr r3,[r7,#4]
 133 000c 1B6C     	 ldr r3,[r3,#64]
 134 000e 3A68     	 ldr r2,[r7]
 135 0010 D243     	 mvn r2,r2
 136 0012 1A40     	 and r2,r3
 137 0014 7B68     	 ldr r3,[r7,#4]
 138 0016 1A64     	 str r2,[r3,#64]
1141:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 139              	 .loc 2 1141 0
 140 0018 BD46     	 mov sp,r7
 141 001a 02B0     	 add sp,sp,#8
 142              	 
 143 001c 80BD     	 pop {r7,pc}
 144              	 .cfi_endproc
 145              	.LFE75:
 147 001e C046     	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
 148              	 .align 2
 149              	 .code 16
 150              	 .thumb_func
 152              	XMC_USIC_CH_GetTransmitBufferStatus:
 153              	.LFB76:
1142:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1143:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1144:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1145:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1146:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1147:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1148:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1149:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1150:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1151:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1152:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1153:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1154:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1155:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1156:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1157:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1158:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1159:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1160:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1161:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1162:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1163:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1164:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1165:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1166:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1167:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1168:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1169:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1170:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1171:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1172:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1173:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1174:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1175:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1176:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1177:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1178:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1179:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1180:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1181:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1182:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1183:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 154              	 .loc 2 1183 0
 155              	 .cfi_startproc
 156 0000 80B5     	 push {r7,lr}
 157              	.LCFI9:
 158              	 .cfi_def_cfa_offset 8
 159              	 .cfi_offset 7,-8
 160              	 .cfi_offset 14,-4
 161 0002 82B0     	 sub sp,sp,#8
 162              	.LCFI10:
 163              	 .cfi_def_cfa_offset 16
 164 0004 00AF     	 add r7,sp,#0
 165              	.LCFI11:
 166              	 .cfi_def_cfa_register 7
 167 0006 7860     	 str r0,[r7,#4]
1184:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
 168              	 .loc 2 1184 0
 169 0008 7B68     	 ldr r3,[r7,#4]
 170 000a 9B6B     	 ldr r3,[r3,#56]
 171 000c DBB2     	 uxtb r3,r3
 172 000e 7F22     	 mov r2,#127
 173 0010 9343     	 bic r3,r2
 174 0012 DBB2     	 uxtb r3,r3
1185:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 175              	 .loc 2 1185 0
 176 0014 181C     	 mov r0,r3
 177 0016 BD46     	 mov sp,r7
 178 0018 02B0     	 add sp,sp,#8
 179              	 
 180 001a 80BD     	 pop {r7,pc}
 181              	 .cfi_endproc
 182              	.LFE76:
 184              	 .section .text.XMC_USIC_CH_TriggerServiceRequest,"ax",%progbits
 185              	 .align 2
 186              	 .code 16
 187              	 .thumb_func
 189              	XMC_USIC_CH_TriggerServiceRequest:
 190              	.LFB84:
1186:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1187:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1188:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1189:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1190:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1191:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1192:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1193:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1194:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1195:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1196:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1197:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1198:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1199:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1200:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1201:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1202:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1203:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1204:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1205:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1206:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1207:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1208:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1209:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1210:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1211:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1216:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1217:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1218:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1219:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1220:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1221:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1222:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1223:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1224:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1225:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1226:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1228:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1230:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1231:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1232:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1233:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1236:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1237:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1238:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1239:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1240:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1241:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1245:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1246:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1247:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1248:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1249:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1250:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1251:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1252:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1253:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1254:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1255:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1256:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1257:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1258:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1259:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1260:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1261:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1262:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1263:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1264:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1265:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1266:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1267:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1268:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1269:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1270:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1271:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1272:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1273:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1274:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1275:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1276:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1277:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1278:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1279:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1280:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1281:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1282:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1283:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1284:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1285:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1286:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1287:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1288:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1289:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1290:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1291:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1292:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1293:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1294:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1295:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1296:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1297:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1298:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1299:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1300:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1301:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1302:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1303:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1304:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1305:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1306:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1307:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1308:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1309:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1310:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1311:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1312:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1313:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1314:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1315:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1316:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1317:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1318:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1319:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1320:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1321:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1322:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1323:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1324:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1325:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1326:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1327:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1328:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1329:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1330:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1331:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1332:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1333:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1334:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1335:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1336:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1337:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1338:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1339:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1340:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1341:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1342:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1343:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1344:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1345:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1346:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1347:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1348:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1349:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 191              	 .loc 2 1349 0
 192              	 .cfi_startproc
 193 0000 80B5     	 push {r7,lr}
 194              	.LCFI12:
 195              	 .cfi_def_cfa_offset 8
 196              	 .cfi_offset 7,-8
 197              	 .cfi_offset 14,-4
 198 0002 82B0     	 sub sp,sp,#8
 199              	.LCFI13:
 200              	 .cfi_def_cfa_offset 16
 201 0004 00AF     	 add r7,sp,#0
 202              	.LCFI14:
 203              	 .cfi_def_cfa_register 7
 204 0006 7860     	 str r0,[r7,#4]
 205 0008 3960     	 str r1,[r7]
1350:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
 206              	 .loc 2 1350 0
 207 000a 3B68     	 ldr r3,[r7]
 208 000c 8022     	 mov r2,#128
 209 000e 5202     	 lsl r2,r2,#9
 210 0010 9A40     	 lsl r2,r2,r3
 211 0012 7B68     	 ldr r3,[r7,#4]
 212 0014 9A66     	 str r2,[r3,#104]
1351:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 213              	 .loc 2 1351 0
 214 0016 BD46     	 mov sp,r7
 215 0018 02B0     	 add sp,sp,#8
 216              	 
 217 001a 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE84:
 221              	 .section .text.XMC_USIC_CH_TXFIFO_EnableEvent,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_USIC_CH_TXFIFO_EnableEvent:
 227              	.LFB87:
1352:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1353:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1354:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1355:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1356:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1357:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1358:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1359:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1360:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1361:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1362:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1363:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1364:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1365:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1366:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1367:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1368:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1369:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1370:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1371:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1372:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1373:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1374:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1375:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1376:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1377:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1378:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1379:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1380:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1381:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1382:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1383:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1384:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1385:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1386:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1387:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1388:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1389:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1390:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1391:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1392:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1393:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1394:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1395:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1396:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1397:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1398:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1399:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1400:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1401:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1402:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1403:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1404:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1405:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1406:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1407:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1408:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1409:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1410:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1411:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1412:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1413:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1414:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1415:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1416:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1417:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1418:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1419:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1420:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1421:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1422:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1423:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1424:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1425:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1426:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1427:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1428:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1429:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1430:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1431:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1432:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1433:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1434:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1435:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1436:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1437:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1438:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1439:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1440:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1441:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1442:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1443:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1444:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1445:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1446:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1447:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1448:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1449:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1450:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1451:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1452:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1453:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1454:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1455:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1456:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1457:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1458:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1459:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1460:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1461:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1462:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1463:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 228              	 .loc 2 1463 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI15:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI16:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI17:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 3960     	 str r1,[r7]
1464:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
 243              	 .loc 2 1464 0
 244 000a 7A68     	 ldr r2,[r7,#4]
 245 000c 8423     	 mov r3,#132
 246 000e 5B00     	 lsl r3,r3,#1
 247 0010 D258     	 ldr r2,[r2,r3]
 248 0012 3B68     	 ldr r3,[r7]
 249 0014 1A43     	 orr r2,r3
 250 0016 111C     	 mov r1,r2
 251 0018 7A68     	 ldr r2,[r7,#4]
 252 001a 8423     	 mov r3,#132
 253 001c 5B00     	 lsl r3,r3,#1
 254 001e D150     	 str r1,[r2,r3]
1465:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 255              	 .loc 2 1465 0
 256 0020 BD46     	 mov sp,r7
 257 0022 02B0     	 add sp,sp,#8
 258              	 
 259 0024 80BD     	 pop {r7,pc}
 260              	 .cfi_endproc
 261              	.LFE87:
 263 0026 C046     	 .section .text.XMC_USIC_CH_TXFIFO_DisableEvent,"ax",%progbits
 264              	 .align 2
 265              	 .code 16
 266              	 .thumb_func
 268              	XMC_USIC_CH_TXFIFO_DisableEvent:
 269              	.LFB88:
1466:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1467:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1468:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1469:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1470:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1471:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1472:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1473:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1474:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1475:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1476:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1477:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1478:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1479:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1480:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1481:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1482:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1483:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1484:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1485:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 270              	 .loc 2 1485 0
 271              	 .cfi_startproc
 272 0000 80B5     	 push {r7,lr}
 273              	.LCFI18:
 274              	 .cfi_def_cfa_offset 8
 275              	 .cfi_offset 7,-8
 276              	 .cfi_offset 14,-4
 277 0002 82B0     	 sub sp,sp,#8
 278              	.LCFI19:
 279              	 .cfi_def_cfa_offset 16
 280 0004 00AF     	 add r7,sp,#0
 281              	.LCFI20:
 282              	 .cfi_def_cfa_register 7
 283 0006 7860     	 str r0,[r7,#4]
 284 0008 3960     	 str r1,[r7]
1486:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
 285              	 .loc 2 1486 0
 286 000a 7A68     	 ldr r2,[r7,#4]
 287 000c 8423     	 mov r3,#132
 288 000e 5B00     	 lsl r3,r3,#1
 289 0010 D358     	 ldr r3,[r2,r3]
 290 0012 3A68     	 ldr r2,[r7]
 291 0014 D243     	 mvn r2,r2
 292 0016 1A40     	 and r2,r3
 293 0018 111C     	 mov r1,r2
 294 001a 7A68     	 ldr r2,[r7,#4]
 295 001c 8423     	 mov r3,#132
 296 001e 5B00     	 lsl r3,r3,#1
 297 0020 D150     	 str r1,[r2,r3]
1487:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 298              	 .loc 2 1487 0
 299 0022 BD46     	 mov sp,r7
 300 0024 02B0     	 add sp,sp,#8
 301              	 
 302 0026 80BD     	 pop {r7,pc}
 303              	 .cfi_endproc
 304              	.LFE88:
 306              	 .section .text.XMC_USIC_CH_TXFIFO_Flush,"ax",%progbits
 307              	 .align 2
 308              	 .code 16
 309              	 .thumb_func
 311              	XMC_USIC_CH_TXFIFO_Flush:
 312              	.LFB92:
1488:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1489:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1490:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1491:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1492:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1493:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1494:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1495:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1496:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1497:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1498:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1499:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1500:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1501:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1502:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1503:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1504:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1505:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1506:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1507:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1508:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1509:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1510:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1511:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1512:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1513:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1514:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1515:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1516:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1517:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1518:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1519:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1520:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1521:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1522:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1523:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1524:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1525:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1526:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1527:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1528:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1529:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1530:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1531:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1532:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1533:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1534:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1535:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1536:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1537:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1538:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1539:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1540:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1541:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1542:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1543:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1544:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1545:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1546:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1547:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1548:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1549:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1550:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1551:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1552:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1553:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1554:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1555:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1556:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1557:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1558:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1559:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1560:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1561:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1562:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1563:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1564:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1565:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1566:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1567:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1568:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1569:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1570:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1571:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1572:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1573:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1574:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1575:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1576:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1577:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1578:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1579:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1580:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1581:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1582:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1583:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1584:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1585:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1586:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1587:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1588:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1589:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1590:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1591:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1592:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1593:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1594:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1595:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1596:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1597:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1598:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 313              	 .loc 2 1598 0
 314              	 .cfi_startproc
 315 0000 80B5     	 push {r7,lr}
 316              	.LCFI21:
 317              	 .cfi_def_cfa_offset 8
 318              	 .cfi_offset 7,-8
 319              	 .cfi_offset 14,-4
 320 0002 82B0     	 sub sp,sp,#8
 321              	.LCFI22:
 322              	 .cfi_def_cfa_offset 16
 323 0004 00AF     	 add r7,sp,#0
 324              	.LCFI23:
 325              	 .cfi_def_cfa_register 7
 326 0006 7860     	 str r0,[r7,#4]
1599:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
 327              	 .loc 2 1599 0
 328 0008 7A68     	 ldr r2,[r7,#4]
 329 000a 8C23     	 mov r3,#140
 330 000c 5B00     	 lsl r3,r3,#1
 331 000e 8021     	 mov r1,#128
 332 0010 0902     	 lsl r1,r1,#8
 333 0012 D150     	 str r1,[r2,r3]
1600:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 334              	 .loc 2 1600 0
 335 0014 BD46     	 mov sp,r7
 336 0016 02B0     	 add sp,sp,#8
 337              	 
 338 0018 80BD     	 pop {r7,pc}
 339              	 .cfi_endproc
 340              	.LFE92:
 342 001a C046     	 .section .text.XMC_USIC_CH_TXFIFO_IsFull,"ax",%progbits
 343              	 .align 2
 344              	 .code 16
 345              	 .thumb_func
 347              	XMC_USIC_CH_TXFIFO_IsFull:
 348              	.LFB93:
1601:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1602:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1603:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1604:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1605:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1606:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1607:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1608:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1609:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1610:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1611:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1612:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1613:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1614:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1615:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1616:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1617:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 349              	 .loc 2 1617 0
 350              	 .cfi_startproc
 351 0000 80B5     	 push {r7,lr}
 352              	.LCFI24:
 353              	 .cfi_def_cfa_offset 8
 354              	 .cfi_offset 7,-8
 355              	 .cfi_offset 14,-4
 356 0002 82B0     	 sub sp,sp,#8
 357              	.LCFI25:
 358              	 .cfi_def_cfa_offset 16
 359 0004 00AF     	 add r7,sp,#0
 360              	.LCFI26:
 361              	 .cfi_def_cfa_register 7
 362 0006 7860     	 str r0,[r7,#4]
1618:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
 363              	 .loc 2 1618 0
 364 0008 7A68     	 ldr r2,[r7,#4]
 365 000a 8A23     	 mov r3,#138
 366 000c 5B00     	 lsl r3,r3,#1
 367 000e D258     	 ldr r2,[r2,r3]
 368 0010 8023     	 mov r3,#128
 369 0012 5B01     	 lsl r3,r3,#5
 370 0014 1340     	 and r3,r2
 371 0016 5A1E     	 sub r2,r3,#1
 372 0018 9341     	 sbc r3,r3,r2
 373 001a DBB2     	 uxtb r3,r3
1619:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 374              	 .loc 2 1619 0
 375 001c 181C     	 mov r0,r3
 376 001e BD46     	 mov sp,r7
 377 0020 02B0     	 add sp,sp,#8
 378              	 
 379 0022 80BD     	 pop {r7,pc}
 380              	 .cfi_endproc
 381              	.LFE93:
 383              	 .section .text.XMC_USIC_CH_TXFIFO_IsEmpty,"ax",%progbits
 384              	 .align 2
 385              	 .code 16
 386              	 .thumb_func
 388              	XMC_USIC_CH_TXFIFO_IsEmpty:
 389              	.LFB94:
1620:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1621:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1622:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1623:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1624:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1625:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1626:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1627:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1628:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1629:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1630:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1631:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1632:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1633:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1635:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1637:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 390              	 .loc 2 1637 0
 391              	 .cfi_startproc
 392 0000 80B5     	 push {r7,lr}
 393              	.LCFI27:
 394              	 .cfi_def_cfa_offset 8
 395              	 .cfi_offset 7,-8
 396              	 .cfi_offset 14,-4
 397 0002 82B0     	 sub sp,sp,#8
 398              	.LCFI28:
 399              	 .cfi_def_cfa_offset 16
 400 0004 00AF     	 add r7,sp,#0
 401              	.LCFI29:
 402              	 .cfi_def_cfa_register 7
 403 0006 7860     	 str r0,[r7,#4]
1638:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
 404              	 .loc 2 1638 0
 405 0008 7A68     	 ldr r2,[r7,#4]
 406 000a 8A23     	 mov r3,#138
 407 000c 5B00     	 lsl r3,r3,#1
 408 000e D258     	 ldr r2,[r2,r3]
 409 0010 8023     	 mov r3,#128
 410 0012 1B01     	 lsl r3,r3,#4
 411 0014 1340     	 and r3,r2
 412 0016 5A1E     	 sub r2,r3,#1
 413 0018 9341     	 sbc r3,r3,r2
 414 001a DBB2     	 uxtb r3,r3
1639:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 415              	 .loc 2 1639 0
 416 001c 181C     	 mov r0,r3
 417 001e BD46     	 mov sp,r7
 418 0020 02B0     	 add sp,sp,#8
 419              	 
 420 0022 80BD     	 pop {r7,pc}
 421              	 .cfi_endproc
 422              	.LFE94:
 424              	 .section .text.XMC_USIC_CH_RXFIFO_EnableEvent,"ax",%progbits
 425              	 .align 2
 426              	 .code 16
 427              	 .thumb_func
 429              	XMC_USIC_CH_RXFIFO_EnableEvent:
 430              	.LFB98:
1640:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1645:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1646:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1647:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1648:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1649:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1650:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1651:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1652:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1653:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1654:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1655:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1656:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1658:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1661:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1662:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1663:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1664:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1665:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1666:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1667:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1668:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1669:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1670:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1671:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1672:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1673:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1675:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1676:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1677:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1678:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1679:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1680:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1681:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1682:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1683:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1684:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1685:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1686:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1687:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1688:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1689:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1690:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1691:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1692:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1693:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1694:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1695:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1696:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1697:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1698:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1699:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1700:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1701:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1702:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1703:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1704:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1705:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1706:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1710:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1711:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1712:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1713:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1714:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1715:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1716:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1717:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1718:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1719:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1720:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1721:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1722:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1723:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1724:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1725:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1727:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1728:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** */
1729:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1730:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1731:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1732:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1733:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1734:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1735:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1736:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1737:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1738:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1739:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1740:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1741:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1742:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1743:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1744:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1745:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1746:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1747:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1748:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1749:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1750:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1751:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1752:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1753:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1754:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1759:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1760:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1761:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1762:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1763:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1764:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1765:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1766:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1767:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1768:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1769:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1770:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1771:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1772:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1773:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1774:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 431              	 .loc 2 1774 0
 432              	 .cfi_startproc
 433 0000 80B5     	 push {r7,lr}
 434              	.LCFI30:
 435              	 .cfi_def_cfa_offset 8
 436              	 .cfi_offset 7,-8
 437              	 .cfi_offset 14,-4
 438 0002 82B0     	 sub sp,sp,#8
 439              	.LCFI31:
 440              	 .cfi_def_cfa_offset 16
 441 0004 00AF     	 add r7,sp,#0
 442              	.LCFI32:
 443              	 .cfi_def_cfa_register 7
 444 0006 7860     	 str r0,[r7,#4]
 445 0008 3960     	 str r1,[r7]
1775:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
 446              	 .loc 2 1775 0
 447 000a 7A68     	 ldr r2,[r7,#4]
 448 000c 8623     	 mov r3,#134
 449 000e 5B00     	 lsl r3,r3,#1
 450 0010 D258     	 ldr r2,[r2,r3]
 451 0012 3B68     	 ldr r3,[r7]
 452 0014 1A43     	 orr r2,r3
 453 0016 111C     	 mov r1,r2
 454 0018 7A68     	 ldr r2,[r7,#4]
 455 001a 8623     	 mov r3,#134
 456 001c 5B00     	 lsl r3,r3,#1
 457 001e D150     	 str r1,[r2,r3]
1776:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 458              	 .loc 2 1776 0
 459 0020 BD46     	 mov sp,r7
 460 0022 02B0     	 add sp,sp,#8
 461              	 
 462 0024 80BD     	 pop {r7,pc}
 463              	 .cfi_endproc
 464              	.LFE98:
 466 0026 C046     	 .section .text.XMC_USIC_CH_RXFIFO_DisableEvent,"ax",%progbits
 467              	 .align 2
 468              	 .code 16
 469              	 .thumb_func
 471              	XMC_USIC_CH_RXFIFO_DisableEvent:
 472              	.LFB99:
1777:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1778:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1779:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1780:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1781:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1782:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1783:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1784:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1785:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1786:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1787:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1788:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1789:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1790:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1791:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1792:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1793:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1796:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1797:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1798:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 473              	 .loc 2 1798 0
 474              	 .cfi_startproc
 475 0000 80B5     	 push {r7,lr}
 476              	.LCFI33:
 477              	 .cfi_def_cfa_offset 8
 478              	 .cfi_offset 7,-8
 479              	 .cfi_offset 14,-4
 480 0002 82B0     	 sub sp,sp,#8
 481              	.LCFI34:
 482              	 .cfi_def_cfa_offset 16
 483 0004 00AF     	 add r7,sp,#0
 484              	.LCFI35:
 485              	 .cfi_def_cfa_register 7
 486 0006 7860     	 str r0,[r7,#4]
 487 0008 3960     	 str r1,[r7]
1799:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
 488              	 .loc 2 1799 0
 489 000a 7A68     	 ldr r2,[r7,#4]
 490 000c 8623     	 mov r3,#134
 491 000e 5B00     	 lsl r3,r3,#1
 492 0010 D358     	 ldr r3,[r2,r3]
 493 0012 3A68     	 ldr r2,[r7]
 494 0014 D243     	 mvn r2,r2
 495 0016 1A40     	 and r2,r3
 496 0018 111C     	 mov r1,r2
 497 001a 7A68     	 ldr r2,[r7,#4]
 498 001c 8623     	 mov r3,#134
 499 001e 5B00     	 lsl r3,r3,#1
 500 0020 D150     	 str r1,[r2,r3]
1800:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 501              	 .loc 2 1800 0
 502 0022 BD46     	 mov sp,r7
 503 0024 02B0     	 add sp,sp,#8
 504              	 
 505 0026 80BD     	 pop {r7,pc}
 506              	 .cfi_endproc
 507              	.LFE99:
 509              	 .section .text.XMC_USIC_CH_RXFIFO_Flush,"ax",%progbits
 510              	 .align 2
 511              	 .code 16
 512              	 .thumb_func
 514              	XMC_USIC_CH_RXFIFO_Flush:
 515              	.LFB101:
1801:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1802:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1803:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1804:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1805:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1806:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1807:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1808:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1809:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1810:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1811:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1812:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1813:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1814:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1815:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1816:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1817:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1818:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1819:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1820:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1821:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1822:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1823:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1824:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1825:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1826:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1827:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1828:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1829:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1830:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1831:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1832:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1833:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1834:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1835:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1836:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1837:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1838:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1839:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1840:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1841:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1842:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1843:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1844:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1845:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1846:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1847:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1848:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1849:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1850:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1851:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1852:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1853:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1854:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1855:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1856:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1857:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1858:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1859:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1860:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1861:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1862:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1863:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1864:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 516              	 .loc 2 1864 0
 517              	 .cfi_startproc
 518 0000 80B5     	 push {r7,lr}
 519              	.LCFI36:
 520              	 .cfi_def_cfa_offset 8
 521              	 .cfi_offset 7,-8
 522              	 .cfi_offset 14,-4
 523 0002 82B0     	 sub sp,sp,#8
 524              	.LCFI37:
 525              	 .cfi_def_cfa_offset 16
 526 0004 00AF     	 add r7,sp,#0
 527              	.LCFI38:
 528              	 .cfi_def_cfa_register 7
 529 0006 7860     	 str r0,[r7,#4]
1865:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
 530              	 .loc 2 1865 0
 531 0008 7A68     	 ldr r2,[r7,#4]
 532 000a 8C23     	 mov r3,#140
 533 000c 5B00     	 lsl r3,r3,#1
 534 000e 8021     	 mov r1,#128
 535 0010 C901     	 lsl r1,r1,#7
 536 0012 D150     	 str r1,[r2,r3]
1866:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 537              	 .loc 2 1866 0
 538 0014 BD46     	 mov sp,r7
 539 0016 02B0     	 add sp,sp,#8
 540              	 
 541 0018 80BD     	 pop {r7,pc}
 542              	 .cfi_endproc
 543              	.LFE101:
 545 001a C046     	 .section .text.XMC_USIC_CH_RXFIFO_IsEmpty,"ax",%progbits
 546              	 .align 2
 547              	 .code 16
 548              	 .thumb_func
 550              	XMC_USIC_CH_RXFIFO_IsEmpty:
 551              	.LFB103:
1867:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1868:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1869:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1870:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1871:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1872:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1873:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1874:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1875:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1876:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1877:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1878:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1879:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1880:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1881:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1882:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1883:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
1884:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1885:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
1886:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** 
1887:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** /**
1888:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1889:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1890:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1891:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1892:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  *
1893:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1894:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1895:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1896:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1897:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1898:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1899:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1900:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1901:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****  */
1902:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1903:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** {
 552              	 .loc 2 1903 0
 553              	 .cfi_startproc
 554 0000 80B5     	 push {r7,lr}
 555              	.LCFI39:
 556              	 .cfi_def_cfa_offset 8
 557              	 .cfi_offset 7,-8
 558              	 .cfi_offset 14,-4
 559 0002 82B0     	 sub sp,sp,#8
 560              	.LCFI40:
 561              	 .cfi_def_cfa_offset 16
 562 0004 00AF     	 add r7,sp,#0
 563              	.LCFI41:
 564              	 .cfi_def_cfa_register 7
 565 0006 7860     	 str r0,[r7,#4]
1904:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
 566              	 .loc 2 1904 0
 567 0008 7A68     	 ldr r2,[r7,#4]
 568 000a 8A23     	 mov r3,#138
 569 000c 5B00     	 lsl r3,r3,#1
 570 000e D358     	 ldr r3,[r2,r3]
 571 0010 0822     	 mov r2,#8
 572 0012 1340     	 and r3,r2
 573 0014 5A1E     	 sub r2,r3,#1
 574 0016 9341     	 sbc r3,r3,r2
 575 0018 DBB2     	 uxtb r3,r3
1905:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_usic.h **** }
 576              	 .loc 2 1905 0
 577 001a 181C     	 mov r0,r3
 578 001c BD46     	 mov sp,r7
 579 001e 02B0     	 add sp,sp,#8
 580              	 
 581 0020 80BD     	 pop {r7,pc}
 582              	 .cfi_endproc
 583              	.LFE103:
 585 0022 C046     	 .section .text.XMC_I2C_CH_SetInterruptNodePointer,"ax",%progbits
 586              	 .align 2
 587              	 .code 16
 588              	 .thumb_func
 590              	XMC_I2C_CH_SetInterruptNodePointer:
 591              	.LFB113:
 592              	 .file 3 "C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2017-10-27
   4:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *      
  42:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  51:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  53:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  54:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  55:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  56:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  57:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  58:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  59:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  60:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  61:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  62:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  63:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  64:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  65:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  66:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  68:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  69:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  70:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  71:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  72:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2017-10-25:
  74:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableMasterClock() and XMC_I2C_CH_DisableMasterClock()
  75:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  77:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  79:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  80:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
  81:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  82:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  83:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
  84:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
  85:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
  86:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
  87:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
  88:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
  89:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
  90:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
  91:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
  92:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
  93:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  94:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
  95:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
  96:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
  97:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family. 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  99:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
 100:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
 101:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
 102:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
 103:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 104:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 106:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 107:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 108:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 109:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 110:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 111:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 112:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 113:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 114:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 115:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 116:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 117:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 118:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 119:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 120:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 121:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 122:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 124:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 125:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 126:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 127:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 128:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 130:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 131:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 132:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 133:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 134:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 135:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 136:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 137:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 138:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 139:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 140:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 141:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 142:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 143:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 144:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 145:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 146:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 147:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 148:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 149:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 150:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 151:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 152:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 153:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 154:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 155:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 156:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 157:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 158:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 159:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 160:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 161:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 162:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 163:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 164:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 165:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 166:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 167:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 168:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 169:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 170:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 171:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 172:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 173:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 174:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 175:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 176:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 177:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 178:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 179:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 180:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 181:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 182:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 183:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 184:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 185:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 186:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 187:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 189:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 190:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 191:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 192:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 193:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 194:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 195:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 197:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 198:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 199:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 200:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 201:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 203:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 204:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 206:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 212:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 213:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 214:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 215:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 216:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 217:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 218:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 219:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 221:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 222:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 223:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 224:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 226:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 227:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 229:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 230:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 231:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 232:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 233:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 234:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 235:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 236:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 237:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 238:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 239:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 240:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 241:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 242:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 243:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 244:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 245:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 246:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 247:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 248:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 249:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 250:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 251:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 252:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 253:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 254:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 255:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 256:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 257:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 258:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address 
 260:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 261:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 262:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 263:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 264:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 265:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 266:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 267:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 269:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 270:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 271:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 272:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 273:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 274:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 275:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 276:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 277:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 278:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 279:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 280:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 281:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 282:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 283:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 284:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 285:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 286:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 287:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 288:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 289:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config);
 290:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 291:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 292:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 293:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 294:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 295:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 296:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 297:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 298:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 299:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 300:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 301:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 302:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 303:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 304:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 305:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 306:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 307:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 308:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 309:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 310:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 311:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 312:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 313:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 314:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 315:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 316:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 317:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 318:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 319:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 320:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 321:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 322:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 323:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 324:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 325:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** }
 326:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 327:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 328:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 329:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 330:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return @ref XMC_I2C_CH_STATUS_t<br>
 331:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 332:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 333:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C \a channel.<br>
 334:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 335:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 336:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation to IDLE mode using CCR register.
 337:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 338:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 339:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 340:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 341:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel);
 342:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 343:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 344:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 345:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number in the range of 0-5
 346:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 347:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 348:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 349:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for protocol interrupt.<br>
 350:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 351:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 352:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * To generate interrupt for an event, node pointer should be configured with service request numbe
 353:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 354:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 355:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 356:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * NVIC node should be separately enabled to generate the interrupt. After setting the node pointer
 357:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 358:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 359:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent(), NVIC_SetPriority(), NVIC_EnableIRQ(), XMC_I2C_CH_SetInputSource()<br>
 360:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 361:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 362:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                                                         const uint8_t service_request)
 363:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 593              	 .loc 3 363 0
 594              	 .cfi_startproc
 595 0000 80B5     	 push {r7,lr}
 596              	.LCFI42:
 597              	 .cfi_def_cfa_offset 8
 598              	 .cfi_offset 7,-8
 599              	 .cfi_offset 14,-4
 600 0002 82B0     	 sub sp,sp,#8
 601              	.LCFI43:
 602              	 .cfi_def_cfa_offset 16
 603 0004 00AF     	 add r7,sp,#0
 604              	.LCFI44:
 605              	 .cfi_def_cfa_register 7
 606 0006 7860     	 str r0,[r7,#4]
 607 0008 0A1C     	 mov r2,r1
 608 000a FB1C     	 add r3,r7,#3
 609 000c 1A70     	 strb r2,[r3]
 364:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, service
 610              	 .loc 3 364 0
 611 000e FB1C     	 add r3,r7,#3
 612 0010 1B78     	 ldrb r3,[r3]
 613 0012 7A68     	 ldr r2,[r7,#4]
 614 0014 101C     	 mov r0,r2
 615 0016 1021     	 mov r1,#16
 616 0018 1A1C     	 mov r2,r3
 617 001a FFF7FEFF 	 bl XMC_USIC_CH_SetInterruptNodePointer
 365:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** }
 618              	 .loc 3 365 0
 619 001e BD46     	 mov sp,r7
 620 0020 02B0     	 add sp,sp,#8
 621              	 
 622 0022 80BD     	 pop {r7,pc}
 623              	 .cfi_endproc
 624              	.LFE113:
 626              	 .section .text.XMC_I2C_CH_GetStatusFlag,"ax",%progbits
 627              	 .align 2
 628              	 .code 16
 629              	 .thumb_func
 631              	XMC_I2C_CH_GetStatusFlag:
 632              	.LFB118:
 366:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 367:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 368:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 369:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 370:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				  \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref XM
 371:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 372:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: @ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 373:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  			@ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 374:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number.\n
 375:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: 0 to 5.
 376:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 377:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 378:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 379:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for USIC channel events. \n\n
 380:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 381:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 382:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 383:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 384:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 385:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent() \n\n\n
 386:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 387:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 388:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                                                            const XMC_I2C_CH_INTERRUPT_NODE_POINTER_
 389:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****                                                            const uint32_t service_request)
 390:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 391:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 392:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 		                                       (uint32_t)service_request);
 393:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** }
 394:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 395:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 396:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 397:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				   \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref X
 398:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 399:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 			\b Range: 0 to 5.
 400:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 401:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 402:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 403:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Trigger a I2C interrupt service request.\n\n
 404:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * When the I2C service request is triggered, the NVIC interrupt associated with it will be
 405:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * generated if enabled.
 406:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 407:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 408:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SelectInterruptNodePointer() \n\n\n
 409:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 410:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t 
 411:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 412:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 413:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** }
 414:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 415:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 416:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 417:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param input I2C channel input stage of type @ref XMC_I2C_CH_INPUT_t
 418:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param source Input source select for the input stage(0->DX0A, 1->DX1A, .. 7->DX7G)
 419:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 420:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 421:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 422:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the input source for I2C \a channel.<br>
 423:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Defines the input stage for the corresponding input line.
 424:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 425:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note After configuring the input source for corresponding channel, interrupt node pointer is se
 426:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 427:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 428:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetInptSource(), XMC_USIC_CH_SetInterruptNodePointer()
 429:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 430:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 431:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_INPUT
 432:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 433:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->DXCR[input] =  (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_INSW_Msk)) | USIC_CH_DX
 434:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 435:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** }
 436:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 437:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 438:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 439:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param address I2C slave address
 440:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 441:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 442:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 443:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the I2C \a channel slave address.<br>
 444:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 445:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 446:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Address is set in PCR_IICMode register by checking if it is in 10-bit address group or 7-bit add
 447:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is 10-bit mode otherwis
 448:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address should include an additional bit at the LSB for read/write indication. For
 449:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. A 10-bit address should be provided with the identifier 0b11110xx at the mo
 450:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * address 0x305 should be provided as 0x7b05(bitwise OR with 0x7800).
 451:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 452:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 453:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetSlaveAddress()\n\n
 454:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 455:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address);
 456:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 457:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 458:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel handler of type @ref XMC_USIC_CH_t
 459:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint16_t Slave address<br>
 460:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 461:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 462:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the I2C \a channel slave address.<br>
 463:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 464:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 465:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Returns the address using PCR_IICMode register by checking if it is in 10-bit address group or 7
 466:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is considered as 10-bit
 467:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address will include an additional bit at the LSB. For example, address 0x05 will 
 468:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * 10-bit address will not include the 10-bit address identifier 0b11110xx at the most signifcant b
 469:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 470:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 471:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SetSlaveAddress()\n\n
 472:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 473:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel);
 474:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 475:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 476:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 477:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 478:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 479:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 480:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 481:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 482:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C master \a channel.<br>
 483:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 484:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 485:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Start condition with read/write command by updating IN/TBUF register based on FIFO/non
 486:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 487:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 488:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 489:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 490:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 491:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 492:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 493:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 494:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 495:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 496:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 497:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 498:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 499:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 500:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 501:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 502:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 503:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition from I2C master \a channel.<br>
 504:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 505:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 506:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition with read/write command by updating IN/TBUF register based on
 507:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 508:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 509:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 510:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 511:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 512:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 513:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 514:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 515:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 516:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 517:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 518:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 519:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 520:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 521:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 522:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C master \a channel.<br>
 523:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 524:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 525:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on F
 526:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 527:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 528:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 529:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 530:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel);
 531:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 532:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 533:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 534:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 535:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 536:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 537:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 538:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C master \a channel.<br>
 539:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 540:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 541:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 542:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 543:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 544:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 545:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 546:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 547:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 548:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 549:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 550:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 551:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 552:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 553:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 554:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C slave \a channel.<br>
 555:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 556:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 557:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 558:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 559:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 560:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(),XMC_I2C_CH_ClearStatusFlag()\n\n
 561:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 562:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 563:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 564:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 565:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 566:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 567:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 568:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 569:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Ack request from I2C master \a channel.<br>
 570:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 571:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 572:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FIF
 573:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 574:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 575:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 576:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 577:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel);
 578:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 579:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 580:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 581:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 582:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 583:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 584:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Nack request from I2C master \a channel.<br>
 585:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 586:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 587:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 588:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 589:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 590:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 591:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 592:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel);
 593:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 594:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 595:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 596:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t OUTR/RBUF register data<br>
 597:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 598:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 599:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the data from I2C \a channel.<br>
 600:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 601:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 602:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Data is read by using OUTR/RBUF register based on FIFO/non-FIFO modes.
 603:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 604:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 605:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 606:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 607:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel);
 608:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 609:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 610:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 611:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t Receiver status flag<br>
 612:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 613:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 614:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the receiver status of I2C \a channel using RBUF register of bits 8-12 which gives informat
 615:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 616:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 617:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 618:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 619:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint8_t XMC_I2C_CH_GetReceiverStatusFlag(XMC_USIC_CH_t *const channel)
 620:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 621:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   return((uint8_t)((channel->RBUF) >> 8U));
 622:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** }
 623:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 624:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 625:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 626:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 627:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 628:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 629:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 630:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Enables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 631:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 632:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 633:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_DisableEvent()\n\n
 634:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 635:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 636:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 637:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 638:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 639:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 640:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 641:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 642:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 643:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Disables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 644:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 645:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 646:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent()\n\n
 647:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 648:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 649:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 650:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 651:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 652:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint32_t Status byte<br>
 653:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 654:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 655:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Retrieves the status byte of I2C \a channel using PSR_IICMode register.\n
 656:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 657:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 658:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_ClearStatusFlag()\n\n
 659:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 660:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint32_t XMC_I2C_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 661:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 633              	 .loc 3 661 0
 634              	 .cfi_startproc
 635 0000 80B5     	 push {r7,lr}
 636              	.LCFI45:
 637              	 .cfi_def_cfa_offset 8
 638              	 .cfi_offset 7,-8
 639              	 .cfi_offset 14,-4
 640 0002 82B0     	 sub sp,sp,#8
 641              	.LCFI46:
 642              	 .cfi_def_cfa_offset 16
 643 0004 00AF     	 add r7,sp,#0
 644              	.LCFI47:
 645              	 .cfi_def_cfa_register 7
 646 0006 7860     	 str r0,[r7,#4]
 662:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   return (channel->PSR_IICMode);
 647              	 .loc 3 662 0
 648 0008 7B68     	 ldr r3,[r7,#4]
 649 000a 9B6C     	 ldr r3,[r3,#72]
 663:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** }
 650              	 .loc 3 663 0
 651 000c 181C     	 mov r0,r3
 652 000e BD46     	 mov sp,r7
 653 0010 02B0     	 add sp,sp,#8
 654              	 
 655 0012 80BD     	 pop {r7,pc}
 656              	 .cfi_endproc
 657              	.LFE118:
 659              	 .section .text.XMC_I2C_CH_ClearStatusFlag,"ax",%progbits
 660              	 .align 2
 661              	 .code 16
 662              	 .thumb_func
 664              	XMC_I2C_CH_ClearStatusFlag:
 665              	.LFB119:
 664:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** 
 665:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 666:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 667:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param flag Status flag
 668:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 669:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 670:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 671:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * Clears the status flag of I2C \a channel by setting the input parameter \a flag in PSCR register
 672:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 673:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 674:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetStatusFlag()\n\n
 675:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 676:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, uint32_t flag)
 677:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** {
 666              	 .loc 3 677 0
 667              	 .cfi_startproc
 668 0000 80B5     	 push {r7,lr}
 669              	.LCFI48:
 670              	 .cfi_def_cfa_offset 8
 671              	 .cfi_offset 7,-8
 672              	 .cfi_offset 14,-4
 673 0002 82B0     	 sub sp,sp,#8
 674              	.LCFI49:
 675              	 .cfi_def_cfa_offset 16
 676 0004 00AF     	 add r7,sp,#0
 677              	.LCFI50:
 678              	 .cfi_def_cfa_register 7
 679 0006 7860     	 str r0,[r7,#4]
 680 0008 3960     	 str r1,[r7]
 678:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->PSCR |= flag;
 681              	 .loc 3 678 0
 682 000a 7B68     	 ldr r3,[r7,#4]
 683 000c DA6C     	 ldr r2,[r3,#76]
 684 000e 3B68     	 ldr r3,[r7]
 685 0010 1A43     	 orr r2,r3
 686 0012 7B68     	 ldr r3,[r7,#4]
 687 0014 DA64     	 str r2,[r3,#76]
 679:C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/XMCLib/inc\xmc_i2c.h **** }
 688              	 .loc 3 679 0
 689 0016 BD46     	 mov sp,r7
 690 0018 02B0     	 add sp,sp,#8
 691              	 
 692 001a 80BD     	 pop {r7,pc}
 693              	 .cfi_endproc
 694              	.LFE119:
 696              	 .section .text.I2C_MASTER_SetRXFIFOTriggerLimit,"ax",%progbits
 697              	 .align 2
 698              	 .code 16
 699              	 .thumb_func
 701              	I2C_MASTER_SetRXFIFOTriggerLimit:
 702              	.LFB129:
 703              	 .file 4 "../Dave/Generated/I2C_MASTER/i2c_master.h"
   1:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
   2:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @file i2c_master.h
   3:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @date 2017-12-20
   4:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
   5:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * NOTE:
   6:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * regenerated.
   8:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
   9:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
  10:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @cond
  11:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  12:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER v4.1.24 Configures USIC channel to transmit & receive data using I2C protocol.
  13:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  14:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  15:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * All rights reserved.
  16:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  17:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * following conditions are met:
  19:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  20:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  21:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * disclaimer.
  22:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  23:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  24:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * following disclaimer in the documentation and/or other materials provided with the distribution.
  25:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  26:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  27:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * products derived from this software without specific prior written permission.
  28:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  29:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  37:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  40:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  41:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Change History
  42:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * --------------
  43:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  44:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-02-16:
  45:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Initial version<br>
  46:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  47:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-06-10:
  48:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  49:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  50:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-08-31:
  51:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - DMA support APIs added
  52:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-10-20:
  53:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Code snippets updated
  54:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2016-08-18:
  55:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Documentation of slave address formatting improved.
  56:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2017-11-17:
  57:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Added tx_irqn and rx_irqn to I2C_MASTER_CONFIG_t
  58:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2017-12-20:
  59:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Added I2C_MASTER_FlushTxFifo(), I2C_MASTER_FlushRxFifo(), I2C_MASTER_DisableOutputs(), I2C
  60:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  61:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcond
  62:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  63:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
  64:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  65:../Dave/Generated/I2C_MASTER/i2c_master.h **** #ifndef I2C_MASTER_H
  66:../Dave/Generated/I2C_MASTER/i2c_master.h **** #define I2C_MASTER_H
  67:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  68:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  69:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  70:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
  71:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * HEADER FILES
  72:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  73:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include <xmc_gpio.h>
  74:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include <xmc_i2c.h>
  75:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include "i2c_master_conf.h"
  76:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  77:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if(UC_FAMILY == XMC4)
  78:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
  79:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include "GLOBAL_DMA/global_dma.h"
  80:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
  81:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
  82:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  83:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include <DAVE_Common.h>
  84:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  85:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  86:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef void(*i2c_master_fptr_cbhandler)(void);
  87:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  88:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
  89:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * MACROS
  90:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  91:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  92:../Dave/Generated/I2C_MASTER/i2c_master.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  93:../Dave/Generated/I2C_MASTER/i2c_master.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  94:../Dave/Generated/I2C_MASTER/i2c_master.h **** #error "I2C_MASTER requires XMC Peripheral Library v2.0.0 or higher"
  95:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
  96:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  97:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
  98:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * ENUMS
  99:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
 100:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 101:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @ingroup I2C_MASTER_enumerations
 102:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @{
 103:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 104:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 105:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Initialization status.
 106:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 107:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef enum I2C_MASTER_STATUS
 108:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 109:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_SUCCESS = 0U,           /*!< I2C_MASTER SUCCESS */
 110:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_FAILURE = 1U,           /*!< I2C_MASTER FAILURE */
 111:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_BUSY = 2U,              /*!< I2C_MASTER BUSY */
 112:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_UNSUPPORTED_MODE = 3U   /*!< I2C_MASTER UNSUPPORTED MODE */
 113:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_STATUS_t;
 114:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 115:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 116:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Direction
 117:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 118:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef enum I2C_MASTER_DIRECTION
 119:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 120:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_DIRECTION_TRANSMIT = 0U,   /*!< Direction indicates transmit */
 121:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_DIRECTION_RECEIVE = 1U     /*!< Direction indicates receive */
 122:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_DIRECTION_t;
 123:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 124:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 125:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 126:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 127:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef enum I2C_MASTER_TRANSFER_MODE
 128:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 129:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 130:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 131:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 132:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_TRANSFER_MODE_t;
 133:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 134:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @}
 135:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 136:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
 137:../Dave/Generated/I2C_MASTER/i2c_master.h **** * DATA STRUCTURES
 138:../Dave/Generated/I2C_MASTER/i2c_master.h **** ***************************************************************************************************
 139:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 140:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 141:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @ingroup I2C_MASTER_datastructures
 142:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @{
 143:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 144:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 145:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Structure for DMA configuration.
 146:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 147:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
 148:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER_DMA_CONFIG
 149:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 150:../Dave/Generated/I2C_MASTER/i2c_master.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 151:../Dave/Generated/I2C_MASTER/i2c_master.h ****   GLOBAL_DMA_t * global_dma;                   /**< Global DMA handle */
 152:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 153:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_DMA_CONFIG_t;
 154:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 155:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 156:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Constant structure for holding the configuration parameters of I2C channel.
 157:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 158:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER_CONFIG
 159:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 160:../Dave/Generated/I2C_MASTER/i2c_master.h ****    const XMC_I2C_CH_CONFIG_t *brg_config;             /*!< Basic I2C configuration from the GUI wit
 161:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 162:../Dave/Generated/I2C_MASTER/i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel confi
 163:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                                    data transmission.*/
 164:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 165:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 166:../Dave/Generated/I2C_MASTER/i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel confi
 167:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                                    data reception.*/
 168:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 169:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_config;         /*!< Function pointer to configure the MUX va
 170:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_enable_io;      /*!< Function pointer to enable SDA/SCL outpu
 171:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_disable_io;     /*!< Function pointer to disable SDA/SCL outp
 172:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 173:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler tx_cbhandler;            /*!< Function pointer to hold the callback fu
 174:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when the transmission is complete
 175:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler rx_cbhandler;            /*!< Function pointer to hold the callback fu
 176:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when the reception is complete*/
 177:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler nack_cbhandler;          /*!< Function pointer to hold the callback fu
 178:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when nack is received*/
 179:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler arbitration_cbhandler;   /*!< Function pointer to hold the callback fu
 180:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when arbitration lost is occured*
 181:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler error_cbhandler;         /*!< Function pointer to hold the callback fu
 182:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when error is detected.*/
 183:../Dave/Generated/I2C_MASTER/i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t transmit_mode;          /**< Mode used for transmitting data. Data ca
 184:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 185:../Dave/Generated/I2C_MASTER/i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t receive_mode;           /**< Mode used for receiving data. Data can b
 186:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 187:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 188:../Dave/Generated/I2C_MASTER/i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t txFIFO_size;               /*!< TxFIFO size configuration*/
 189:../Dave/Generated/I2C_MASTER/i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t rxFIFO_size;               /*!< RxFIFO size configuration*/
 190:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 191:../Dave/Generated/I2C_MASTER/i2c_master.h ****    IRQn_Type tx_irqn;
 192:../Dave/Generated/I2C_MASTER/i2c_master.h ****    IRQn_Type rx_irqn; 
 193:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_CONFIG_t;
 194:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 195:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 196:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Structure to hold the dynamic variables for the I2C_MASTER communication.
 197:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 198:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER_RUNTIME
 199:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 200:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t * tx_data;                     /*!< Pointer to the transmit data buffer*/
 201:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t * rx_data;                     /*!< Pointer to the receive data buffer*/
 202:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t tx_data_count;                /*!< Number of bytes of data to be transmitted*/
 203:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile uint32_t tx_data_index;       /*!< Index to the byte to be transmitted next in the tx_da
 204:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t rx_data_count;                /*!< Number of bytes of data to be received*/
 205:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 206:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t rx_dma_data_count;            /*!< Number of bytes of data to be received-DMA mode*/
 207:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t rx_dma_data_index;            /*!< Index of bytes of data to be received-DMA mode*/
 208:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 209:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile uint32_t rx_data_index;       /*!< Indicates the number of bytes currently available in 
 210:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile uint32_t direction;           /*!< Indicates TRANSMIT/RECEIVE */
 211:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t send_stop;                    /*!< Indicates to stop the I2C */
 212:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t send_nack;                    /*!< Indicates to send nack */
 213:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t tx_ack_sr;                         /*!< Service request number assigned to transmit inter
 214:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t rx_sr;                         /*!< Service request number assigned to receive interrupts
 215:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile bool tx_busy;                 /*!< Status flag to indicate busy when a transmission is a
 216:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile bool rx_busy;                 /*!< Status flag to indicate busy when a reception is assi
 217:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile bool bus_acquired;            /*!< flag to indicate whether bus is acquired or not */
 218:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_RUNTIME_t;
 219:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 220:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 221:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 222:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 223:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 224:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER
 225:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 226:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_t *channel;                    /*!< USIC channel*/
 227:../Dave/Generated/I2C_MASTER/i2c_master.h ****   const I2C_MASTER_CONFIG_t * const config;  /*!< I2C configuration structure pointer*/
 228:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_RUNTIME_t * const runtime;      /*!< Pointer to the structure holding all variables,
 229:../Dave/Generated/I2C_MASTER/i2c_master.h ****    	                                               that can change at runtime*/
 230:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_t;
 231:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 232:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 233:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @}
 234:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 235:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 236:../Dave/Generated/I2C_MASTER/i2c_master.h **** #ifdef __cplusplus
 237:../Dave/Generated/I2C_MASTER/i2c_master.h **** extern "C" {
 238:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 239:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 240:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 241:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 242:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @ingroup I2C_MASTER_apidoc
 243:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @{
 244:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 245:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 246:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
 247:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * API PROTOTYPES
 248:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
 249:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 250:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Get I2C_MASTER APP version.
 251:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return \a DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 252:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 253:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description: </b><br>
 254:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The function can be used to check application software compatibility with a
 255:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * specific version of the APP.
 256:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 257:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 258:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 259:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 260:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 261:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 262:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_APP_VERSION_t version;
 263:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_Init();
 264:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    version = I2C_MASTER_GetAppVersion();
 265:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(version.major != 4U)
 266:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 267:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 268:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 269:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {}
 270:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 0;
 271:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 272:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 273:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 274:../Dave/Generated/I2C_MASTER/i2c_master.h **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void);
 275:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 276:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief This function initializes the I2C_MASTER APP based on user provided configuration.
 277:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 278:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
 279:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 280:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description: </b><br>
 281:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C configurations like channel selection,baud rate setting,
 282:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * FIFO configuration etc are done in this API.
 283:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Protocol specific interrupts can also be enabled using the I2C_MASTER_Init
 284:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * function.
 285:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 286:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 287:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 288:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 289:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 290:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 291:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 292:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   // Initializing the modules and the multiplexer
 293:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   DAVE_Init(); // I2C_MASTER_Init will be called from DAVE_Init()
 294:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1)
 295:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {}
 296:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 297:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 298:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 299:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 300:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 301:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 302:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle);
 303:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 304:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 305:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 306:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief  Receives the data from I2C slave device.
 307:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 308:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start Flag to indicate that the start condition need to be send.
 309:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address I2C slave device address.
 310:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data buffer to receive data.
 311:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  count The number of bytes to be received from slave.
 312:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 313:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_nack The flag to indicate that the NACK condition need to be send for the last byte
 314:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 315:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>
 316:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER_Receive API can be used in Interrupt and Direct modes.\n
 317:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 318:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 319:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 320:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).\n
 321:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 322:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 323:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 324:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 325:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 326:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 327:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define BYTES_TO_READ 10
 328:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
 329:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 330:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 331:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 332:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 333:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 334:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 335:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  } PCA9502_REGADDR_t;
 336:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 337:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 338:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t data = 0x55;
 339:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t rx_data;
 340:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 341:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 342:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 343:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   DAVE_STATUS_t init_status;  
 344:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   init_status = DAVE_Init();
 345:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 346:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
 347:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
 348:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //Write data to IO EXPANDER
 349:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 350:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 351:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 352:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
 353:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 354:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 355:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //Read data from IO EXPANDER
 356:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 357:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 358:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 359:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
 360:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 361:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
 362:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1)
 363:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   { }
 364:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  return 0;
 365:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 366:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 367:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 368:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 369:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 370:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 371:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                        uint8_t * data, const uint32_t count, bool send_stop, bool s
 372:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 373:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 374:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Transmits data to I2C slave device.
 375:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 376:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 377:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start The flag to indicate that the start condition need to be send.
 378:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address I2C slave device address.
 379:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data buffer containing the data to transmit.
 380:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size The number of bytes to be send to slave.
 381:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 382:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 383:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 384:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>
 385:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER_Transmit API can be used in Interrupt and Direct modes.\n
 386:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 387:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 388:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 389:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write). \n
 390:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 391:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 
 392:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 393:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 394:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 395:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 396:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 397:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 398:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 399:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 400:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 401:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  } PCA9502_REGADDR_t;
 402:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 403:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 404:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 405:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 406:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 407:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 408:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 409:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 410:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 411:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 412:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
 413:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Write data to IO EXPANDER
 414:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 415:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 416:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 417:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
 418:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 419:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 420:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 421:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    { }
 422:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 423:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 424:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 425:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 426:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 427:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 428:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 429:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 430:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                uint8_t *data, const uint32_t size, bool send_stop);
 431:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 432:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 433:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Get the I2C flag status.
 434:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 435:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 436:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 437:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *			 	      bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be used to selec
 438:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                    multiple flags.
 439:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 440:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint32_t Flag status.
 441:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 442:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 443:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 444:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 445:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 446:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 447:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 448:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 449:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 450:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 451:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 452:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 453:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 454:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 455:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 456:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 457:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 458:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
 459:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 460:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 461:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 462:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {}
 463:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 464:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 465:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 466:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 467:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 468:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 469:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 470:../Dave/Generated/I2C_MASTER/i2c_master.h **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype);
 471:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 472:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 473:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Clear the I2C flag status.
 474:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 475:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 476:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 477:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                    The bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be 
 478:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                    multiple flags.
 479:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 480:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None <BR>
 481:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 482:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 483:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 484:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 485:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 486:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 487:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 488:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 489:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 490:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 491:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 492:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 493:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 494:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 495:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 496:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 497:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
 498:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 499:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 500:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 501:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 502:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {}
 503:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 504:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 505:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 506:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 507:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 508:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 509:../Dave/Generated/I2C_MASTER/i2c_master.h **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype);
 510:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 511:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 512:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Aborts the ongoing data transmission.
 513:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 514:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 515:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 516:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 517:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If there is a transmission in progress, it will be stopped. Once the transmission is stopped, 
 518:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * user can start a new transmission without delay.
 519:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 520:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 521:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 522:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 523:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 524:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 525:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 526:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 527:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 528:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t tx_buf[50] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
 529:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 530:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 531:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 532:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 533:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 534:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 535:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 536:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 537:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 538:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
 539:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 540:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 541:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 542:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
 543:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 544:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 545:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 546:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 547:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 548:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 549:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 550:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 551:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 552:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle);
 553:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 554:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 555:../Dave/Generated/I2C_MASTER/i2c_master.h **** * @brief Stops the active data reception request.
 556:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 557:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 558:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 559:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 560:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a reception is in progress, it will be stopped. When a reception request
 561:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * is active, user will not be able to place a new receive request till the active
 562:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * reception is complete. This API can stop the progressing reception to make
 563:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * a new receive request.
 564:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 565:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 566:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 567:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 568:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 569:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 570:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 571:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 572:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 573:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 574:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   uint8_t rx_buf[25];
 575:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   uint8_t tx_buf[2];
 576:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   DAVE_STATUS_t init_status;
 577:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   init_status = DAVE_Init();
 578:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 579:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
 580:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //send the address from which data to be transfered
 581:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     tx_buf[0] = 0;
 582:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 583:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 584:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 585:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 586:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_SendStop(&I2C_MASTER_0);
 587:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 588:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 589:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 590:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 591:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
 592:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1U)
 593:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
 594:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
 595:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 596:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 1U;
 597:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 598:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 599:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 600:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 601:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 602:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle);
 603:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 604:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 605:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1U)
 606:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 607:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for transmitting data over I2C channel using DMA.
 608:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 609:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 610:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  block_size size of the block
 611:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  addr    address\n
 612:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 613:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 614:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 615:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 616:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 617:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 618:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 619:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * request is registered.
 620:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 621:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 622:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 623:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. The function uses AP
 624:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * structure to store the status of transmission.
 625:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 626:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Actual data transmission happens through DMA channel.
 627:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * A maximum of 4095 bytes can be transmitted in one API call. This limit is because of the DMA sin
 628:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 629:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 630:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 631:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the completion of data transmission.
 632:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 633:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * calls to this API.
 634:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>
 635:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER_StartTransmitDMA API can be used in DMA mode.
 636:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit should be configured as "DMA" mode in advanced settings tab. \n
 637:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 638:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 639:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 640:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 641:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 642:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 643:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 644:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 645:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 646:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 647:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 648:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 649:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 650:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 651:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 652:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 653:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 654:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 655:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 656:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 657:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 658:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 659:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 660:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 661:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
 662:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 663:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 664:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 665:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 666:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 667:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 668:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // trigger the DMA
 669:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitDMA(&I2C_MASTER_0, sizeof(Send_Data), Send_Data);
 670:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 671:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 672:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
 673:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 674:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 675:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
 676:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 677:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 678:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 679:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 680:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 681:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 682:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 683:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 684:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitDMA(const I2C_MASTER_t *const handle, uint32_t block_si
 685:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 686:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 687:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1U)
 688:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 689:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel using DMA.
 690:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 691:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 692:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 693:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param block_size  size of the block
 694:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  addr  address \n
 695:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 696:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 697:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 698:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 699:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 700:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 701:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 702:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 703:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * configured callback function will be executed.
 704:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 705:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When all the requested number of data bytes are received, the configured callback function will 
 706:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a callback function is not configured, the user has to poll for the value of the variable, \a
 707:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * handle->runtime->rx_busy to be false. The value is updated to \a false when all the requested nu
 708:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * are received.
 709:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * A maximum of 4095 bytes can be received in one API call. This limit is because of the DMA single
 710:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 711:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveDMA API can be used only in DMA mode
 712:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive should be configured as "DMA" mode in advanced settings tab \n
 713:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 714:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 715:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 716:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 717:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 718:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 719:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 720:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 721:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 722:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 723:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  //Pre condition:
 724:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  //Transmit mode and receive mode should be configured to "DMA" in advanced settings tab
 725:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 726:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t ReadData[256];
 727:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 728:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 729:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 730:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 731:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 732:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 733:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 734:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 735:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 736:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 737:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 738:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 739:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 740:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
 741:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 742:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 743:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 744:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 745:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 746:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 747:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
 748:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 749:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 750:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 751:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 752:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 753:../Dave/Generated/I2C_MASTER/i2c_master.h ****  
 754:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartReceiveDMA(&I2C_MASTER_0, 200, ReadData);
 755:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 756:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 757:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
 758:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 759:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 760:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
 761:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 762:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 763:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 764:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 765:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 766:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  @endcode
 767:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 768:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 769:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveDMA(const I2C_MASTER_t *const handle, uint32_t block_siz
 770:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 771:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 772:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1U)
 773:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 774:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for transmitting data over I2C_MASTER channel.
 775:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 776:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 777:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start flag to indicate the start condition
 778:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address slave address
 779:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data    pointer to buffer
 780:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size    number of bytes
 781:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop flag to indicate the stop condition\n
 782:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 783:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 784:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 785:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 786:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 787:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 788:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 789:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * request is registered.
 790:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 791:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 792:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure a callback fu
 793:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. If transmit FIFO is 
 794:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the trigger limit is set to 1. So the transmit interrupt will be generated when all the data in 
 795:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * from FIFO. The function uses APP handle's runtime structure to store the data pointer, count, da
 796:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * status of transmission. This function only registers a data transmission request if there is no 
 797:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * in progress.
 798:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Actual data transmission happens in the transmit interrupt service routine. A trigger is generat
 799:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * interrupt to start loading the data. If transmit FIFO is configured, the data is filled into the
 800:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this point of
 801:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * some more data to be transmitted, it is loaded to the FIFO again. When FIFO is not enabled, data
 802:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * byte at a time. On transmission of each byte an interrupt is generated and the next byte is tran
 803:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * interrupt service routine. Callback function is executed when all the data bytes are transmitted
 804:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of t
 805:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * structure( \a handle->runtime->tx_busy ) to check for the completion of data transmission.<br>
 806:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartTransmitIRQ API can be used only in Interrupt mode.
 807:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit should be configured as "Interrupt" mode in advanced settings tab.\n
 808:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 809:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 810:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 811:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).
 812:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 813:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 814:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 815:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 816:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 817:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 818:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 819:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 820:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 821:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 822:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 823:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 824:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 825:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 826:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 827:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Write data to IO EXPANDER
 828:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 829:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 830:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 831:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,64,true);
 832:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 833:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 834:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 835:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    { }
 836:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 837:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 0;
 838:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 839:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 840:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 841:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 842:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 843:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 844:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 845:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 846:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 847:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1U)
 848:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 849:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel.
 850:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 851:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 852:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 853:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start flag to indicate the start condition
 854:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address slave address
 855:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data    pointer to buffer
 856:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  count    number of bytes
 857:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop flag to indicate the stop condition
 858:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_nack flag to indicate the nack condition\n
 859:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 860:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 861:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 862:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 863:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 864:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 865:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 866:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 867:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 868:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * configured callback function will be executed. Based on the UI configuration, either standard re
 869:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * receive FIFO is used for data reception. An interrupt is configured for reading received data fr
 870:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * function only registers a request to receive a number of data bytes from a USIC channel. If FIFO
 871:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.  When all
 872:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * of data bytes are received, the configured callback function will be executed. If a callback fun
 873:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * configured, the user has to poll for the value of the variable, \a handle->runtime->rx_busy to b
 874:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * is updated to \a false when all the requested number of data bytes are received.<br>
 875:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveIRQ API can be used only in Interrupt mode.
 876:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive should be configured as "Interrupt" mode in advanced settings tab.\n
 877:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 878:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 879:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 880:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).
 881:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 882:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 883:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 884:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 885:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 886:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t rx_buffer[64];
 887:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 888:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 889:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 890:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 891:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 892:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 893:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 894:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 895:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 896:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //Write data to IO EXPANDER
 897:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 898:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 899:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 900:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,rx_buffer,64,true, true);
 901:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 902:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 903:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 904:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    { }
 905:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 0;
 906:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 907:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 908:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 909:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 910:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 911:../Dave/Generated/I2C_MASTER/i2c_master.h ****  I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 912:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                uint8_t * data, const uint32_t count, bool send_stop
 913:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 914:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 915:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 916:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 917:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Gets the transmit FIFO event flags.
 918:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 919:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 920:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 921:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
 922:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                      their bit positions.\n
 923:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
 924:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 925:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 926:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer interrupt flag
 927:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * buffer error flag before providing the value.
 928:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * User has to mask the bits of interest before checking the status.
 929:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: Enable transmit fifo in Advanced settings tab. <br>
 930:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 931:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 932:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 933:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 934:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 935:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 936:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 937:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 938:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 939:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 940:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 941:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 942:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 943:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 944:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
 945:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 946:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 947:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 948:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
 949:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
 950:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
 951:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
 952:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
 953:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 954:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
 955:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 956:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 957:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
 958:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 959:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 960:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 961:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 962:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 963:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 964:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 965:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 966:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetTXFIFOStatus(const I2C_MASTER_t* const handle)
 967:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 968:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetTXFIFOStatus: invalid handle", (handle != NULL))
 969:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
 970:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 971:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 972:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 973:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Configures trigger limit for the transmit FIFO.
 974:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 975:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 976:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size   FIFO size
 977:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
 978:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               \bRange: 0 to transmit FIFO size.\n
 979:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
 980:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
 981:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 982:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
 983:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 984:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 985:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
 986:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
 987:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * below the trigger limit.
 988:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 989:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 990:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 991:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 992:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 993:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 994:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 995:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 996:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 997:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 998:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 999:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1000:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1001:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1002:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1003:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure transmit fifo trigger limit, draining level as 10
1004:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1005:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // Execution will happen two times in the interrupt handler as the limit is set to 10
1006:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, Send_Data, 16, true);
1007:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1008:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1009:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1010:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1011:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1012:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1013:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1014:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1015:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1016:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1017:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1018:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1019:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1020:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1021:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetTXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1022:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                              const uint32_t limit)
1023:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1024:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetTXFIFOTriggerLimit: invalid handle", (handle != NULL))
1025:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1026:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1027:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1028:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Configures trigger limit for the receive FIFO.
1029:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1030:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1031:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size   FIFO size
1032:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1033:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               \bRange: 0 to receive FIFO size.\n
1034:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1035:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1036:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1037:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
1038:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1039:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1040:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1041:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1042:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * above the trigger limit.
1043:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1044:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1045:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1046:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1047:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1048:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1049:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1050:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1051:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t Rx_Data[256];
1052:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1053:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1054:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1055:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1056:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1057:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1058:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1059:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure receive fifo trigger limit to filling level as 10
1060:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1061:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // Execution will happen two times in the receive interrupt handler as the limit is set to 
1062:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, Rx_Data, 16, true, true);
1063:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
1064:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1065:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1066:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1067:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1068:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1069:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1070:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1071:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1072:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1073:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1074:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1075:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1076:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1077:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetRXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1078:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                              const uint32_t limit)
1079:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 704              	 .loc 4 1079 0
 705              	 .cfi_startproc
 706 0000 80B5     	 push {r7,lr}
 707              	.LCFI51:
 708              	 .cfi_def_cfa_offset 8
 709              	 .cfi_offset 7,-8
 710              	 .cfi_offset 14,-4
 711 0002 84B0     	 sub sp,sp,#16
 712              	.LCFI52:
 713              	 .cfi_def_cfa_offset 24
 714 0004 00AF     	 add r7,sp,#0
 715              	.LCFI53:
 716              	 .cfi_def_cfa_register 7
 717 0006 F860     	 str r0,[r7,#12]
 718 0008 B960     	 str r1,[r7,#8]
 719 000a 7A60     	 str r2,[r7,#4]
1080:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetRXFIFOTriggerLimit: invalid handle", (handle != NULL))
1081:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
 720              	 .loc 4 1081 0
 721 000c FB68     	 ldr r3,[r7,#12]
 722 000e 1968     	 ldr r1,[r3]
 723 0010 BB68     	 ldr r3,[r7,#8]
 724 0012 DAB2     	 uxtb r2,r3
 725 0014 7B68     	 ldr r3,[r7,#4]
 726 0016 081C     	 mov r0,r1
 727 0018 111C     	 mov r1,r2
 728 001a 1A1C     	 mov r2,r3
 729 001c FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
1082:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 730              	 .loc 4 1082 0
 731 0020 BD46     	 mov sp,r7
 732 0022 04B0     	 add sp,sp,#16
 733              	 
 734 0024 80BD     	 pop {r7,pc}
 735              	 .cfi_endproc
 736              	.LFE129:
 738 0026 C046     	 .section .text.I2C_MASTER_IsTXFIFOFull,"ax",%progbits
 739              	 .align 2
 740              	 .code 16
 741              	 .thumb_func
 743              	I2C_MASTER_IsTXFIFOFull:
 744              	.LFB130:
1083:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1084:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1085:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Checks if the transmit FIFO is full.
1086:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1087:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1088:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1089:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return bool Status of transmit FIFO filling level.
1090:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1091:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1092:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1093:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while filling
1094:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * data to the transmit FIFO.
1095:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: Transmit should be "Direct" mode in advanced settings tab.<br>
1096:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1097:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1098:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1099:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1100:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1101:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1102:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1103:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1104:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t send_data[] = "Infineon Technologies";
1105:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1106:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1107:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1108:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();           // Initialization of DAVE APPs
1109:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1110:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1111:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1112:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1113:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1114:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1115:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1116:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1117:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1118:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &send_data[0], 10, false);
1119:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  //Wait when Tx FIFO is full
1120:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  while(!I2C_MASTER_IsTXFIFOFull(&I2C_MASTER_0))
1121:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1122:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_Transmit(&I2C_MASTER_0, false, SLAVE_ADDRESS, &send_data[0], 10, false);
1123:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1124:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  while(1U)
1125:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1126:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1127:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
1128:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1129:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1130:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTXFIFOFull(const I2C_MASTER_t* const handle)
1131:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 745              	 .loc 4 1131 0
 746              	 .cfi_startproc
 747 0000 80B5     	 push {r7,lr}
 748              	.LCFI54:
 749              	 .cfi_def_cfa_offset 8
 750              	 .cfi_offset 7,-8
 751              	 .cfi_offset 14,-4
 752 0002 82B0     	 sub sp,sp,#8
 753              	.LCFI55:
 754              	 .cfi_def_cfa_offset 16
 755 0004 00AF     	 add r7,sp,#0
 756              	.LCFI56:
 757              	 .cfi_def_cfa_register 7
 758 0006 7860     	 str r0,[r7,#4]
1132:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTXFIFOFull: invalid handle", (handle != NULL))
1133:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
 759              	 .loc 4 1133 0
 760 0008 7B68     	 ldr r3,[r7,#4]
 761 000a 1B68     	 ldr r3,[r3]
 762 000c 181C     	 mov r0,r3
 763 000e FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsFull
 764 0012 031C     	 mov r3,r0
1134:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 765              	 .loc 4 1134 0
 766 0014 181C     	 mov r0,r3
 767 0016 BD46     	 mov sp,r7
 768 0018 02B0     	 add sp,sp,#8
 769              	 
 770 001a 80BD     	 pop {r7,pc}
 771              	 .cfi_endproc
 772              	.LFE130:
 774              	 .section .text.I2C_MASTER_IsRXFIFOEmpty,"ax",%progbits
 775              	 .align 2
 776              	 .code 16
 777              	 .thumb_func
 779              	I2C_MASTER_IsRXFIFOEmpty:
 780              	.LFB131:
1135:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1136:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1137:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Checks if the receive FIFO is empty.
1138:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1139:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1140:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1141:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return bool Status of receive FIFO filling level.
1142:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1143:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                       \afalse- if receive FIFO still has data.<br>
1144:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1145:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while reading data from the receive FIFO
1146:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1147:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1148:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1149:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1150:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1151:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1152:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1153:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1154:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1155:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[64];
1156:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1157:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1158:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1159:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1160:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1161:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1162:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1163:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1164:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1165:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1166:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1167:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1168:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1169:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1170:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1171:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1172:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1173:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1174:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1175:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1176:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1177:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1178:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1179:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1180:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1181:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1182:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        index++;
1183:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1184:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1185:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1186:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1187:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1188:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1189:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1190:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1U)
1191:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
1192:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
1193:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1194:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1195:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1196:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRXFIFOEmpty(const I2C_MASTER_t* const handle)
1197:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 781              	 .loc 4 1197 0
 782              	 .cfi_startproc
 783 0000 80B5     	 push {r7,lr}
 784              	.LCFI57:
 785              	 .cfi_def_cfa_offset 8
 786              	 .cfi_offset 7,-8
 787              	 .cfi_offset 14,-4
 788 0002 82B0     	 sub sp,sp,#8
 789              	.LCFI58:
 790              	 .cfi_def_cfa_offset 16
 791 0004 00AF     	 add r7,sp,#0
 792              	.LCFI59:
 793              	 .cfi_def_cfa_register 7
 794 0006 7860     	 str r0,[r7,#4]
1198:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRXFIFOEmpty: invalid handle", (handle != NULL))
1199:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
 795              	 .loc 4 1199 0
 796 0008 7B68     	 ldr r3,[r7,#4]
 797 000a 1B68     	 ldr r3,[r3]
 798 000c 181C     	 mov r0,r3
 799 000e FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_IsEmpty
 800 0012 031C     	 mov r3,r0
1200:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 801              	 .loc 4 1200 0
 802 0014 181C     	 mov r0,r3
 803 0016 BD46     	 mov sp,r7
 804 0018 02B0     	 add sp,sp,#8
 805              	 
 806 001a 80BD     	 pop {r7,pc}
 807              	 .cfi_endproc
 808              	.LFE131:
 810              	 .section .text.I2C_MASTER_GetReceivedByte,"ax",%progbits
 811              	 .align 2
 812              	 .code 16
 813              	 .thumb_func
 815              	I2C_MASTER_GetReceivedByte:
 816              	.LFB135:
1201:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1202:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1203:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Gets the status of event flags related to receive FIFO.
1204:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1205:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1206:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1207:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1208:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint32_t: Status of standard receive buffer event, alternative receive buffer event and 
1209:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * error event in their bit positions in TRBSR register.\n
1210:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for event bitmasks. Multiple events' status c
1211:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * comparison using \a OR operation.
1212:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1213:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1214:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * It provides the status of standard receive buffer event, alternative receive buffer event and re
1215:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * event.
1216:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function masks the TRBSR register with the bitmask of SRBI, ARBI and RBERI flags. User has to ma
1217:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * interest before checking the status.
1218:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1219:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1220:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1221:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1222:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1223:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   #define SLAVE_ADDRESS 0xA0
1224:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   uint8_t mem_address[2];
1225:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   int main(void)
1226:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
1227:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     DAVE_STATUS_t init_status;
1228:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1229:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     init_status = DAVE_Init();
1230:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     if(init_status == DAVE_STATUS_SUCCESS)
1231:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1232:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       mem_address[0] = 0x00;//memory which need to be read from slave
1233:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       //Configure receive fifo trigger limit as 10
1234:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1235:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1236:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1237:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1238:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1239:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0
1240:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1241:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1242:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1243:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     else
1244:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1245:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1246:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1247:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1248:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1249:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1250:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      return 1U;
1251:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
1252:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1253:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1254:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1255:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetRXFIFOStatus(const I2C_MASTER_t* const handle)
1256:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1257:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetRXFIFOStatus: invalid handle", (handle != NULL))
1258:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_RXFIFO_GetEvent(handle->channel);
1259:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1260:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1261:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1262:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to
1263:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * transmit FIFO.
1264:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1265:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1266:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1267:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flag Value with event bits at their bit positions in TRBSR register to be cleared.\n
1268:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t. Multiple events can be combined 
1269:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             \a OR operation.
1270:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1271:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return    None
1272:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1273:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1274:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function clears a status bit in TRBSR register using the TRBSCR register. But the function does 
1275:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * value with the bit positions restricted to transmit FIFO status bits. User should ensure that th
1276:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * appropriately masked.
1277:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1278:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1279:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1280:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1281:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1282:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1283:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
1284:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1285:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1286:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1287:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1288:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1289:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1290:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1291:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00; //memory which need to be read from slave
1292:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
1293:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1294:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1295:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1296:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
1297:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1298:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
1299:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1300:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
1301:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1302:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1303:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1304:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1305:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1306:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1307:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1308:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1309:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1310:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1311:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1312:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1313:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1314:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearTXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1315:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1316:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearTXFIFOStatus: invalid handle", (handle != NULL))
1317:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_TXFIFO_ClearEvent(handle->channel, flag);
1318:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1319:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1320:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1321:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to receive FIFO. It should be used 
1322:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * of standard receive buffer interrupt, alternative receive buffer interrupt and receive buffer er
1323:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1324:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1325:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1326:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flag Value with event bits at the bit positions in TRBSR register to be cleared.\n
1327:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for providing events.
1328:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             Multiple events can be input by using \a OR operation.
1329:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1330:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return    None
1331:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1332:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1333:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function clears a status bit in TRBSR using the TRBSCR register.
1334:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The function does not mask the input value to clear only receive buffer
1335:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * events. So user should appropriately mask the input value before calling
1336:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the function.
1337:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1338:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1339:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1340:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1341:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1342:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1343:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
1344:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1345:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1346:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1347:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1348:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1349:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1350:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1351:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
1352:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure receive fifo trigger limit as 10
1353:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1354:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1355:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1356:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1357:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1358:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0)
1359:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1360:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1361:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1362:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1363:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1364:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1365:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1366:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1367:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1368:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1369:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1370:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1371:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1372:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1373:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1374:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearRXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1375:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1376:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearRXFIFOStatus: invalid handle", (handle != NULL))
1377:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, flag);
1378:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1379:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1380:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1381:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Provides the received data from receive buffer.
1382:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1383:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1384:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint8_t: Data read from RBUF.\n
1385:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1386:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1387:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1388:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1389:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Otherwise it reads the data from OUTR register.
1390:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1391:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1392:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1393:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1394:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1395:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1396:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1397:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1398:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[10];
1399:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t index = 0,loc_index = 0;
1400:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1401:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1402:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1403:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1404:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1405:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1406:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1407:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1408:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1409:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1410:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1411:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1412:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1413:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1414:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1415:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1416:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1417:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1418:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1419:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1420:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        // wait for ACK
1421:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1422:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1423:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1424:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1425:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1426:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         index++;
1427:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1428:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1429:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1430:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1431:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1432:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1433:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1434:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1435:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1436:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1437:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1438:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1439:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1440:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1441:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1442:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1443:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1444:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1445:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1446:../Dave/Generated/I2C_MASTER/i2c_master.h **** /* Wrapper to the LLD API for reading back the value of the RBUF or OUTR register */
1447:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE uint8_t I2C_MASTER_GetReceivedByte(I2C_MASTER_t * const handle)
1448:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 817              	 .loc 4 1448 0
 818              	 .cfi_startproc
 819 0000 80B5     	 push {r7,lr}
 820              	.LCFI60:
 821              	 .cfi_def_cfa_offset 8
 822              	 .cfi_offset 7,-8
 823              	 .cfi_offset 14,-4
 824 0002 82B0     	 sub sp,sp,#8
 825              	.LCFI61:
 826              	 .cfi_def_cfa_offset 16
 827 0004 00AF     	 add r7,sp,#0
 828              	.LCFI62:
 829              	 .cfi_def_cfa_register 7
 830 0006 7860     	 str r0,[r7,#4]
1449:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetReceivedByte: invalid handle", (handle != NULL))
1450:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return (uint8_t)XMC_I2C_CH_GetReceivedData(handle->channel);
 831              	 .loc 4 1450 0
 832 0008 7B68     	 ldr r3,[r7,#4]
 833 000a 1B68     	 ldr r3,[r3]
 834 000c 181C     	 mov r0,r3
 835 000e FFF7FEFF 	 bl XMC_I2C_CH_GetReceivedData
 836 0012 031C     	 mov r3,r0
1451:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 837              	 .loc 4 1451 0
 838 0014 181C     	 mov r0,r3
 839 0016 BD46     	 mov sp,r7
 840 0018 02B0     	 add sp,sp,#8
 841              	 
 842 001a 80BD     	 pop {r7,pc}
 843              	 .cfi_endproc
 844              	.LFE135:
 846              	 .section .text.I2C_MASTER_TransmitByte,"ax",%progbits
 847              	 .align 2
 848              	 .code 16
 849              	 .thumb_func
 851              	I2C_MASTER_TransmitByte:
 852              	.LFB136:
1452:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1453:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1454:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Transmits single byte using I2C protocol.
1455:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1456:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1457:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  byte data byte to transmit. \n
1458:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
1459:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 
1460:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1461:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1462:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1463:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1464:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1465:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1466:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1467:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1468:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1469:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1470:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1471:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();
1472:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1473:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1474:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1475:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1476:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1477:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1478:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1479:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1480:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1481:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1482:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1483:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1484:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1485:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // wait for ACK
1486:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1487:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1488:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1489:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1490:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1491:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // wait for ACK
1492:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1493:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1494:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
1495:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1496:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1497:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1498:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1499:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1500:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_TransmitByte(I2C_MASTER_t * const handle, uint8_t byte)
1501:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 853              	 .loc 4 1501 0
 854              	 .cfi_startproc
 855 0000 80B5     	 push {r7,lr}
 856              	.LCFI63:
 857              	 .cfi_def_cfa_offset 8
 858              	 .cfi_offset 7,-8
 859              	 .cfi_offset 14,-4
 860 0002 82B0     	 sub sp,sp,#8
 861              	.LCFI64:
 862              	 .cfi_def_cfa_offset 16
 863 0004 00AF     	 add r7,sp,#0
 864              	.LCFI65:
 865              	 .cfi_def_cfa_register 7
 866 0006 7860     	 str r0,[r7,#4]
 867 0008 0A1C     	 mov r2,r1
 868 000a FB1C     	 add r3,r7,#3
 869 000c 1A70     	 strb r2,[r3]
1502:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_TransmitByte: invalid handle", (handle != NULL))
1503:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterTransmit(handle->channel, byte);
 870              	 .loc 4 1503 0
 871 000e 7B68     	 ldr r3,[r7,#4]
 872 0010 1A68     	 ldr r2,[r3]
 873 0012 FB1C     	 add r3,r7,#3
 874 0014 1B78     	 ldrb r3,[r3]
 875 0016 101C     	 mov r0,r2
 876 0018 191C     	 mov r1,r3
 877 001a FFF7FEFF 	 bl XMC_I2C_CH_MasterTransmit
1504:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 878              	 .loc 4 1504 0
 879 001e BD46     	 mov sp,r7
 880 0020 02B0     	 add sp,sp,#8
 881              	 
 882 0022 80BD     	 pop {r7,pc}
 883              	 .cfi_endproc
 884              	.LFE136:
 886              	 .section .text.I2C_MASTER_EnableEvent,"ax",%progbits
 887              	 .align 2
 888              	 .code 16
 889              	 .thumb_func
 891              	I2C_MASTER_EnableEvent:
 892              	.LFB137:
1505:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1506:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Enables the selected protocol events for interrupt generation.
1507:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1508:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1509:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  event  Protocol events to be enabled for interrupt generation. \n
1510:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1511:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         combined using the bitwise OR operation.\n
1512:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
1513:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1514:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1515:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1516:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1517:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1518:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * may not yield expected result.
1519:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1520:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1521:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1522:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1523:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1524:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1525:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1526:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1527:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1528:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1529:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();
1530:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1531:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1532:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1533:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1534:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1535:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1536:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1537:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1538:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1539:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1540:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_EnableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1541:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
1542:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1543:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1544:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1545:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1546:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1547:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_EnableEvent(I2C_MASTER_t * const handle, uint32_t event)
1548:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 893              	 .loc 4 1548 0
 894              	 .cfi_startproc
 895 0000 80B5     	 push {r7,lr}
 896              	.LCFI66:
 897              	 .cfi_def_cfa_offset 8
 898              	 .cfi_offset 7,-8
 899              	 .cfi_offset 14,-4
 900 0002 82B0     	 sub sp,sp,#8
 901              	.LCFI67:
 902              	 .cfi_def_cfa_offset 16
 903 0004 00AF     	 add r7,sp,#0
 904              	.LCFI68:
 905              	 .cfi_def_cfa_register 7
 906 0006 7860     	 str r0,[r7,#4]
 907 0008 3960     	 str r1,[r7]
1549:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_EnableEvent: invalid handle", (handle != NULL))
1550:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_EnableEvent(handle->channel, event);
 908              	 .loc 4 1550 0
 909 000a 7B68     	 ldr r3,[r7,#4]
 910 000c 1A68     	 ldr r2,[r3]
 911 000e 3B68     	 ldr r3,[r7]
 912 0010 101C     	 mov r0,r2
 913 0012 191C     	 mov r1,r3
 914 0014 FFF7FEFF 	 bl XMC_I2C_CH_EnableEvent
1551:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 915              	 .loc 4 1551 0
 916 0018 BD46     	 mov sp,r7
 917 001a 02B0     	 add sp,sp,#8
 918              	 
 919 001c 80BD     	 pop {r7,pc}
 920              	 .cfi_endproc
 921              	.LFE137:
 923 001e C046     	 .section .text.I2C_MASTER_DisableEvent,"ax",%progbits
 924              	 .align 2
 925              	 .code 16
 926              	 .thumb_func
 928              	I2C_MASTER_DisableEvent:
 929              	.LFB138:
1552:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1553:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Disables selected events from generating interrupt.
1554:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1555:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1556:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  event  Events to be disabled from generating interrupt. \n
1557:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1558:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         combined using the bitwise OR operation.\n
1559:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1560:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1561:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1562:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1563:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1564:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1565:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1566:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1567:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1568:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1569:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1570:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1571:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1572:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1573:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();
1574:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1575:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1576:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1577:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1578:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1579:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1580:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1581:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1582:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1583:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1584:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_DisableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1585:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
1586:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1587:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1588:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1589:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1590:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1591:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1592:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_DisableEvent(I2C_MASTER_t * const handle, uint32_t event)
1593:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 930              	 .loc 4 1593 0
 931              	 .cfi_startproc
 932 0000 80B5     	 push {r7,lr}
 933              	.LCFI69:
 934              	 .cfi_def_cfa_offset 8
 935              	 .cfi_offset 7,-8
 936              	 .cfi_offset 14,-4
 937 0002 82B0     	 sub sp,sp,#8
 938              	.LCFI70:
 939              	 .cfi_def_cfa_offset 16
 940 0004 00AF     	 add r7,sp,#0
 941              	.LCFI71:
 942              	 .cfi_def_cfa_register 7
 943 0006 7860     	 str r0,[r7,#4]
 944 0008 3960     	 str r1,[r7]
1594:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_DisableEvent: invalid handle", (handle != NULL))
1595:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_DisableEvent(handle->channel, event);
 945              	 .loc 4 1595 0
 946 000a 7B68     	 ldr r3,[r7,#4]
 947 000c 1A68     	 ldr r2,[r3]
 948 000e 3B68     	 ldr r3,[r7]
 949 0010 101C     	 mov r0,r2
 950 0012 191C     	 mov r1,r3
 951 0014 FFF7FEFF 	 bl XMC_I2C_CH_DisableEvent
1596:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 952              	 .loc 4 1596 0
 953 0018 BD46     	 mov sp,r7
 954 001a 02B0     	 add sp,sp,#8
 955              	 
 956 001c 80BD     	 pop {r7,pc}
 957              	 .cfi_endproc
 958              	.LFE138:
 960 001e C046     	 .section .text.I2C_MASTER_ReceiveACK,"ax",%progbits
 961              	 .align 2
 962              	 .code 16
 963              	 .thumb_func
 965              	I2C_MASTER_ReceiveACK:
 966              	.LFB139:
1597:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1598:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1599:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Receives the ACK from slave
1600:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1601:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1602:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1603:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1604:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * After transmitting a byte, master receives the ack from slave.<br>
1605:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1606:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1607:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1608:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1609:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1610:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1611:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1612:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1613:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1614:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1615:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1616:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1617:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[64];
1618:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1619:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1620:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1621:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1622:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1623:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1624:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1625:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1626:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1627:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1628:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1629:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1630:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1631:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1632:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1633:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1634:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1635:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1636:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1637:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1638:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1639:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1640:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1641:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1642:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1643:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        index++;
1644:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1645:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1646:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1647:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1648:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1649:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1650:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1651:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1652:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1653:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1654:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1655:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1656:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1657:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1658:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1659:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1660:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1661:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1662:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveACK(I2C_MASTER_t * const handle)
1663:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 967              	 .loc 4 1663 0
 968              	 .cfi_startproc
 969 0000 80B5     	 push {r7,lr}
 970              	.LCFI72:
 971              	 .cfi_def_cfa_offset 8
 972              	 .cfi_offset 7,-8
 973              	 .cfi_offset 14,-4
 974 0002 82B0     	 sub sp,sp,#8
 975              	.LCFI73:
 976              	 .cfi_def_cfa_offset 16
 977 0004 00AF     	 add r7,sp,#0
 978              	.LCFI74:
 979              	 .cfi_def_cfa_register 7
 980 0006 7860     	 str r0,[r7,#4]
1664:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveACK: invalid handle", (handle != NULL))
1665:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterReceiveAck(handle->channel);
 981              	 .loc 4 1665 0
 982 0008 7B68     	 ldr r3,[r7,#4]
 983 000a 1B68     	 ldr r3,[r3]
 984 000c 181C     	 mov r0,r3
 985 000e FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
1666:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 986              	 .loc 4 1666 0
 987 0012 BD46     	 mov sp,r7
 988 0014 02B0     	 add sp,sp,#8
 989              	 
 990 0016 80BD     	 pop {r7,pc}
 991              	 .cfi_endproc
 992              	.LFE139:
 994              	 .section .text.I2C_MASTER_ReceiveNACK,"ax",%progbits
 995              	 .align 2
 996              	 .code 16
 997              	 .thumb_func
 999              	I2C_MASTER_ReceiveNACK:
 1000              	.LFB140:
1667:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1668:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Receives the NACK from slave
1669:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1670:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1671:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1672:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1673:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * After transmitting a byte, master receives the nack from slave.<br>
1674:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1675:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1676:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1677:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1678:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1679:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1680:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1681:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1682:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1683:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1684:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint32_t index = 0, loc_index = 0;
1685:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[64];
1686:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1687:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1688:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1689:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1690:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1691:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1692:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1693:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1694:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1695:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1696:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1697:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1698:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1699:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1700:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1701:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1702:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1703:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1704:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1705:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1706:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1707:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1708:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1709:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1710:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1711:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        index++;
1712:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1713:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // only for the last byte
1714:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ReceiveNACK(&I2C_MASTER_0);
1715:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1716:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1717:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1718:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1719:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1720:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1721:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1722:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1723:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1724:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1725:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1726:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1727:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1728:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1729:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1730:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1731:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1732:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveNACK(I2C_MASTER_t * const handle)
1733:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1001              	 .loc 4 1733 0
 1002              	 .cfi_startproc
 1003 0000 80B5     	 push {r7,lr}
 1004              	.LCFI75:
 1005              	 .cfi_def_cfa_offset 8
 1006              	 .cfi_offset 7,-8
 1007              	 .cfi_offset 14,-4
 1008 0002 82B0     	 sub sp,sp,#8
 1009              	.LCFI76:
 1010              	 .cfi_def_cfa_offset 16
 1011 0004 00AF     	 add r7,sp,#0
 1012              	.LCFI77:
 1013              	 .cfi_def_cfa_register 7
 1014 0006 7860     	 str r0,[r7,#4]
1734:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveNACK: invalid handle", (handle != NULL))
1735:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterReceiveNack(handle->channel);
 1015              	 .loc 4 1735 0
 1016 0008 7B68     	 ldr r3,[r7,#4]
 1017 000a 1B68     	 ldr r3,[r3]
 1018 000c 181C     	 mov r0,r3
 1019 000e FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
1736:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1020              	 .loc 4 1736 0
 1021 0012 BD46     	 mov sp,r7
 1022 0014 02B0     	 add sp,sp,#8
 1023              	 
 1024 0016 80BD     	 pop {r7,pc}
 1025              	 .cfi_endproc
 1026              	.LFE140:
 1028              	 .section .text.I2C_MASTER_SendStop,"ax",%progbits
 1029              	 .align 2
 1030              	 .code 16
 1031              	 .thumb_func
 1033              	I2C_MASTER_SendStop:
 1034              	.LFB141:
1737:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1738:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Sends stop command to slave
1739:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1740:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1741:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1742:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1743:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * At the end of transmission, sends a stop command to slave <br>
1744:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.<br>
1745:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1746:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1747:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1748:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1749:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1750:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1751:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1752:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1753:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1754:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1755:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1756:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1757:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1758:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1759:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1760:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1761:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1762:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1763:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //send the address to which data to be transfered
1764:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1765:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1766:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1767:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1768:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1769:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1770:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
1771:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1772:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1773:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1774:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1775:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1776:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1777:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1778:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1779:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1780:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1781:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1782:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1783:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStop(I2C_MASTER_t * const handle)
1784:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1035              	 .loc 4 1784 0
 1036              	 .cfi_startproc
 1037 0000 80B5     	 push {r7,lr}
 1038              	.LCFI78:
 1039              	 .cfi_def_cfa_offset 8
 1040              	 .cfi_offset 7,-8
 1041              	 .cfi_offset 14,-4
 1042 0002 82B0     	 sub sp,sp,#8
 1043              	.LCFI79:
 1044              	 .cfi_def_cfa_offset 16
 1045 0004 00AF     	 add r7,sp,#0
 1046              	.LCFI80:
 1047              	 .cfi_def_cfa_register 7
 1048 0006 7860     	 str r0,[r7,#4]
1785:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStop: invalid handle", (handle != NULL))
1786:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED);
 1049              	 .loc 4 1786 0
 1050 0008 7B68     	 ldr r3,[r7,#4]
 1051 000a 1B68     	 ldr r3,[r3]
 1052 000c 181C     	 mov r0,r3
 1053 000e 1021     	 mov r1,#16
 1054 0010 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
1787:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterStop(handle->channel);
 1055              	 .loc 4 1787 0
 1056 0014 7B68     	 ldr r3,[r7,#4]
 1057 0016 1B68     	 ldr r3,[r3]
 1058 0018 181C     	 mov r0,r3
 1059 001a FFF7FEFF 	 bl XMC_I2C_CH_MasterStop
1788:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1060              	 .loc 4 1788 0
 1061 001e BD46     	 mov sp,r7
 1062 0020 02B0     	 add sp,sp,#8
 1063              	 
 1064 0022 80BD     	 pop {r7,pc}
 1065              	 .cfi_endproc
 1066              	.LFE141:
 1068              	 .section .text.I2C_MASTER_SendStart,"ax",%progbits
 1069              	 .align 2
 1070              	 .code 16
 1071              	 .thumb_func
 1073              	I2C_MASTER_SendStart:
 1074              	.LFB142:
1789:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1790:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Sends start command to slave
1791:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1792:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param address slave address
1793:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param cmd     command
1794:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1795:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1796:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1797:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Before start of transmission, sends a start command to slave. \n
1798:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1799:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1800:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1801:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1802:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1803:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1804:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1805:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1806:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
1807:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1808:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1809:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1810:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1811:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1812:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1813:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1814:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1815:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1816:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1817:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1818:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1819:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1820:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1821:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //send the address to which data to be transfered
1822:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1823:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1824:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1825:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1826:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1827:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1828:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1829:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1830:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       XMC_DEBUG("main: Application initialization failed");
1831:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       while(1U)
1832:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       {
1833:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       }
1834:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1835:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1836:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
1837:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1838:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1839:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStart(I2C_MASTER_t * const handle, const uint32_t address,
1840:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                  const XMC_I2C_CH_CMD_t cmd)
1841:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1075              	 .loc 4 1841 0
 1076              	 .cfi_startproc
 1077 0000 80B5     	 push {r7,lr}
 1078              	.LCFI81:
 1079              	 .cfi_def_cfa_offset 8
 1080              	 .cfi_offset 7,-8
 1081              	 .cfi_offset 14,-4
 1082 0002 84B0     	 sub sp,sp,#16
 1083              	.LCFI82:
 1084              	 .cfi_def_cfa_offset 24
 1085 0004 00AF     	 add r7,sp,#0
 1086              	.LCFI83:
 1087              	 .cfi_def_cfa_register 7
 1088 0006 F860     	 str r0,[r7,#12]
 1089 0008 B960     	 str r1,[r7,#8]
 1090 000a FB1D     	 add r3,r7,#7
 1091 000c 1A70     	 strb r2,[r3]
1842:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStart: invalid handle", (handle != NULL))
1843:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED);
 1092              	 .loc 4 1843 0
 1093 000e FB68     	 ldr r3,[r7,#12]
 1094 0010 1B68     	 ldr r3,[r3]
 1095 0012 181C     	 mov r0,r3
 1096 0014 0421     	 mov r1,#4
 1097 0016 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
1844:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterStart(handle->channel, (uint16_t)address, cmd);
 1098              	 .loc 4 1844 0
 1099 001a FB68     	 ldr r3,[r7,#12]
 1100 001c 1968     	 ldr r1,[r3]
 1101 001e BB68     	 ldr r3,[r7,#8]
 1102 0020 9AB2     	 uxth r2,r3
 1103 0022 FB1D     	 add r3,r7,#7
 1104 0024 1B78     	 ldrb r3,[r3]
 1105 0026 081C     	 mov r0,r1
 1106 0028 111C     	 mov r1,r2
 1107 002a 1A1C     	 mov r2,r3
 1108 002c FFF7FEFF 	 bl XMC_I2C_CH_MasterStart
1845:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1109              	 .loc 4 1845 0
 1110 0030 BD46     	 mov sp,r7
 1111 0032 04B0     	 add sp,sp,#16
 1112              	 
 1113 0034 80BD     	 pop {r7,pc}
 1114              	 .cfi_endproc
 1115              	.LFE142:
 1117 0036 C046     	 .section .text.I2C_MASTER_SendRepeatedStart,"ax",%progbits
 1118              	 .align 2
 1119              	 .code 16
 1120              	 .thumb_func
 1122              	I2C_MASTER_SendRepeatedStart:
 1123              	.LFB143:
1846:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1847:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Sends repeated start command to slave
1848:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1849:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param address slave address
1850:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param cmd     command
1851:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1852:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1853:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1854:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Before start of transmission, sends a repeatedstart command to slave if bus acquired is true.\n
1855:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1856:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1857:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1858:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1859:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1860:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1861:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1862:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1863:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1864:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1865:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1866:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1867:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1868:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rx_buf[256];
1869:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1870:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1871:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1872:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1873:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_MasterStart(I2C_MASTER_0.channel, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1874:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1875:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1876:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1877:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1878:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1879:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //send the address to which data to be transfered
1880:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1881:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1882:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1883:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1884:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1885:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1886:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1887:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1888:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1889:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1890:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1891:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1892:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 	   memset(rx_buf,0,16);
1893:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, false, SLAVE_ADDRESS, rx_buf, 16, true, true);
1894:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1895:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1896:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1897:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1898:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1899:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1900:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1901:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1902:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 1U;
1903:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1904:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1905:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1906:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendRepeatedStart(I2C_MASTER_t * const handle, const uint32_t addre
1907:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                          const XMC_I2C_CH_CMD_t cmd)
1908:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1124              	 .loc 4 1908 0
 1125              	 .cfi_startproc
 1126 0000 80B5     	 push {r7,lr}
 1127              	.LCFI84:
 1128              	 .cfi_def_cfa_offset 8
 1129              	 .cfi_offset 7,-8
 1130              	 .cfi_offset 14,-4
 1131 0002 84B0     	 sub sp,sp,#16
 1132              	.LCFI85:
 1133              	 .cfi_def_cfa_offset 24
 1134 0004 00AF     	 add r7,sp,#0
 1135              	.LCFI86:
 1136              	 .cfi_def_cfa_register 7
 1137 0006 F860     	 str r0,[r7,#12]
 1138 0008 B960     	 str r1,[r7,#8]
 1139 000a FB1D     	 add r3,r7,#7
 1140 000c 1A70     	 strb r2,[r3]
1909:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendRepeatedStart: invalid handle", (handle != NULL))
1910:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEI
 1141              	 .loc 4 1910 0
 1142 000e FB68     	 ldr r3,[r7,#12]
 1143 0010 1B68     	 ldr r3,[r3]
 1144 0012 181C     	 mov r0,r3
 1145 0014 0821     	 mov r1,#8
 1146 0016 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
1911:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterRepeatedStart(handle->channel, (uint16_t)address, cmd);
 1147              	 .loc 4 1911 0
 1148 001a FB68     	 ldr r3,[r7,#12]
 1149 001c 1968     	 ldr r1,[r3]
 1150 001e BB68     	 ldr r3,[r7,#8]
 1151 0020 9AB2     	 uxth r2,r3
 1152 0022 FB1D     	 add r3,r7,#7
 1153 0024 1B78     	 ldrb r3,[r3]
 1154 0026 081C     	 mov r0,r1
 1155 0028 111C     	 mov r1,r2
 1156 002a 1A1C     	 mov r2,r3
 1157 002c FFF7FEFF 	 bl XMC_I2C_CH_MasterRepeatedStart
1912:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1158              	 .loc 4 1912 0
 1159 0030 BD46     	 mov sp,r7
 1160 0032 04B0     	 add sp,sp,#16
 1161              	 
 1162 0034 80BD     	 pop {r7,pc}
 1163              	 .cfi_endproc
 1164              	.LFE143:
 1166 0036 C046     	 .section .text.calculate_minfifosize,"ax",%progbits
 1167              	 .align 2
 1168              	 .code 16
 1169              	 .thumb_func
 1171              	calculate_minfifosize:
 1172              	.LFB150:
 1173              	 .file 5 "../Dave/Generated/I2C_MASTER/i2c_master.c"
   1:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**
   2:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @file i2c_master.c
   3:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @date 2017-12-20
   4:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
   5:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * NOTE:
   6:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
   8:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**
   9:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @cond
  10:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  11:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * I2C_MASTER v4.1.24 Configures USIC channel to transmit & receive data using I2C protocol.
  12:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  13:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  14:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * All rights reserved.
  15:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  16:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * following conditions are met:
  18:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  19:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   disclaimer.
  21:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  22:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  25:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  28:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  36:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  39:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  40:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Change History
  41:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * --------------
  42:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  43:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2015-02-16:
  44:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Initial version<br>
  45:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  46:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2015-06-10:
  47:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  48:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  49:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2015-07-31:
  50:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - DMA support APIs added
  51:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  52:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2017-01-19:
  53:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Avoid unintended interrupts when filling FIFO
  54:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  55:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2017-11-17:
  56:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Use tx_irqn of channel config structure in the call of NVIC_ClearPendingIRQ()
  57:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  58:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2017-12-20:
  59:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Fix TX DMA issues
  60:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  61:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @endcond
  62:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  63:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
  64:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  65:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * HEADER FILES
  66:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  67:../Dave/Generated/I2C_MASTER/i2c_master.c **** #include "i2c_master.h"
  68:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  69:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  70:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * MACROS
  71:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  72:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_TDF_RECEIVE_ACK             (0x0200U)
  73:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_TDF_RECEIVE_NACK       (3U << 8U)
  74:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_DST_TR_WIDTH_MASK   (0x7EU)
  75:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_ADDR_INC_MASK       (0x600U)
  76:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_ADDR_INC_POS        (9U)
  77:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_TRANSFER_WIDTH_POS  (4U)
  78:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_DST_TRANSFER_WIDTH_POS  (1U)
  79:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  80:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_DMA_MAX_BLOCK_SIZE (4095U)
  81:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  82:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  83:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * LOCAL DATA
  84:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  85:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  86:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  87:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * LOCAL ROUTINES
  88:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  89:../Dave/Generated/I2C_MASTER/i2c_master.c ****  /*
  90:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Function monitors the configured protocol interrupt flags. It is called from the protocol interr
  91:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * service handler.
  92:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Function reads the status of the USIC channel and checks for configured flags in the app UI.
  93:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * If any callback function is provided in the app UI, it will be called when the selected flag is 
  94:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  95:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * I2C_MASTER_t * pointer to the I2C_MASTER APP instance handle
  96:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  97:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
  98:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ProtocolHandler(I2C_MASTER_t * const handle);
  99:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 100:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1))
 101:../Dave/Generated/I2C_MASTER/i2c_master.c **** static uint32_t calculate_minfifosize(uint32_t a, uint32_t b)
 102:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1174              	 .loc 5 102 0
 1175              	 .cfi_startproc
 1176 0000 80B5     	 push {r7,lr}
 1177              	.LCFI87:
 1178              	 .cfi_def_cfa_offset 8
 1179              	 .cfi_offset 7,-8
 1180              	 .cfi_offset 14,-4
 1181 0002 84B0     	 sub sp,sp,#16
 1182              	.LCFI88:
 1183              	 .cfi_def_cfa_offset 24
 1184 0004 00AF     	 add r7,sp,#0
 1185              	.LCFI89:
 1186              	 .cfi_def_cfa_register 7
 1187 0006 7860     	 str r0,[r7,#4]
 1188 0008 3960     	 str r1,[r7]
 103:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t result;
 104:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 105:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (a < b)
 1189              	 .loc 5 105 0
 1190 000a 7A68     	 ldr r2,[r7,#4]
 1191 000c 3B68     	 ldr r3,[r7]
 1192 000e 9A42     	 cmp r2,r3
 1193 0010 02D2     	 bcs .L42
 106:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 107:../Dave/Generated/I2C_MASTER/i2c_master.c ****     result = a;
 1194              	 .loc 5 107 0
 1195 0012 7B68     	 ldr r3,[r7,#4]
 1196 0014 FB60     	 str r3,[r7,#12]
 1197 0016 01E0     	 b .L43
 1198              	.L42:
 108:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 109:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 110:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 111:../Dave/Generated/I2C_MASTER/i2c_master.c ****     result = b;
 1199              	 .loc 5 111 0
 1200 0018 3B68     	 ldr r3,[r7]
 1201 001a FB60     	 str r3,[r7,#12]
 1202              	.L43:
 112:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 113:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (result);
 1203              	 .loc 5 113 0
 1204 001c FB68     	 ldr r3,[r7,#12]
 114:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1205              	 .loc 5 114 0
 1206 001e 181C     	 mov r0,r3
 1207 0020 BD46     	 mov sp,r7
 1208 0022 04B0     	 add sp,sp,#16
 1209              	 
 1210 0024 80BD     	 pop {r7,pc}
 1211              	 .cfi_endproc
 1212              	.LFE150:
 1214 0026 C046     	 .section .text.I2C_MASTER_GetAppVersion,"ax",%progbits
 1215              	 .align 2
 1216              	 .global I2C_MASTER_GetAppVersion
 1217              	 .code 16
 1218              	 .thumb_func
 1220              	I2C_MASTER_GetAppVersion:
 1221              	.LFB151:
 115:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 116:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 117:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1) || \
 118:../Dave/Generated/I2C_MASTER/i2c_master.c ****     (I2C_MASTER_DIRECT_TX_ENABLED == 1) || (I2C_MASTER_DIRECT_RX_ENABLED == 1))
 119:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStart_Or_RepeatedStart(I2C_MASTER_t * handle, const uint32_t address,
 120:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                const XMC_I2C_CH_CMD_t cmd);
 121:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 122:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 123:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1))
 124:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_TxCallback(I2C_MASTER_t *const handle);
 125:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 126:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 127:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if(I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
 128:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_AbortTransmitIRQ(const I2C_MASTER_t *const handle);
 129:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 130:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 131:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 132:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_RxCallback(I2C_MASTER_t *const handle);
 133:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReconfigureRxFIFO(const I2C_MASTER_t * const handle, uint32_t data_size);
 134:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 135:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_FIFOData(I2C_MASTER_t * const handle, bool send_start, const uint32
 136:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                          const uint32_t count);
 137:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 138:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_StdData(I2C_MASTER_t * const handle, bool send_start, const uint32_
 139:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortReceiveIRQ(const I2C_MASTER_t *const handle);
 140:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 141:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 142:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 143:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DIRECT_TX_ENABLED == 1)
 144:../Dave/Generated/I2C_MASTER/i2c_master.c **** static I2C_MASTER_STATUS_t I2C_MASTER_lStartTransmitPolling(I2C_MASTER_t *const handle, bool send_s
 145:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                         const uint32_t slave_address, uint8_t *data
 146:../Dave/Generated/I2C_MASTER/i2c_master.c ****                               bool send_stop);
 147:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 148:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if I2C_MASTER_DIRECT_RX_ENABLED
 149:../Dave/Generated/I2C_MASTER/i2c_master.c **** static I2C_MASTER_STATUS_t I2C_MASTER_lStartReceivePolling(I2C_MASTER_t *const handle, bool send_st
 150:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                        uint8_t *data, uint32_t count, bool send_sto
 151:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                bool send_nack);
 152:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 153:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 154:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortTransmitDMA(const I2C_MASTER_t *const handle);
 155:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 156:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 157:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortReceiveDMA(const I2C_MASTER_t *const handle);
 158:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 159:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 160:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1) && (I2C_MASTER_DMA_RX_ENABLED == 1)
 161:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* DMA buffer to send the ACK */
 162:../Dave/Generated/I2C_MASTER/i2c_master.c **** static uint16_t ack_buf[1];
 163:../Dave/Generated/I2C_MASTER/i2c_master.c **** static uint16_t nack_buf[1];
 164:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 165:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 166:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 167:../Dave/Generated/I2C_MASTER/i2c_master.c **** * API IMPLEMENTATION
 168:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 169:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 170:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
 171:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief API to retrieve the version of the I2C_MASTER APP.
 172:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 173:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return DAVE_APP_VERSION_t Structure containing major version, minor version
 174:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *         and patch version.
 175:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 176:../Dave/Generated/I2C_MASTER/i2c_master.c **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void)
 177:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1222              	 .loc 5 177 0
 1223              	 .cfi_startproc
 1224 0000 80B5     	 push {r7,lr}
 1225              	.LCFI90:
 1226              	 .cfi_def_cfa_offset 8
 1227              	 .cfi_offset 7,-8
 1228              	 .cfi_offset 14,-4
 1229 0002 82B0     	 sub sp,sp,#8
 1230              	.LCFI91:
 1231              	 .cfi_def_cfa_offset 16
 1232 0004 00AF     	 add r7,sp,#0
 1233              	.LCFI92:
 1234              	 .cfi_def_cfa_register 7
 178:../Dave/Generated/I2C_MASTER/i2c_master.c ****   DAVE_APP_VERSION_t version;
 179:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 180:../Dave/Generated/I2C_MASTER/i2c_master.c ****   version.major = I2C_MASTER_MAJOR_VERSION;
 1235              	 .loc 5 180 0
 1236 0006 3B1C     	 mov r3,r7
 1237 0008 0422     	 mov r2,#4
 1238 000a 1A70     	 strb r2,[r3]
 181:../Dave/Generated/I2C_MASTER/i2c_master.c ****   version.minor = I2C_MASTER_MINOR_VERSION;
 1239              	 .loc 5 181 0
 1240 000c 3B1C     	 mov r3,r7
 1241 000e 0122     	 mov r2,#1
 1242 0010 5A70     	 strb r2,[r3,#1]
 182:../Dave/Generated/I2C_MASTER/i2c_master.c ****   version.patch = I2C_MASTER_PATCH_VERSION;
 1243              	 .loc 5 182 0
 1244 0012 3B1C     	 mov r3,r7
 1245 0014 1A22     	 mov r2,#26
 1246 0016 9A70     	 strb r2,[r3,#2]
 183:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 184:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (version);
 1247              	 .loc 5 184 0
 1248 0018 3B1D     	 add r3,r7,#4
 1249 001a 3A1C     	 mov r2,r7
 1250 001c 1188     	 ldrh r1,[r2]
 1251 001e 1980     	 strh r1,[r3]
 1252 0020 9278     	 ldrb r2,[r2,#2]
 1253 0022 9A70     	 strb r2,[r3,#2]
 1254 0024 3A1D     	 add r2,r7,#4
 1255 0026 0023     	 mov r3,#0
 1256 0028 1178     	 ldrb r1,[r2]
 1257 002a FF20     	 mov r0,#255
 1258 002c 0140     	 and r1,r0
 1259 002e FF20     	 mov r0,#255
 1260 0030 8343     	 bic r3,r0
 1261 0032 0B43     	 orr r3,r1
 1262 0034 5178     	 ldrb r1,[r2,#1]
 1263 0036 FF20     	 mov r0,#255
 1264 0038 0140     	 and r1,r0
 1265 003a 0902     	 lsl r1,r1,#8
 1266 003c 0648     	 ldr r0,.L47
 1267 003e 0340     	 and r3,r0
 1268 0040 0B43     	 orr r3,r1
 1269 0042 9278     	 ldrb r2,[r2,#2]
 1270 0044 FF21     	 mov r1,#255
 1271 0046 0A40     	 and r2,r1
 1272 0048 1204     	 lsl r2,r2,#16
 1273 004a 0449     	 ldr r1,.L47+4
 1274 004c 0B40     	 and r3,r1
 1275 004e 1343     	 orr r3,r2
 185:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1276              	 .loc 5 185 0
 1277 0050 181C     	 mov r0,r3
 1278 0052 BD46     	 mov sp,r7
 1279 0054 02B0     	 add sp,sp,#8
 1280              	 
 1281 0056 80BD     	 pop {r7,pc}
 1282              	.L48:
 1283              	 .align 2
 1284              	.L47:
 1285 0058 FF00FFFF 	 .word -65281
 1286 005c FFFF00FF 	 .word -16711681
 1287              	 .cfi_endproc
 1288              	.LFE151:
 1290              	 .section .text.I2C_MASTER_Init,"ax",%progbits
 1291              	 .align 2
 1292              	 .global I2C_MASTER_Init
 1293              	 .code 16
 1294              	 .thumb_func
 1296              	I2C_MASTER_Init:
 1297              	.LFB152:
 186:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 187:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to initialize the USIC Channel with GUI configured values.*/
 188:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle)
 189:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1298              	 .loc 5 189 0
 1299              	 .cfi_startproc
 1300 0000 80B5     	 push {r7,lr}
 1301              	.LCFI93:
 1302              	 .cfi_def_cfa_offset 8
 1303              	 .cfi_offset 7,-8
 1304              	 .cfi_offset 14,-4
 1305 0002 84B0     	 sub sp,sp,#16
 1306              	.LCFI94:
 1307              	 .cfi_def_cfa_offset 24
 1308 0004 00AF     	 add r7,sp,#0
 1309              	.LCFI95:
 1310              	 .cfi_def_cfa_register 7
 1311 0006 7860     	 str r0,[r7,#4]
 190:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 191:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 192:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle != NULL)
 1312              	 .loc 5 192 0
 1313 0008 7B68     	 ldr r3,[r7,#4]
 1314 000a 002B     	 cmp r3,#0
 1315 000c 08D0     	 beq .L50
 193:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 194:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Initialize the multiplexers required for I2C_MASTER configuration*/
 195:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->fptr_i2c_config();
 1316              	 .loc 5 195 0
 1317 000e 7B68     	 ldr r3,[r7,#4]
 1318 0010 5B68     	 ldr r3,[r3,#4]
 1319 0012 5B68     	 ldr r3,[r3,#4]
 1320 0014 9847     	 blx r3
 196:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 197:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_SUCCESS;
 1321              	 .loc 5 197 0
 1322 0016 0F23     	 mov r3,#15
 1323 0018 FB18     	 add r3,r7,r3
 1324 001a 0022     	 mov r2,#0
 1325 001c 1A70     	 strb r2,[r3]
 1326 001e 03E0     	 b .L51
 1327              	.L50:
 198:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 199:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 200:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 201:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 1328              	 .loc 5 201 0
 1329 0020 0F23     	 mov r3,#15
 1330 0022 FB18     	 add r3,r7,r3
 1331 0024 0122     	 mov r2,#1
 1332 0026 1A70     	 strb r2,[r3]
 1333              	.L51:
 202:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 203:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 1334              	 .loc 5 203 0
 1335 0028 0F23     	 mov r3,#15
 1336 002a FB18     	 add r3,r7,r3
 1337 002c 1B78     	 ldrb r3,[r3]
 204:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1338              	 .loc 5 204 0
 1339 002e 181C     	 mov r0,r3
 1340 0030 BD46     	 mov sp,r7
 1341 0032 04B0     	 add sp,sp,#16
 1342              	 
 1343 0034 80BD     	 pop {r7,pc}
 1344              	 .cfi_endproc
 1345              	.LFE152:
 1347 0036 C046     	 .section .text.I2C_MASTER_GetFlagStatus,"ax",%progbits
 1348              	 .align 2
 1349              	 .global I2C_MASTER_GetFlagStatus
 1350              	 .code 16
 1351              	 .thumb_func
 1353              	I2C_MASTER_GetFlagStatus:
 1354              	.LFB153:
 205:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 206:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to get flag status of the requested parameter */
 207:../Dave/Generated/I2C_MASTER/i2c_master.c **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype)
 208:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1355              	 .loc 5 208 0
 1356              	 .cfi_startproc
 1357 0000 80B5     	 push {r7,lr}
 1358              	.LCFI96:
 1359              	 .cfi_def_cfa_offset 8
 1360              	 .cfi_offset 7,-8
 1361              	 .cfi_offset 14,-4
 1362 0002 84B0     	 sub sp,sp,#16
 1363              	.LCFI97:
 1364              	 .cfi_def_cfa_offset 24
 1365 0004 00AF     	 add r7,sp,#0
 1366              	.LCFI98:
 1367              	 .cfi_def_cfa_register 7
 1368 0006 7860     	 str r0,[r7,#4]
 1369 0008 3960     	 str r1,[r7]
 209:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t status;
 210:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 211:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = XMC_I2C_CH_GetStatusFlag(handle->channel);
 1370              	 .loc 5 211 0
 1371 000a 7B68     	 ldr r3,[r7,#4]
 1372 000c 1B68     	 ldr r3,[r3]
 1373 000e 181C     	 mov r0,r3
 1374 0010 FFF7FEFF 	 bl XMC_I2C_CH_GetStatusFlag
 1375 0014 031C     	 mov r3,r0
 1376 0016 FB60     	 str r3,[r7,#12]
 212:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 213:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status & flagtype);
 1377              	 .loc 5 213 0
 1378 0018 FB68     	 ldr r3,[r7,#12]
 1379 001a 3A68     	 ldr r2,[r7]
 1380 001c 1340     	 and r3,r2
 214:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1381              	 .loc 5 214 0
 1382 001e 181C     	 mov r0,r3
 1383 0020 BD46     	 mov sp,r7
 1384 0022 04B0     	 add sp,sp,#16
 1385              	 
 1386 0024 80BD     	 pop {r7,pc}
 1387              	 .cfi_endproc
 1388              	.LFE153:
 1390 0026 C046     	 .section .text.I2C_MASTER_ClearFlag,"ax",%progbits
 1391              	 .align 2
 1392              	 .global I2C_MASTER_ClearFlag
 1393              	 .code 16
 1394              	 .thumb_func
 1396              	I2C_MASTER_ClearFlag:
 1397              	.LFB154:
 215:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 216:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to clear flag status of the requested parameter */
 217:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype)
 218:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1398              	 .loc 5 218 0
 1399              	 .cfi_startproc
 1400 0000 80B5     	 push {r7,lr}
 1401              	.LCFI99:
 1402              	 .cfi_def_cfa_offset 8
 1403              	 .cfi_offset 7,-8
 1404              	 .cfi_offset 14,-4
 1405 0002 82B0     	 sub sp,sp,#8
 1406              	.LCFI100:
 1407              	 .cfi_def_cfa_offset 16
 1408 0004 00AF     	 add r7,sp,#0
 1409              	.LCFI101:
 1410              	 .cfi_def_cfa_register 7
 1411 0006 7860     	 str r0,[r7,#4]
 1412 0008 3960     	 str r1,[r7]
 219:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_I2C_CH_ClearStatusFlag(handle->channel,flagtype);
 1413              	 .loc 5 219 0
 1414 000a 7B68     	 ldr r3,[r7,#4]
 1415 000c 1A68     	 ldr r2,[r3]
 1416 000e 3B68     	 ldr r3,[r7]
 1417 0010 101C     	 mov r0,r2
 1418 0012 191C     	 mov r1,r3
 1419 0014 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 220:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1420              	 .loc 5 220 0
 1421 0018 BD46     	 mov sp,r7
 1422 001a 02B0     	 add sp,sp,#8
 1423              	 
 1424 001c 80BD     	 pop {r7,pc}
 1425              	 .cfi_endproc
 1426              	.LFE154:
 1428 001e C046     	 .section .text.I2C_MASTER_Transmit,"ax",%progbits
 1429              	 .align 2
 1430              	 .global I2C_MASTER_Transmit
 1431              	 .code 16
 1432              	 .thumb_func
 1434              	I2C_MASTER_Transmit:
 1435              	.LFB155:
 221:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 222:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to transmit the data to slave device */
 223:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 224:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         uint8_t *data, const uint32_t size, bool send_stop)
 225:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1436              	 .loc 5 225 0
 1437              	 .cfi_startproc
 1438 0000 B0B5     	 push {r4,r5,r7,lr}
 1439              	.LCFI102:
 1440              	 .cfi_def_cfa_offset 16
 1441              	 .cfi_offset 4,-16
 1442              	 .cfi_offset 5,-12
 1443              	 .cfi_offset 7,-8
 1444              	 .cfi_offset 14,-4
 1445 0002 88B0     	 sub sp,sp,#32
 1446              	.LCFI103:
 1447              	 .cfi_def_cfa_offset 48
 1448 0004 02AF     	 add r7,sp,#8
 1449              	.LCFI104:
 1450              	 .cfi_def_cfa 7,40
 1451 0006 F860     	 str r0,[r7,#12]
 1452 0008 7A60     	 str r2,[r7,#4]
 1453 000a 3B60     	 str r3,[r7]
 1454 000c 0B23     	 mov r3,#11
 1455 000e FB18     	 add r3,r7,r3
 1456 0010 0A1C     	 add r2,r1,#0
 1457 0012 1A70     	 strb r2,[r3]
 226:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 227:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 228:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 1458              	 .loc 5 228 0
 1459 0014 1723     	 mov r3,#23
 1460 0016 FB18     	 add r3,r7,r3
 1461 0018 0222     	 mov r2,#2
 1462 001a 1A70     	 strb r2,[r3]
 229:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 230:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if(handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 1463              	 .loc 5 230 0
 1464 001c FB68     	 ldr r3,[r7,#12]
 1465 001e 5B68     	 ldr r3,[r3,#4]
 1466 0020 2422     	 mov r2,#36
 1467 0022 9B5C     	 ldrb r3,[r3,r2]
 1468 0024 002B     	 cmp r3,#0
 1469 0026 12D1     	 bne .L58
 231:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 232:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
 233:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_StartTransmitIRQ(handle, send_start, address, data, size, send_stop);
 1470              	 .loc 5 233 0
 1471 0028 1723     	 mov r3,#23
 1472 002a FC18     	 add r4,r7,r3
 1473 002c F868     	 ldr r0,[r7,#12]
 1474 002e 0B23     	 mov r3,#11
 1475 0030 FB18     	 add r3,r7,r3
 1476 0032 1978     	 ldrb r1,[r3]
 1477 0034 7A68     	 ldr r2,[r7,#4]
 1478 0036 3D68     	 ldr r5,[r7]
 1479 0038 BB6A     	 ldr r3,[r7,#40]
 1480 003a 0093     	 str r3,[sp]
 1481 003c 2C23     	 mov r3,#44
 1482 003e FB18     	 add r3,r7,r3
 1483 0040 1B78     	 ldrb r3,[r3]
 1484 0042 0193     	 str r3,[sp,#4]
 1485 0044 2B1C     	 mov r3,r5
 1486 0046 FFF7FEFF 	 bl I2C_MASTER_StartTransmitIRQ
 1487 004a 031C     	 mov r3,r0
 1488 004c 2370     	 strb r3,[r4]
 1489              	.L58:
 234:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 235:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 236:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if(handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 237:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 238:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 239:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_UNSUPPORTED_MODE;
 240:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 241:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 242:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 243:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 244:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DIRECT_TX_ENABLED == 1)
 245:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_lStartTransmitPolling(handle, send_start, address, data, size, send_stop);
 246:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 247:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 248:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 249:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 1490              	 .loc 5 249 0
 1491 004e 1723     	 mov r3,#23
 1492 0050 FB18     	 add r3,r7,r3
 1493 0052 1B78     	 ldrb r3,[r3]
 250:../Dave/Generated/I2C_MASTER/i2c_master.c **** } /* end of function */
 1494              	 .loc 5 250 0
 1495 0054 181C     	 mov r0,r3
 1496 0056 BD46     	 mov sp,r7
 1497 0058 06B0     	 add sp,sp,#24
 1498              	 
 1499 005a B0BD     	 pop {r4,r5,r7,pc}
 1500              	 .cfi_endproc
 1501              	.LFE155:
 1503              	 .section .text.I2C_MASTER_TransmitHandler,"ax",%progbits
 1504              	 .align 2
 1505              	 .global I2C_MASTER_TransmitHandler
 1506              	 .code 16
 1507              	 .thumb_func
 1509              	I2C_MASTER_TransmitHandler:
 1510              	.LFB156:
 251:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 252:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1))
 253:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
 254:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Transmit interrupt handler for the APP.
 255:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * This is a common interrupt handling function called for different instances of the APP.
 256:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 257:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *  @param  handle I2C_MASTER APP handle pointer of type I2C_MASTER_t*
 258:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 259:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *  @return void
 260:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 261:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_TransmitHandler(I2C_MASTER_t * const handle)
 262:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1511              	 .loc 5 262 0
 1512              	 .cfi_startproc
 1513 0000 80B5     	 push {r7,lr}
 1514              	.LCFI105:
 1515              	 .cfi_def_cfa_offset 8
 1516              	 .cfi_offset 7,-8
 1517              	 .cfi_offset 14,-4
 1518 0002 84B0     	 sub sp,sp,#16
 1519              	.LCFI106:
 1520              	 .cfi_def_cfa_offset 24
 1521 0004 00AF     	 add r7,sp,#0
 1522              	.LCFI107:
 1523              	 .cfi_def_cfa_register 7
 1524 0006 7860     	 str r0,[r7,#4]
 263:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 264:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_min;
 265:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 266:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 1525              	 .loc 5 266 0
 1526 0008 7B68     	 ldr r3,[r7,#4]
 1527 000a 9B68     	 ldr r3,[r3,#8]
 1528 000c BB60     	 str r3,[r7,#8]
 267:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_min = 0U;
 1529              	 .loc 5 267 0
 1530 000e 0F23     	 mov r3,#15
 1531 0010 FB18     	 add r3,r7,r3
 1532 0012 0022     	 mov r2,#0
 1533 0014 1A70     	 strb r2,[r3]
 268:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 269:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* check if any error flag is set */
 270:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (I2C_MASTER_GetFlagStatus(handle, ((uint32_t)XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED |
 1534              	 .loc 5 270 0
 1535 0016 7A68     	 ldr r2,[r7,#4]
 1536 0018 B123     	 mov r3,#177
 1537 001a 5B00     	 lsl r3,r3,#1
 1538 001c 101C     	 mov r0,r2
 1539 001e 191C     	 mov r1,r3
 1540 0020 FFF7FEFF 	 bl I2C_MASTER_GetFlagStatus
 1541 0024 031E     	 sub r3,r0,#0
 1542 0026 14D0     	 beq .L61
 271:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         (uint32_t)XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST |
 272:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         (uint32_t)XMC_I2C_CH_STATUS_FLAG_ERROR |
 273:../Dave/Generated/I2C_MASTER/i2c_master.c ****                     (uint32_t)XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND)))
 274:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 275:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /* Disable the transmit events */
 276:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDAR
 1543              	 .loc 5 276 0
 1544 0028 7B68     	 ldr r3,[r7,#4]
 1545 002a 1A68     	 ldr r2,[r3]
 1546 002c 8023     	 mov r3,#128
 1547 002e DB05     	 lsl r3,r3,#23
 1548 0030 101C     	 mov r0,r2
 1549 0032 191C     	 mov r1,r3
 1550 0034 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 277:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 1551              	 .loc 5 277 0
 1552 0038 7B68     	 ldr r3,[r7,#4]
 1553 003a 1A68     	 ldr r2,[r3]
 1554 003c 8023     	 mov r3,#128
 1555 003e 9B01     	 lsl r3,r3,#6
 1556 0040 101C     	 mov r0,r2
 1557 0042 191C     	 mov r1,r3
 1558 0044 FFF7FEFF 	 bl XMC_USIC_CH_DisableEvent
 278:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 279:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ProtocolHandler(handle);
 1559              	 .loc 5 279 0
 1560 0048 7B68     	 ldr r3,[r7,#4]
 1561 004a 181C     	 mov r0,r3
 1562 004c FFF7FEFF 	 bl I2C_MASTER_ProtocolHandler
 1563 0050 1FE1     	 b .L60
 1564              	.L61:
 280:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 281:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 282:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 283:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 284:../Dave/Generated/I2C_MASTER/i2c_master.c ****   Direction = Transmit, Tx FIFO enabled
 285:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 286:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->direction == (uint32_t)I2C_MASTER_DIRECTION_TRANSMIT)
 1565              	 .loc 5 286 0
 1566 0052 BB68     	 ldr r3,[r7,#8]
 1567 0054 9B69     	 ldr r3,[r3,#24]
 1568 0056 002B     	 cmp r3,#0
 1569 0058 00D0     	 beq .LCB1381
 1570 005a 8CE0     	 b .L63
 1571              	.LCB1381:
 287:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 288:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size > 0)
 1572              	 .loc 5 288 0
 1573 005c 7B68     	 ldr r3,[r7,#4]
 1574 005e 5B68     	 ldr r3,[r3,#4]
 1575 0060 2622     	 mov r2,#38
 1576 0062 9B5C     	 ldrb r3,[r3,r2]
 1577 0064 002B     	 cmp r3,#0
 1578 0066 63D0     	 beq .L64
 289:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 290:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 1579              	 .loc 5 290 0
 1580 0068 BB68     	 ldr r3,[r7,#8]
 1581 006a DA68     	 ldr r2,[r3,#12]
 1582 006c BB68     	 ldr r3,[r7,#8]
 1583 006e 9B68     	 ldr r3,[r3,#8]
 1584 0070 9A42     	 cmp r2,r3
 1585 0072 34D2     	 bcs .L65
 291:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 292:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_DisableEvent(handle,(uint32_t)XMC_I2C_CH_EVENT_ACK);
 1586              	 .loc 5 292 0
 1587 0074 7A68     	 ldr r2,[r7,#4]
 1588 0076 8023     	 mov r3,#128
 1589 0078 DB05     	 lsl r3,r3,#23
 1590 007a 101C     	 mov r0,r2
 1591 007c 191C     	 mov r1,r3
 1592 007e FFF7FEFF 	 bl I2C_MASTER_DisableEvent
 293:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_EnableEvent(handle->channel, (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAND
 1593              	 .loc 5 293 0
 1594 0082 7B68     	 ldr r3,[r7,#4]
 1595 0084 1A68     	 ldr r2,[r3]
 1596 0086 8023     	 mov r3,#128
 1597 0088 DB05     	 lsl r3,r3,#23
 1598 008a 101C     	 mov r0,r2
 1599 008c 191C     	 mov r1,r3
 1600 008e FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_EnableEvent
 294:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /*Fill the transmit FIFO */
 295:../Dave/Generated/I2C_MASTER/i2c_master.c ****         while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 1601              	 .loc 5 295 0
 1602 0092 18E0     	 b .L66
 1603              	.L69:
 296:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 297:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /* transmit each byte till index reaches to the last byte */
 298:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 1604              	 .loc 5 298 0
 1605 0094 BB68     	 ldr r3,[r7,#8]
 1606 0096 DA68     	 ldr r2,[r3,#12]
 1607 0098 BB68     	 ldr r3,[r7,#8]
 1608 009a 9B68     	 ldr r3,[r3,#8]
 1609 009c 9A42     	 cmp r2,r3
 1610 009e 10D2     	 bcs .L67
 299:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 300:../Dave/Generated/I2C_MASTER/i2c_master.c ****             /* load the FIFO, byte by byte till either FIFO is full or all data is loaded*/
 301:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_TransmitByte(handle, (uint8_t)ptr_runtime->tx_data[ptr_runtime->tx_data_inde
 1611              	 .loc 5 301 0
 1612 00a0 BB68     	 ldr r3,[r7,#8]
 1613 00a2 1A68     	 ldr r2,[r3]
 1614 00a4 BB68     	 ldr r3,[r7,#8]
 1615 00a6 DB68     	 ldr r3,[r3,#12]
 1616 00a8 D318     	 add r3,r2,r3
 1617 00aa 1B78     	 ldrb r3,[r3]
 1618 00ac 7A68     	 ldr r2,[r7,#4]
 1619 00ae 101C     	 mov r0,r2
 1620 00b0 191C     	 mov r1,r3
 1621 00b2 FFF7FEFF 	 bl I2C_MASTER_TransmitByte
 302:../Dave/Generated/I2C_MASTER/i2c_master.c ****             ptr_runtime->tx_data_index++;
 1622              	 .loc 5 302 0
 1623 00b6 BB68     	 ldr r3,[r7,#8]
 1624 00b8 DB68     	 ldr r3,[r3,#12]
 1625 00ba 5A1C     	 add r2,r3,#1
 1626 00bc BB68     	 ldr r3,[r7,#8]
 1627 00be DA60     	 str r2,[r3,#12]
 1628 00c0 01E0     	 b .L66
 1629              	.L67:
 303:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 304:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 305:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 306:../Dave/Generated/I2C_MASTER/i2c_master.c ****             break;
 1630              	 .loc 5 306 0
 1631 00c2 C046     	 mov r8,r8
 1632 00c4 E5E0     	 b .L60
 1633              	.L66:
 295:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 1634              	 .loc 5 295 0
 1635 00c6 7B68     	 ldr r3,[r7,#4]
 1636 00c8 181C     	 mov r0,r3
 1637 00ca FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 1638 00ce 031C     	 mov r3,r0
 1639 00d0 1A1C     	 mov r2,r3
 1640 00d2 0123     	 mov r3,#1
 1641 00d4 5340     	 eor r3,r2
 1642 00d6 DBB2     	 uxtb r3,r3
 1643 00d8 002B     	 cmp r3,#0
 1644 00da DBD1     	 bne .L69
 1645 00dc D9E0     	 b .L60
 1646              	.L65:
 307:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 308:../Dave/Generated/I2C_MASTER/i2c_master.c ****         } /* end of while */
 309:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 310:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 311:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 312:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if index is reached to last byte and "bus acquired" flag is set to true, then issue Send
 313:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAN
 1647              	 .loc 5 313 0
 1648 00de 7B68     	 ldr r3,[r7,#4]
 1649 00e0 1A68     	 ldr r2,[r3]
 1650 00e2 8023     	 mov r3,#128
 1651 00e4 DB05     	 lsl r3,r3,#23
 1652 00e6 101C     	 mov r0,r2
 1653 00e8 191C     	 mov r1,r3
 1654 00ea FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 314:../Dave/Generated/I2C_MASTER/i2c_master.c ****       NVIC_ClearPendingIRQ(handle->config->tx_irqn);
 1655              	 .loc 5 314 0
 1656 00ee 7B68     	 ldr r3,[r7,#4]
 1657 00f0 5B68     	 ldr r3,[r3,#4]
 1658 00f2 2822     	 mov r2,#40
 1659 00f4 9B5C     	 ldrb r3,[r3,r2]
 1660 00f6 5BB2     	 sxtb r3,r3
 1661 00f8 181C     	 mov r0,r3
 1662 00fa FFF7FEFF 	 bl __NVIC_ClearPendingIRQ
 315:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 316:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*make sure data is transmitted in FIFO*/
 317:../Dave/Generated/I2C_MASTER/i2c_master.c ****         while (!XMC_USIC_CH_TXFIFO_IsEmpty(handle->channel)){}
 1663              	 .loc 5 317 0
 1664 00fe C046     	 mov r8,r8
 1665              	.L71:
 1666              	 .loc 5 317 0 is_stmt 0 discriminator 1
 1667 0100 7B68     	 ldr r3,[r7,#4]
 1668 0102 1B68     	 ldr r3,[r3]
 1669 0104 181C     	 mov r0,r3
 1670 0106 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsEmpty
 1671 010a 031C     	 mov r3,r0
 1672 010c 1A1C     	 mov r2,r3
 1673 010e 0123     	 mov r3,#1
 1674 0110 5340     	 eor r3,r2
 1675 0112 DBB2     	 uxtb r3,r3
 1676 0114 002B     	 cmp r3,#0
 1677 0116 F3D1     	 bne .L71
 318:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 319:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (ptr_runtime->bus_acquired == true)
 1678              	 .loc 5 319 0 is_stmt 1
 1679 0118 BB68     	 ldr r3,[r7,#8]
 1680 011a 2822     	 mov r2,#40
 1681 011c 9B5C     	 ldrb r3,[r3,r2]
 1682 011e DBB2     	 uxtb r3,r3
 1683 0120 002B     	 cmp r3,#0
 1684 0122 00D1     	 bne .LCB1488
 1685 0124 B5E0     	 b .L60
 1686              	.LCB1488:
 320:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 321:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_lSendStop_JumpTo_TxCallback(handle);
 1687              	 .loc 5 321 0
 1688 0126 7B68     	 ldr r3,[r7,#4]
 1689 0128 181C     	 mov r0,r3
 1690 012a FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_TxCallback
 1691 012e B0E0     	 b .L60
 1692              	.L64:
 322:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 323:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 324:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of  if(handle->config->txFIFO_size > 0) */
 325:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 326:../Dave/Generated/I2C_MASTER/i2c_master.c ****     Direction = transmit and Tx FIFO disabled
 327:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 328:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 329:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 330:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* transmit each byte till the last byte */
 331:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 1693              	 .loc 5 331 0
 1694 0130 BB68     	 ldr r3,[r7,#8]
 1695 0132 DA68     	 ldr r2,[r3,#12]
 1696 0134 BB68     	 ldr r3,[r7,#8]
 1697 0136 9B68     	 ldr r3,[r3,#8]
 1698 0138 9A42     	 cmp r2,r3
 1699 013a 10D2     	 bcs .L73
 332:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 333:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_TransmitByte(handle, ptr_runtime->tx_data[ptr_runtime->tx_data_index]);
 1700              	 .loc 5 333 0
 1701 013c BB68     	 ldr r3,[r7,#8]
 1702 013e 1A68     	 ldr r2,[r3]
 1703 0140 BB68     	 ldr r3,[r7,#8]
 1704 0142 DB68     	 ldr r3,[r3,#12]
 1705 0144 D318     	 add r3,r2,r3
 1706 0146 1B78     	 ldrb r3,[r3]
 1707 0148 7A68     	 ldr r2,[r7,#4]
 1708 014a 101C     	 mov r0,r2
 1709 014c 191C     	 mov r1,r3
 1710 014e FFF7FEFF 	 bl I2C_MASTER_TransmitByte
 334:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->tx_data_index++;
 1711              	 .loc 5 334 0
 1712 0152 BB68     	 ldr r3,[r7,#8]
 1713 0154 DB68     	 ldr r3,[r3,#12]
 1714 0156 5A1C     	 add r2,r3,#1
 1715 0158 BB68     	 ldr r3,[r7,#8]
 1716 015a DA60     	 str r2,[r3,#12]
 1717 015c 99E0     	 b .L60
 1718              	.L73:
 335:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 336:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 337:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 338:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if index reaches last byte and bus_acquired flag is set to true, issue send stop */
 339:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->bus_acquired == true)
 1719              	 .loc 5 339 0
 1720 015e BB68     	 ldr r3,[r7,#8]
 1721 0160 2822     	 mov r2,#40
 1722 0162 9B5C     	 ldrb r3,[r3,r2]
 1723 0164 DBB2     	 uxtb r3,r3
 1724 0166 002B     	 cmp r3,#0
 1725 0168 00D1     	 bne .LCB1526
 1726 016a 92E0     	 b .L60
 1727              	.LCB1526:
 340:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 341:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_lSendStop_JumpTo_TxCallback(handle);
 1728              	 .loc 5 341 0
 1729 016c 7B68     	 ldr r3,[r7,#4]
 1730 016e 181C     	 mov r0,r3
 1731 0170 FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_TxCallback
 1732 0174 8DE0     	 b .L60
 1733              	.L63:
 342:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 343:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 344:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 345:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of if(ptr_runtime->direction == (uint32_t)I2C_MASTER_DIRECTION_TRANSMIT) */
 346:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 347:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 348:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 349:../Dave/Generated/I2C_MASTER/i2c_master.c ****   Direction = Receive, Tx, Rx FIFO enabled.
 350:../Dave/Generated/I2C_MASTER/i2c_master.c ****   Minimum FIFO value is calculated by comparing Tx FIFO and Rx FIFO size.
 351:../Dave/Generated/I2C_MASTER/i2c_master.c ****   If Rx FIFO is not enabled, default size of 2 is considered.
 352:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 353:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size > 0)
 1734              	 .loc 5 353 0
 1735 0176 7B68     	 ldr r3,[r7,#4]
 1736 0178 5B68     	 ldr r3,[r3,#4]
 1737 017a 2622     	 mov r2,#38
 1738 017c 9B5C     	 ldrb r3,[r3,r2]
 1739 017e 002B     	 cmp r3,#0
 1740 0180 5FD0     	 beq .L74
 354:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 355:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if ((handle->config->rxFIFO_size > 0))
 1741              	 .loc 5 355 0
 1742 0182 7B68     	 ldr r3,[r7,#4]
 1743 0184 5B68     	 ldr r3,[r3,#4]
 1744 0186 2722     	 mov r2,#39
 1745 0188 9B5C     	 ldrb r3,[r3,r2]
 1746 018a 002B     	 cmp r3,#0
 1747 018c 17D0     	 beq .L75
 356:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 357:../Dave/Generated/I2C_MASTER/i2c_master.c ****         fifo_min = (uint8_t)calculate_minfifosize(((uint32_t)1 << (uint32_t)handle->config->txFIFO_
 1748              	 .loc 5 357 0
 1749 018e 7B68     	 ldr r3,[r7,#4]
 1750 0190 5B68     	 ldr r3,[r3,#4]
 1751 0192 2622     	 mov r2,#38
 1752 0194 9B5C     	 ldrb r3,[r3,r2]
 1753 0196 1A1C     	 mov r2,r3
 1754 0198 0123     	 mov r3,#1
 1755 019a 9340     	 lsl r3,r3,r2
 1756 019c 191C     	 mov r1,r3
 358:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               ((uint32_t)1 << (uint32_t)handle->config->rxFIFO_size
 1757              	 .loc 5 358 0
 1758 019e 7B68     	 ldr r3,[r7,#4]
 1759 01a0 5B68     	 ldr r3,[r3,#4]
 1760 01a2 2722     	 mov r2,#39
 1761 01a4 9B5C     	 ldrb r3,[r3,r2]
 357:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               ((uint32_t)1 << (uint32_t)handle->config->rxFIFO_size
 1762              	 .loc 5 357 0
 1763 01a6 1A1C     	 mov r2,r3
 1764 01a8 0123     	 mov r3,#1
 1765 01aa 9340     	 lsl r3,r3,r2
 1766 01ac 081C     	 mov r0,r1
 1767 01ae 191C     	 mov r1,r3
 1768 01b0 FFF7FEFF 	 bl calculate_minfifosize
 1769 01b4 021C     	 mov r2,r0
 1770 01b6 0F23     	 mov r3,#15
 1771 01b8 FB18     	 add r3,r7,r3
 1772 01ba 1A70     	 strb r2,[r3]
 1773 01bc 03E0     	 b .L76
 1774              	.L75:
 359:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 360:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 361:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 362:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if Rx FIFO is disabled, set minimum FIFO size as 2 */
 363:../Dave/Generated/I2C_MASTER/i2c_master.c ****         fifo_min = 2U;
 1775              	 .loc 5 363 0
 1776 01be 0F23     	 mov r3,#15
 1777 01c0 FB18     	 add r3,r7,r3
 1778 01c2 0222     	 mov r2,#2
 1779 01c4 1A70     	 strb r2,[r3]
 1780              	.L76:
 364:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 365:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 366:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAN
 1781              	 .loc 5 366 0
 1782 01c6 7B68     	 ldr r3,[r7,#4]
 1783 01c8 1A68     	 ldr r2,[r3]
 1784 01ca 8023     	 mov r3,#128
 1785 01cc DB05     	 lsl r3,r3,#23
 1786 01ce 101C     	 mov r0,r2
 1787 01d0 191C     	 mov r1,r3
 1788 01d2 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 367:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 368:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* fill the FIFO */
 369:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 1789              	 .loc 5 369 0
 1790 01d6 27E0     	 b .L77
 1791              	.L82:
 370:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 371:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 1792              	 .loc 5 371 0
 1793 01d8 BB68     	 ldr r3,[r7,#8]
 1794 01da DA68     	 ldr r2,[r3,#12]
 1795 01dc BB68     	 ldr r3,[r7,#8]
 1796 01de 9B68     	 ldr r3,[r3,#8]
 1797 01e0 9A42     	 cmp r2,r3
 1798 01e2 20D2     	 bcs .L78
 372:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 373:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /* check for last byte and send_nack is set to true */
 374:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->se
 1799              	 .loc 5 374 0
 1800 01e4 BB68     	 ldr r3,[r7,#8]
 1801 01e6 DB68     	 ldr r3,[r3,#12]
 1802 01e8 5A1C     	 add r2,r3,#1
 1803 01ea BB68     	 ldr r3,[r7,#8]
 1804 01ec 9B68     	 ldr r3,[r3,#8]
 1805 01ee 9A42     	 cmp r2,r3
 1806 01f0 08D1     	 bne .L79
 1807              	 .loc 5 374 0 is_stmt 0 discriminator 1
 1808 01f2 BB68     	 ldr r3,[r7,#8]
 1809 01f4 1B6A     	 ldr r3,[r3,#32]
 1810 01f6 012B     	 cmp r3,#1
 1811 01f8 04D1     	 bne .L79
 375:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 376:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 1812              	 .loc 5 376 0 is_stmt 1
 1813 01fa 7B68     	 ldr r3,[r7,#4]
 1814 01fc 181C     	 mov r0,r3
 1815 01fe FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 1816 0202 03E0     	 b .L80
 1817              	.L79:
 377:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 378:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 379:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 380:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 1818              	 .loc 5 380 0
 1819 0204 7B68     	 ldr r3,[r7,#4]
 1820 0206 181C     	 mov r0,r3
 1821 0208 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 1822              	.L80:
 381:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 382:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 1823              	 .loc 5 382 0
 1824 020c BB68     	 ldr r3,[r7,#8]
 1825 020e DB68     	 ldr r3,[r3,#12]
 1826 0210 5A1C     	 add r2,r3,#1
 1827 0212 BB68     	 ldr r3,[r7,#8]
 1828 0214 DA60     	 str r2,[r3,#12]
 383:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 384:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /*if index reaches fifo size - break*/
 385:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if ((ptr_runtime->tx_data_index) >= fifo_min)
 1829              	 .loc 5 385 0
 1830 0216 BB68     	 ldr r3,[r7,#8]
 1831 0218 DA68     	 ldr r2,[r3,#12]
 1832 021a 0F23     	 mov r3,#15
 1833 021c FB18     	 add r3,r7,r3
 1834 021e 1B78     	 ldrb r3,[r3]
 1835 0220 9A42     	 cmp r2,r3
 1836 0222 01D3     	 bcc .L77
 386:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 387:../Dave/Generated/I2C_MASTER/i2c_master.c ****             break;
 1837              	 .loc 5 387 0
 1838 0224 0CE0     	 b .L81
 1839              	.L78:
 388:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 389:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 390:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 391:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 392:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 1840              	 .loc 5 392 0 discriminator 5
 1841 0226 0BE0     	 b .L81
 1842              	.L77:
 369:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1843              	 .loc 5 369 0
 1844 0228 7B68     	 ldr r3,[r7,#4]
 1845 022a 181C     	 mov r0,r3
 1846 022c FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 1847 0230 031C     	 mov r3,r0
 1848 0232 1A1C     	 mov r2,r3
 1849 0234 0123     	 mov r3,#1
 1850 0236 5340     	 eor r3,r2
 1851 0238 DBB2     	 uxtb r3,r3
 1852 023a 002B     	 cmp r3,#0
 1853 023c CCD1     	 bne .L82
 1854 023e 19E0     	 b .L83
 1855              	.L81:
 1856 0240 18E0     	 b .L83
 1857              	.L74:
 393:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 394:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while */
 395:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of if(handle->config->txFIFO_size > 0) */
 396:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 397:../Dave/Generated/I2C_MASTER/i2c_master.c ****    Direction = Receive, Tx FIFO disabled
 398:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
 399:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 400:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 401:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* check for last byte and send_nack is set to true */
 402:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_n
 1858              	 .loc 5 402 0
 1859 0242 BB68     	 ldr r3,[r7,#8]
 1860 0244 DB68     	 ldr r3,[r3,#12]
 1861 0246 5A1C     	 add r2,r3,#1
 1862 0248 BB68     	 ldr r3,[r7,#8]
 1863 024a 9B68     	 ldr r3,[r3,#8]
 1864 024c 9A42     	 cmp r2,r3
 1865 024e 08D1     	 bne .L84
 1866              	 .loc 5 402 0 is_stmt 0 discriminator 1
 1867 0250 BB68     	 ldr r3,[r7,#8]
 1868 0252 1B6A     	 ldr r3,[r3,#32]
 1869 0254 012B     	 cmp r3,#1
 1870 0256 04D1     	 bne .L84
 403:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 404:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveNACK(handle);
 1871              	 .loc 5 404 0 is_stmt 1
 1872 0258 7B68     	 ldr r3,[r7,#4]
 1873 025a 181C     	 mov r0,r3
 1874 025c FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 1875 0260 03E0     	 b .L85
 1876              	.L84:
 405:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 406:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 407:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 408:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveACK(handle);
 1877              	 .loc 5 408 0
 1878 0262 7B68     	 ldr r3,[r7,#4]
 1879 0264 181C     	 mov r0,r3
 1880 0266 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 1881              	.L85:
 409:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 410:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->tx_data_index++;
 1882              	 .loc 5 410 0
 1883 026a BB68     	 ldr r3,[r7,#8]
 1884 026c DB68     	 ldr r3,[r3,#12]
 1885 026e 5A1C     	 add r2,r3,#1
 1886 0270 BB68     	 ldr r3,[r7,#8]
 1887 0272 DA60     	 str r2,[r3,#12]
 1888              	.L83:
 411:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 412:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 413:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 414:../Dave/Generated/I2C_MASTER/i2c_master.c ****    If last byte, then disable ACK event
 415:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
 416:../Dave/Generated/I2C_MASTER/i2c_master.c ****      if (handle->runtime->tx_data_index == handle->runtime->tx_data_count)
 1889              	 .loc 5 416 0
 1890 0274 7B68     	 ldr r3,[r7,#4]
 1891 0276 9B68     	 ldr r3,[r3,#8]
 1892 0278 DA68     	 ldr r2,[r3,#12]
 1893 027a 7B68     	 ldr r3,[r7,#4]
 1894 027c 9B68     	 ldr r3,[r3,#8]
 1895 027e 9B68     	 ldr r3,[r3,#8]
 1896 0280 9A42     	 cmp r2,r3
 1897 0282 06D1     	 bne .L60
 417:../Dave/Generated/I2C_MASTER/i2c_master.c ****      {
 418:../Dave/Generated/I2C_MASTER/i2c_master.c ****        I2C_MASTER_DisableEvent(handle,(uint32_t)XMC_I2C_CH_EVENT_ACK);
 1898              	 .loc 5 418 0
 1899 0284 7A68     	 ldr r2,[r7,#4]
 1900 0286 8023     	 mov r3,#128
 1901 0288 DB05     	 lsl r3,r3,#23
 1902 028a 101C     	 mov r0,r2
 1903 028c 191C     	 mov r1,r3
 1904 028e FFF7FEFF 	 bl I2C_MASTER_DisableEvent
 1905              	.L60:
 419:../Dave/Generated/I2C_MASTER/i2c_master.c ****      }
 420:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of else */
 421:../Dave/Generated/I2C_MASTER/i2c_master.c ****  } /* end of else */
 422:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1906              	 .loc 5 422 0
 1907 0292 BD46     	 mov sp,r7
 1908 0294 04B0     	 add sp,sp,#16
 1909              	 
 1910 0296 80BD     	 pop {r7,pc}
 1911              	 .cfi_endproc
 1912              	.LFE156:
 1914              	 .section .text.I2C_MASTER_lSendStop_JumpTo_TxCallback,"ax",%progbits
 1915              	 .align 2
 1916              	 .code 16
 1917              	 .thumb_func
 1919              	I2C_MASTER_lSendStop_JumpTo_TxCallback:
 1920              	.LFB157:
 423:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 424:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to issue Send Stop command and jump to callback routine */
 425:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_TxCallback(I2C_MASTER_t *const handle)
 426:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1921              	 .loc 5 426 0
 1922              	 .cfi_startproc
 1923 0000 80B5     	 push {r7,lr}
 1924              	.LCFI108:
 1925              	 .cfi_def_cfa_offset 8
 1926              	 .cfi_offset 7,-8
 1927              	 .cfi_offset 14,-4
 1928 0002 84B0     	 sub sp,sp,#16
 1929              	.LCFI109:
 1930              	 .cfi_def_cfa_offset 24
 1931 0004 00AF     	 add r7,sp,#0
 1932              	.LCFI110:
 1933              	 .cfi_def_cfa_register 7
 1934 0006 7860     	 str r0,[r7,#4]
 427:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 428:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 429:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 1935              	 .loc 5 429 0
 1936 0008 7B68     	 ldr r3,[r7,#4]
 1937 000a 9B68     	 ldr r3,[r3,#8]
 1938 000c FB60     	 str r3,[r7,#12]
 430:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 431:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_DisableEvent(handle,((uint32_t)XMC_I2C_CH_EVENT_ACK ));
 1939              	 .loc 5 431 0
 1940 000e 7A68     	 ldr r2,[r7,#4]
 1941 0010 8023     	 mov r3,#128
 1942 0012 DB05     	 lsl r3,r3,#23
 1943 0014 101C     	 mov r0,r2
 1944 0016 191C     	 mov r1,r3
 1945 0018 FFF7FEFF 	 bl I2C_MASTER_DisableEvent
 432:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 433:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->send_stop == true)
 1946              	 .loc 5 433 0
 1947 001c FB68     	 ldr r3,[r7,#12]
 1948 001e DB69     	 ldr r3,[r3,#28]
 1949 0020 012B     	 cmp r3,#1
 1950 0022 07D1     	 bne .L87
 434:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 435:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->bus_acquired = false;
 1951              	 .loc 5 435 0
 1952 0024 FB68     	 ldr r3,[r7,#12]
 1953 0026 2822     	 mov r2,#40
 1954 0028 0021     	 mov r1,#0
 1955 002a 9954     	 strb r1,[r3,r2]
 436:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStop(handle);
 1956              	 .loc 5 436 0
 1957 002c 7B68     	 ldr r3,[r7,#4]
 1958 002e 181C     	 mov r0,r3
 1959 0030 FFF7FEFF 	 bl I2C_MASTER_SendStop
 1960              	.L87:
 437:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 438:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 439:../Dave/Generated/I2C_MASTER/i2c_master.c ****   while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY){}
 1961              	 .loc 5 439 0
 1962 0034 C046     	 mov r8,r8
 1963              	.L88:
 1964              	 .loc 5 439 0 is_stmt 0 discriminator 1
 1965 0036 7B68     	 ldr r3,[r7,#4]
 1966 0038 1B68     	 ldr r3,[r3]
 1967 003a 181C     	 mov r0,r3
 1968 003c FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1969 0040 031E     	 sub r3,r0,#0
 1970 0042 802B     	 cmp r3,#128
 1971 0044 F7D0     	 beq .L88
 440:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 441:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*All data is transmitted*/
 442:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->tx_busy = false;
 1972              	 .loc 5 442 0 is_stmt 1
 1973 0046 FB68     	 ldr r3,[r7,#12]
 1974 0048 2622     	 mov r2,#38
 1975 004a 0021     	 mov r1,#0
 1976 004c 9954     	 strb r1,[r3,r2]
 443:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 444:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->tx_cbhandler != NULL)
 1977              	 .loc 5 444 0
 1978 004e 7B68     	 ldr r3,[r7,#4]
 1979 0050 5B68     	 ldr r3,[r3,#4]
 1980 0052 1B69     	 ldr r3,[r3,#16]
 1981 0054 002B     	 cmp r3,#0
 1982 0056 03D0     	 beq .L86
 445:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 446:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Execute the 'End of transmission' callback function*/
 447:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->tx_cbhandler();
 1983              	 .loc 5 447 0
 1984 0058 7B68     	 ldr r3,[r7,#4]
 1985 005a 5B68     	 ldr r3,[r3,#4]
 1986 005c 1B69     	 ldr r3,[r3,#16]
 1987 005e 9847     	 blx r3
 1988              	.L86:
 448:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 449:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1989              	 .loc 5 449 0
 1990 0060 BD46     	 mov sp,r7
 1991 0062 04B0     	 add sp,sp,#16
 1992              	 
 1993 0064 80BD     	 pop {r7,pc}
 1994              	 .cfi_endproc
 1995              	.LFE157:
 1997 0066 C046     	 .section .text.I2C_MASTER_Receive,"ax",%progbits
 1998              	 .align 2
 1999              	 .global I2C_MASTER_Receive
 2000              	 .code 16
 2001              	 .thumb_func
 2003              	I2C_MASTER_Receive:
 2004              	.LFB158:
 450:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 451:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 452:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 453:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief This function registers the receive request by configuring the I2C_MASTER
 454:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * receive FIFO/Standard buffer (depending on the user configuration). The data
 455:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * is received asynchronously. When the requested number of data bytes are received,
 456:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * optionally, the user configured callback function will be executed. If a callback
 457:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * function is not configured on the APP UI, the user has to poll for the status of
 458:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * rx_busy variable of the APP handle structure.
 459:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 460:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Note: In FIFO mode, FIFO trigger limit should be adjusted manually to
 461:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * read required amount of data from FIFO buffer.
 462:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 463:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 464:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  I2C_MASTER_t* I2C_MASTER APP handle pointer of type I2C_MASTER_t
 465:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  bool      flag for send_start
 466:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  uint32_t  slave address
 467:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  uint8_t*  Pointer to data array
 468:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  uint32_t  Total no of bytes to be read.
 469:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  bool      flag for send_stop
 470:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  bool      flag for send_nack
 471:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 472:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return  I2C_MASTER_STATUS_t I2C_MASTER_STATUS_SUCCESS if the request is accepted.
 473:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *                              I2C_MASTER_STATUS_BUSY if a reception is in progress.
 474:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 475:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 476:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * request is registered.
 477:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 478:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 479:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
 480:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 481:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                    const uint32_t count, bool send_stop, bool send_nack)
 482:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2005              	 .loc 5 482 0
 2006              	 .cfi_startproc
 2007 0000 B0B5     	 push {r4,r5,r7,lr}
 2008              	.LCFI111:
 2009              	 .cfi_def_cfa_offset 16
 2010              	 .cfi_offset 4,-16
 2011              	 .cfi_offset 5,-12
 2012              	 .cfi_offset 7,-8
 2013              	 .cfi_offset 14,-4
 2014 0002 8AB0     	 sub sp,sp,#40
 2015              	.LCFI112:
 2016              	 .cfi_def_cfa_offset 56
 2017 0004 04AF     	 add r7,sp,#16
 2018              	.LCFI113:
 2019              	 .cfi_def_cfa 7,40
 2020 0006 F860     	 str r0,[r7,#12]
 2021 0008 7A60     	 str r2,[r7,#4]
 2022 000a 3B60     	 str r3,[r7]
 2023 000c 0B23     	 mov r3,#11
 2024 000e FB18     	 add r3,r7,r3
 2025 0010 0A1C     	 add r2,r1,#0
 2026 0012 1A70     	 strb r2,[r3]
 483:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 484:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 485:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 2027              	 .loc 5 485 0
 2028 0014 1723     	 mov r3,#23
 2029 0016 FB18     	 add r3,r7,r3
 2030 0018 0222     	 mov r2,#2
 2031 001a 1A70     	 strb r2,[r3]
 486:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 487:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 2032              	 .loc 5 487 0
 2033 001c FB68     	 ldr r3,[r7,#12]
 2034 001e 5B68     	 ldr r3,[r3,#4]
 2035 0020 2522     	 mov r2,#37
 2036 0022 9B5C     	 ldrb r3,[r3,r2]
 2037 0024 002B     	 cmp r3,#0
 2038 0026 16D1     	 bne .L92
 488:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 489:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 490:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_StartReceiveIRQ(handle, send_start, address, data, count, send_stop, send_nac
 2039              	 .loc 5 490 0
 2040 0028 1723     	 mov r3,#23
 2041 002a FC18     	 add r4,r7,r3
 2042 002c F868     	 ldr r0,[r7,#12]
 2043 002e 0B23     	 mov r3,#11
 2044 0030 FB18     	 add r3,r7,r3
 2045 0032 1978     	 ldrb r1,[r3]
 2046 0034 7A68     	 ldr r2,[r7,#4]
 2047 0036 3D68     	 ldr r5,[r7]
 2048 0038 BB6A     	 ldr r3,[r7,#40]
 2049 003a 0093     	 str r3,[sp]
 2050 003c 2C23     	 mov r3,#44
 2051 003e FB18     	 add r3,r7,r3
 2052 0040 1B78     	 ldrb r3,[r3]
 2053 0042 0193     	 str r3,[sp,#4]
 2054 0044 3023     	 mov r3,#48
 2055 0046 FB18     	 add r3,r7,r3
 2056 0048 1B78     	 ldrb r3,[r3]
 2057 004a 0293     	 str r3,[sp,#8]
 2058 004c 2B1C     	 mov r3,r5
 2059 004e FFF7FEFF 	 bl I2C_MASTER_StartReceiveIRQ
 2060 0052 031C     	 mov r3,r0
 2061 0054 2370     	 strb r3,[r4]
 2062              	.L92:
 491:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 492:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 493:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 494:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 495:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 496:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_UNSUPPORTED_MODE;
 497:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 498:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 499:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 500:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 501:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DIRECT_RX_ENABLED == 1)
 502:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_lStartReceivePolling(handle, send_start, address, data, count, send_stop, s
 503:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 504:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 505:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 506:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 2063              	 .loc 5 506 0
 2064 0056 1723     	 mov r3,#23
 2065 0058 FB18     	 add r3,r7,r3
 2066 005a 1B78     	 ldrb r3,[r3]
 507:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2067              	 .loc 5 507 0
 2068 005c 181C     	 mov r0,r3
 2069 005e BD46     	 mov sp,r7
 2070 0060 06B0     	 add sp,sp,#24
 2071              	 
 2072 0062 B0BD     	 pop {r4,r5,r7,pc}
 2073              	 .cfi_endproc
 2074              	.LFE158:
 2076              	 .section .text.I2C_MASTER_lReceive_FIFOData,"ax",%progbits
 2077              	 .align 2
 2078              	 .code 16
 2079              	 .thumb_func
 2081              	I2C_MASTER_lReceive_FIFOData:
 2082              	.LFB159:
 508:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 509:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 510:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 511:../Dave/Generated/I2C_MASTER/i2c_master.c ****      Rx FIFO data
 512:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 513:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_FIFOData(I2C_MASTER_t * const handle, bool send_start, const uint32
 514:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                      const uint32_t count)
 515:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2083              	 .loc 5 515 0
 2084              	 .cfi_startproc
 2085 0000 80B5     	 push {r7,lr}
 2086              	.LCFI114:
 2087              	 .cfi_def_cfa_offset 8
 2088              	 .cfi_offset 7,-8
 2089              	 .cfi_offset 14,-4
 2090 0002 86B0     	 sub sp,sp,#24
 2091              	.LCFI115:
 2092              	 .cfi_def_cfa_offset 32
 2093 0004 00AF     	 add r7,sp,#0
 2094              	.LCFI116:
 2095              	 .cfi_def_cfa_register 7
 2096 0006 F860     	 str r0,[r7,#12]
 2097 0008 7A60     	 str r2,[r7,#4]
 2098 000a 3B60     	 str r3,[r7]
 2099 000c 0B23     	 mov r3,#11
 2100 000e FB18     	 add r3,r7,r3
 2101 0010 0A1C     	 add r2,r1,#0
 2102 0012 1A70     	 strb r2,[r3]
 516:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 517:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 518:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 2103              	 .loc 5 518 0
 2104 0014 FB68     	 ldr r3,[r7,#12]
 2105 0016 9B68     	 ldr r3,[r3,#8]
 2106 0018 7B61     	 str r3,[r7,#20]
 519:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 520:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*Clear the receive FIFO, configure the trigger lime
 521:../Dave/Generated/I2C_MASTER/i2c_master.c ****    * and enable the receive events*/
 522:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_USIC_CH_RXFIFO_Flush(handle->channel);
 2107              	 .loc 5 522 0
 2108 001a FB68     	 ldr r3,[r7,#12]
 2109 001c 1B68     	 ldr r3,[r3]
 2110 001e 181C     	 mov r0,r3
 2111 0020 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_Flush
 523:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 524:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*Configure the FIFO trigger limit based on the required data size*/
 525:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_lReconfigureRxFIFO(handle, count);
 2112              	 .loc 5 525 0
 2113 0024 FA68     	 ldr r2,[r7,#12]
 2114 0026 3B68     	 ldr r3,[r7]
 2115 0028 101C     	 mov r0,r2
 2116 002a 191C     	 mov r1,r3
 2117 002c FFF7FEFF 	 bl I2C_MASTER_lReconfigureRxFIFO
 526:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 527:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_USIC_CH_RXFIFO_EnableEvent(handle->channel,
 2118              	 .loc 5 527 0
 2119 0030 FB68     	 ldr r3,[r7,#12]
 2120 0032 1A68     	 ldr r2,[r3]
 2121 0034 C023     	 mov r3,#192
 2122 0036 DB05     	 lsl r3,r3,#23
 2123 0038 101C     	 mov r0,r2
 2124 003a 191C     	 mov r1,r3
 2125 003c FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_EnableEvent
 528:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                 (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 529:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                            (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE));
 530:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (send_start == true)
 2126              	 .loc 5 530 0
 2127 0040 0B23     	 mov r3,#11
 2128 0042 FB18     	 add r3,r7,r3
 2129 0044 1B78     	 ldrb r3,[r3]
 2130 0046 002B     	 cmp r3,#0
 2131 0048 00D1     	 bne .LCB1902
 2132 004a 78E0     	 b .L95
 2133              	.LCB1902:
 531:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 532:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if(!((handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA) ||
 2134              	 .loc 5 532 0
 2135 004c FB68     	 ldr r3,[r7,#12]
 2136 004e 5B68     	 ldr r3,[r3,#4]
 2137 0050 2422     	 mov r2,#36
 2138 0052 9B5C     	 ldrb r3,[r3,r2]
 2139 0054 012B     	 cmp r3,#1
 2140 0056 15D0     	 beq .L96
 533:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 2141              	 .loc 5 533 0 discriminator 1
 2142 0058 FB68     	 ldr r3,[r7,#12]
 2143 005a 5B68     	 ldr r3,[r3,#4]
 2144 005c 2422     	 mov r2,#36
 2145 005e 9B5C     	 ldrb r3,[r3,r2]
 532:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 2146              	 .loc 5 532 0 discriminator 1
 2147 0060 022B     	 cmp r3,#2
 2148 0062 0FD0     	 beq .L96
 534:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 535:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_EnableEvent(handle, (uint32_t)XMC_I2C_CH_EVENT_ACK);
 2149              	 .loc 5 535 0
 2150 0064 FA68     	 ldr r2,[r7,#12]
 2151 0066 8023     	 mov r3,#128
 2152 0068 DB05     	 lsl r3,r3,#23
 2153 006a 101C     	 mov r0,r2
 2154 006c 191C     	 mov r1,r3
 2155 006e FFF7FEFF 	 bl I2C_MASTER_EnableEvent
 536:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_I2C_CH_SetInterruptNodePointer(handle->channel,ptr_runtime->tx_ack_sr);
 2156              	 .loc 5 536 0
 2157 0072 FB68     	 ldr r3,[r7,#12]
 2158 0074 1968     	 ldr r1,[r3]
 2159 0076 7B69     	 ldr r3,[r7,#20]
 2160 0078 2422     	 mov r2,#36
 2161 007a 9B5C     	 ldrb r3,[r3,r2]
 2162 007c 081C     	 mov r0,r1
 2163 007e 191C     	 mov r1,r3
 2164 0080 FFF7FEFF 	 bl XMC_I2C_CH_SetInterruptNodePointer
 2165              	.L96:
 537:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 538:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lSendStart_Or_RepeatedStart(handle,address, (XMC_I2C_CH_CMD_t)XMC_I2C_CH_CMD_READ);
 2166              	 .loc 5 538 0
 2167 0084 FA68     	 ldr r2,[r7,#12]
 2168 0086 7B68     	 ldr r3,[r7,#4]
 2169 0088 101C     	 mov r0,r2
 2170 008a 191C     	 mov r1,r3
 2171 008c 0122     	 mov r2,#1
 2172 008e FFF7FEFF 	 bl I2C_MASTER_lSendStart_Or_RepeatedStart
 539:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 540:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED)
 541:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if(handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 542:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 543:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_nac
 544:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 545:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ReceiveNACK(handle);
 546:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 547:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 548:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 549:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ReceiveACK(handle);
 550:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 551:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index++;
 552:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 553:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 554:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)
 2173              	 .loc 5 554 0
 2174 0092 FB68     	 ldr r3,[r7,#12]
 2175 0094 5B68     	 ldr r3,[r3,#4]
 2176 0096 2422     	 mov r2,#36
 2177 0098 9B5C     	 ldrb r3,[r3,r2]
 2178 009a 022B     	 cmp r3,#2
 2179 009c 00D0     	 beq .LCB1942
 2180 009e B2E0     	 b .L94
 2181              	.LCB1942:
 555:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 556:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (handle->config->txFIFO_size != XMC_USIC_CH_FIFO_DISABLED)
 2182              	 .loc 5 556 0
 2183 00a0 FB68     	 ldr r3,[r7,#12]
 2184 00a2 5B68     	 ldr r3,[r3,#4]
 2185 00a4 2622     	 mov r2,#38
 2186 00a6 9B5C     	 ldrb r3,[r3,r2]
 2187 00a8 002B     	 cmp r3,#0
 2188 00aa 2ED0     	 beq .L98
 557:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 558:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Fill the transmit FIFO */
 559:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 2189              	 .loc 5 559 0
 2190 00ac 21E0     	 b .L99
 2191              	.L104:
 560:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 561:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 2192              	 .loc 5 561 0
 2193 00ae 7B69     	 ldr r3,[r7,#20]
 2194 00b0 DA68     	 ldr r2,[r3,#12]
 2195 00b2 7B69     	 ldr r3,[r7,#20]
 2196 00b4 9B68     	 ldr r3,[r3,#8]
 2197 00b6 9A42     	 cmp r2,r3
 2198 00b8 19D2     	 bcs .L100
 562:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 563:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send
 2199              	 .loc 5 563 0
 2200 00ba 7B69     	 ldr r3,[r7,#20]
 2201 00bc DB68     	 ldr r3,[r3,#12]
 2202 00be 5A1C     	 add r2,r3,#1
 2203 00c0 7B69     	 ldr r3,[r7,#20]
 2204 00c2 9B68     	 ldr r3,[r3,#8]
 2205 00c4 9A42     	 cmp r2,r3
 2206 00c6 08D1     	 bne .L101
 2207              	 .loc 5 563 0 is_stmt 0 discriminator 1
 2208 00c8 7B69     	 ldr r3,[r7,#20]
 2209 00ca 1B6A     	 ldr r3,[r3,#32]
 2210 00cc 012B     	 cmp r3,#1
 2211 00ce 04D1     	 bne .L101
 564:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 565:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveNACK(handle);
 2212              	 .loc 5 565 0 is_stmt 1
 2213 00d0 FB68     	 ldr r3,[r7,#12]
 2214 00d2 181C     	 mov r0,r3
 2215 00d4 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2216 00d8 03E0     	 b .L102
 2217              	.L101:
 566:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 567:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 568:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 569:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveACK(handle);
 2218              	 .loc 5 569 0
 2219 00da FB68     	 ldr r3,[r7,#12]
 2220 00dc 181C     	 mov r0,r3
 2221 00de FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2222              	.L102:
 570:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 571:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->tx_data_index++;
 2223              	 .loc 5 571 0
 2224 00e2 7B69     	 ldr r3,[r7,#20]
 2225 00e4 DB68     	 ldr r3,[r3,#12]
 2226 00e6 5A1C     	 add r2,r3,#1
 2227 00e8 7B69     	 ldr r3,[r7,#20]
 2228 00ea DA60     	 str r2,[r3,#12]
 2229 00ec 01E0     	 b .L99
 2230              	.L100:
 572:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 573:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 574:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 575:../Dave/Generated/I2C_MASTER/i2c_master.c ****         break;
 2231              	 .loc 5 575 0
 2232 00ee C046     	 mov r8,r8
 2233 00f0 89E0     	 b .L94
 2234              	.L99:
 559:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2235              	 .loc 5 559 0
 2236 00f2 FB68     	 ldr r3,[r7,#12]
 2237 00f4 181C     	 mov r0,r3
 2238 00f6 FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 2239 00fa 031C     	 mov r3,r0
 2240 00fc 1A1C     	 mov r2,r3
 2241 00fe 0123     	 mov r3,#1
 2242 0100 5340     	 eor r3,r2
 2243 0102 DBB2     	 uxtb r3,r3
 2244 0104 002B     	 cmp r3,#0
 2245 0106 D2D1     	 bne .L104
 2246 0108 7DE0     	 b .L94
 2247              	.L98:
 576:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 577:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of while */
 578:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 579:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 580:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 581:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if it is last byte and send_nack true */
 582:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_n
 2248              	 .loc 5 582 0
 2249 010a 7B69     	 ldr r3,[r7,#20]
 2250 010c DB68     	 ldr r3,[r3,#12]
 2251 010e 5A1C     	 add r2,r3,#1
 2252 0110 7B69     	 ldr r3,[r7,#20]
 2253 0112 9B68     	 ldr r3,[r3,#8]
 2254 0114 9A42     	 cmp r2,r3
 2255 0116 08D1     	 bne .L105
 2256              	 .loc 5 582 0 is_stmt 0 discriminator 1
 2257 0118 7B69     	 ldr r3,[r7,#20]
 2258 011a 1B6A     	 ldr r3,[r3,#32]
 2259 011c 012B     	 cmp r3,#1
 2260 011e 04D1     	 bne .L105
 583:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 584:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_ReceiveNACK(handle);
 2261              	 .loc 5 584 0 is_stmt 1
 2262 0120 FB68     	 ldr r3,[r7,#12]
 2263 0122 181C     	 mov r0,r3
 2264 0124 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2265 0128 03E0     	 b .L106
 2266              	.L105:
 585:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 586:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 587:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 588:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_ReceiveACK(handle);
 2267              	 .loc 5 588 0
 2268 012a FB68     	 ldr r3,[r7,#12]
 2269 012c 181C     	 mov r0,r3
 2270 012e FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2271              	.L106:
 589:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 590:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index++;
 2272              	 .loc 5 590 0
 2273 0132 7B69     	 ldr r3,[r7,#20]
 2274 0134 DB68     	 ldr r3,[r3,#12]
 2275 0136 5A1C     	 add r2,r3,#1
 2276 0138 7B69     	 ldr r3,[r7,#20]
 2277 013a DA60     	 str r2,[r3,#12]
 2278 013c 63E0     	 b .L94
 2279              	.L95:
 591:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 592:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT) */
 593:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of if (send_start == true) */
 594:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 595:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 596:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /* if Tx FIFO enabled */
 597:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size > 0)
 2280              	 .loc 5 597 0
 2281 013e FB68     	 ldr r3,[r7,#12]
 2282 0140 5B68     	 ldr r3,[r3,#4]
 2283 0142 2622     	 mov r2,#38
 2284 0144 9B5C     	 ldrb r3,[r3,r2]
 2285 0146 002B     	 cmp r3,#0
 2286 0148 36D0     	 beq .L108
 598:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 599:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,
 2287              	 .loc 5 599 0
 2288 014a FB68     	 ldr r3,[r7,#12]
 2289 014c 1A68     	 ldr r2,[r3]
 2290 014e 8023     	 mov r3,#128
 2291 0150 DB05     	 lsl r3,r3,#23
 2292 0152 101C     	 mov r0,r2
 2293 0154 191C     	 mov r1,r3
 2294 0156 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 600:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                      (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD);
 601:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Fill the transmit FIFO */
 602:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 2295              	 .loc 5 602 0
 2296 015a 21E0     	 b .L109
 2297              	.L114:
 603:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 604:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 2298              	 .loc 5 604 0
 2299 015c 7B69     	 ldr r3,[r7,#20]
 2300 015e DA68     	 ldr r2,[r3,#12]
 2301 0160 7B69     	 ldr r3,[r7,#20]
 2302 0162 9B68     	 ldr r3,[r3,#8]
 2303 0164 9A42     	 cmp r2,r3
 2304 0166 19D2     	 bcs .L110
 605:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 606:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) &&
 2305              	 .loc 5 606 0
 2306 0168 7B69     	 ldr r3,[r7,#20]
 2307 016a DB68     	 ldr r3,[r3,#12]
 2308 016c 5A1C     	 add r2,r3,#1
 2309 016e 7B69     	 ldr r3,[r7,#20]
 2310 0170 9B68     	 ldr r3,[r3,#8]
 2311 0172 9A42     	 cmp r2,r3
 2312 0174 08D1     	 bne .L111
 607:../Dave/Generated/I2C_MASTER/i2c_master.c ****                (ptr_runtime->send_nack == true))
 2313              	 .loc 5 607 0 discriminator 1
 2314 0176 7B69     	 ldr r3,[r7,#20]
 2315 0178 1B6A     	 ldr r3,[r3,#32]
 606:../Dave/Generated/I2C_MASTER/i2c_master.c ****                (ptr_runtime->send_nack == true))
 2316              	 .loc 5 606 0 discriminator 1
 2317 017a 012B     	 cmp r3,#1
 2318 017c 04D1     	 bne .L111
 608:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 609:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 2319              	 .loc 5 609 0
 2320 017e FB68     	 ldr r3,[r7,#12]
 2321 0180 181C     	 mov r0,r3
 2322 0182 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2323 0186 03E0     	 b .L112
 2324              	.L111:
 610:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 611:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 612:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 613:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 2325              	 .loc 5 613 0
 2326 0188 FB68     	 ldr r3,[r7,#12]
 2327 018a 181C     	 mov r0,r3
 2328 018c FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2329              	.L112:
 614:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 615:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 2330              	 .loc 5 615 0
 2331 0190 7B69     	 ldr r3,[r7,#20]
 2332 0192 DB68     	 ldr r3,[r3,#12]
 2333 0194 5A1C     	 add r2,r3,#1
 2334 0196 7B69     	 ldr r3,[r7,#20]
 2335 0198 DA60     	 str r2,[r3,#12]
 2336 019a 01E0     	 b .L109
 2337              	.L110:
 616:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 617:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 618:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 619:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 2338              	 .loc 5 619 0
 2339 019c C046     	 mov r8,r8
 2340 019e 32E0     	 b .L94
 2341              	.L109:
 602:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2342              	 .loc 5 602 0
 2343 01a0 FB68     	 ldr r3,[r7,#12]
 2344 01a2 181C     	 mov r0,r3
 2345 01a4 FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 2346 01a8 031C     	 mov r3,r0
 2347 01aa 1A1C     	 mov r2,r3
 2348 01ac 0123     	 mov r3,#1
 2349 01ae 5340     	 eor r3,r2
 2350 01b0 DBB2     	 uxtb r3,r3
 2351 01b2 002B     	 cmp r3,#0
 2352 01b4 D2D1     	 bne .L114
 2353 01b6 26E0     	 b .L94
 2354              	.L108:
 620:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 621:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while */
 622:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 623:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else  /* Tx FIFO disabled and Rx FIFO enabled */
 624:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 625:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 2355              	 .loc 5 625 0
 2356 01b8 7B69     	 ldr r3,[r7,#20]
 2357 01ba DA68     	 ldr r2,[r3,#12]
 2358 01bc 7B69     	 ldr r3,[r7,#20]
 2359 01be 9B68     	 ldr r3,[r3,#8]
 2360 01c0 9A42     	 cmp r2,r3
 2361 01c2 20D2     	 bcs .L94
 626:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 627:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) &&
 2362              	 .loc 5 627 0
 2363 01c4 7B69     	 ldr r3,[r7,#20]
 2364 01c6 DB68     	 ldr r3,[r3,#12]
 2365 01c8 5A1C     	 add r2,r3,#1
 2366 01ca 7B69     	 ldr r3,[r7,#20]
 2367 01cc 9B68     	 ldr r3,[r3,#8]
 2368 01ce 9A42     	 cmp r2,r3
 2369 01d0 08D1     	 bne .L115
 628:../Dave/Generated/I2C_MASTER/i2c_master.c ****              (ptr_runtime->send_nack == true))
 2370              	 .loc 5 628 0 discriminator 1
 2371 01d2 7B69     	 ldr r3,[r7,#20]
 2372 01d4 1B6A     	 ldr r3,[r3,#32]
 627:../Dave/Generated/I2C_MASTER/i2c_master.c ****              (ptr_runtime->send_nack == true))
 2373              	 .loc 5 627 0 discriminator 1
 2374 01d6 012B     	 cmp r3,#1
 2375 01d8 04D1     	 bne .L115
 629:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 630:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveNACK(handle);
 2376              	 .loc 5 630 0
 2377 01da FB68     	 ldr r3,[r7,#12]
 2378 01dc 181C     	 mov r0,r3
 2379 01de FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2380 01e2 0BE0     	 b .L116
 2381              	.L115:
 631:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 632:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 633:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 634:../Dave/Generated/I2C_MASTER/i2c_master.c ****           XMC_I2C_CH_ClearStatusFlag(handle->channel, ((uint32_t)XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVE
 2382              	 .loc 5 634 0
 2383 01e4 FB68     	 ldr r3,[r7,#12]
 2384 01e6 1A68     	 ldr r2,[r3]
 2385 01e8 F223     	 mov r3,#242
 2386 01ea 1B02     	 lsl r3,r3,#8
 2387 01ec 101C     	 mov r0,r2
 2388 01ee 191C     	 mov r1,r3
 2389 01f0 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 635:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDI
 636:../Dave/Generated/I2C_MASTER/i2c_master.c ****                           (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION|
 637:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               (uint32_t)XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION |
 638:../Dave/Generated/I2C_MASTER/i2c_master.c ****                           (uint32_t)XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION));
 639:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveACK(handle);
 2390              	 .loc 5 639 0
 2391 01f4 FB68     	 ldr r3,[r7,#12]
 2392 01f6 181C     	 mov r0,r3
 2393 01f8 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2394              	.L116:
 640:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 641:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->tx_data_index++;
 2395              	 .loc 5 641 0
 2396 01fc 7B69     	 ldr r3,[r7,#20]
 2397 01fe DB68     	 ldr r3,[r3,#12]
 2398 0200 5A1C     	 add r2,r3,#1
 2399 0202 7B69     	 ldr r3,[r7,#20]
 2400 0204 DA60     	 str r2,[r3,#12]
 2401              	.L94:
 642:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 643:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of else */
 644:../Dave/Generated/I2C_MASTER/i2c_master.c ****    } /* end of  if(send_start == false) */
 645:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2402              	 .loc 5 645 0
 2403 0206 BD46     	 mov sp,r7
 2404 0208 06B0     	 add sp,sp,#24
 2405              	 
 2406 020a 80BD     	 pop {r7,pc}
 2407              	 .cfi_endproc
 2408              	.LFE159:
 2410              	 .section .text.I2C_MASTER_lReceive_StdData,"ax",%progbits
 2411              	 .align 2
 2412              	 .code 16
 2413              	 .thumb_func
 2415              	I2C_MASTER_lReceive_StdData:
 2416              	.LFB160:
 646:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 647:../Dave/Generated/I2C_MASTER/i2c_master.c ****     Standard receive mode
 648:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 649:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_StdData(I2C_MASTER_t * const handle, bool send_start, const uint32_
 650:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2417              	 .loc 5 650 0
 2418              	 .cfi_startproc
 2419 0000 80B5     	 push {r7,lr}
 2420              	.LCFI117:
 2421              	 .cfi_def_cfa_offset 8
 2422              	 .cfi_offset 7,-8
 2423              	 .cfi_offset 14,-4
 2424 0002 86B0     	 sub sp,sp,#24
 2425              	.LCFI118:
 2426              	 .cfi_def_cfa_offset 32
 2427 0004 00AF     	 add r7,sp,#0
 2428              	.LCFI119:
 2429              	 .cfi_def_cfa_register 7
 2430 0006 F860     	 str r0,[r7,#12]
 2431 0008 7A60     	 str r2,[r7,#4]
 2432 000a 0B23     	 mov r3,#11
 2433 000c FB18     	 add r3,r7,r3
 2434 000e 0A1C     	 add r2,r1,#0
 2435 0010 1A70     	 strb r2,[r3]
 651:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 652:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 653:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 2436              	 .loc 5 653 0
 2437 0012 FB68     	 ldr r3,[r7,#12]
 2438 0014 9B68     	 ldr r3,[r3,#8]
 2439 0016 7B61     	 str r3,[r7,#20]
 654:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 655:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_USIC_CH_EnableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE 
 2440              	 .loc 5 655 0
 2441 0018 FB68     	 ldr r3,[r7,#12]
 2442 001a 1A68     	 ldr r2,[r3]
 2443 001c C023     	 mov r3,#192
 2444 001e 1B02     	 lsl r3,r3,#8
 2445 0020 101C     	 mov r0,r2
 2446 0022 191C     	 mov r1,r3
 2447 0024 FFF7FEFF 	 bl XMC_USIC_CH_EnableEvent
 656:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                       (uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEI
 657:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 658:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (send_start == true)
 2448              	 .loc 5 658 0
 2449 0028 0B23     	 mov r3,#11
 2450 002a FB18     	 add r3,r7,r3
 2451 002c 1B78     	 ldrb r3,[r3]
 2452 002e 002B     	 cmp r3,#0
 2453 0030 49D0     	 beq .L118
 659:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 660:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if(!((handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA) ||
 2454              	 .loc 5 660 0
 2455 0032 FB68     	 ldr r3,[r7,#12]
 2456 0034 5B68     	 ldr r3,[r3,#4]
 2457 0036 2422     	 mov r2,#36
 2458 0038 9B5C     	 ldrb r3,[r3,r2]
 2459 003a 012B     	 cmp r3,#1
 2460 003c 15D0     	 beq .L119
 661:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 2461              	 .loc 5 661 0 discriminator 1
 2462 003e FB68     	 ldr r3,[r7,#12]
 2463 0040 5B68     	 ldr r3,[r3,#4]
 2464 0042 2422     	 mov r2,#36
 2465 0044 9B5C     	 ldrb r3,[r3,r2]
 660:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 2466              	 .loc 5 660 0 discriminator 1
 2467 0046 022B     	 cmp r3,#2
 2468 0048 0FD0     	 beq .L119
 662:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 663:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_EnableEvent(handle, (uint32_t)XMC_I2C_CH_EVENT_ACK);
 2469              	 .loc 5 663 0
 2470 004a FA68     	 ldr r2,[r7,#12]
 2471 004c 8023     	 mov r3,#128
 2472 004e DB05     	 lsl r3,r3,#23
 2473 0050 101C     	 mov r0,r2
 2474 0052 191C     	 mov r1,r3
 2475 0054 FFF7FEFF 	 bl I2C_MASTER_EnableEvent
 664:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_I2C_CH_SetInterruptNodePointer(handle->channel,ptr_runtime->tx_ack_sr);
 2476              	 .loc 5 664 0
 2477 0058 FB68     	 ldr r3,[r7,#12]
 2478 005a 1968     	 ldr r1,[r3]
 2479 005c 7B69     	 ldr r3,[r7,#20]
 2480 005e 2422     	 mov r2,#36
 2481 0060 9B5C     	 ldrb r3,[r3,r2]
 2482 0062 081C     	 mov r0,r1
 2483 0064 191C     	 mov r1,r3
 2484 0066 FFF7FEFF 	 bl XMC_I2C_CH_SetInterruptNodePointer
 2485              	.L119:
 665:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 666:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lSendStart_Or_RepeatedStart(handle, address, (XMC_I2C_CH_CMD_t)XMC_I2C_CH_CMD_READ);
 2486              	 .loc 5 666 0
 2487 006a FA68     	 ldr r2,[r7,#12]
 2488 006c 7B68     	 ldr r3,[r7,#4]
 2489 006e 101C     	 mov r0,r2
 2490 0070 191C     	 mov r1,r3
 2491 0072 0122     	 mov r2,#1
 2492 0074 FFF7FEFF 	 bl I2C_MASTER_lSendStart_Or_RepeatedStart
 667:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 668:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if ((handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA) ||
 2493              	 .loc 5 668 0
 2494 0078 FB68     	 ldr r3,[r7,#12]
 2495 007a 5B68     	 ldr r3,[r3,#4]
 2496 007c 2422     	 mov r2,#36
 2497 007e 9B5C     	 ldrb r3,[r3,r2]
 2498 0080 012B     	 cmp r3,#1
 2499 0082 06D0     	 beq .L120
 669:../Dave/Generated/I2C_MASTER/i2c_master.c ****         (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT))
 2500              	 .loc 5 669 0 discriminator 1
 2501 0084 FB68     	 ldr r3,[r7,#12]
 2502 0086 5B68     	 ldr r3,[r3,#4]
 2503 0088 2422     	 mov r2,#36
 2504 008a 9B5C     	 ldrb r3,[r3,r2]
 668:../Dave/Generated/I2C_MASTER/i2c_master.c ****         (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT))
 2505              	 .loc 5 668 0 discriminator 1
 2506 008c 022B     	 cmp r3,#2
 2507 008e 00D0     	 beq .LCB2249
 2508 0090 6EE0     	 b .L117
 2509              	.LCB2249:
 2510              	.L120:
 670:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 671:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_nac
 2511              	 .loc 5 671 0
 2512 0092 7B69     	 ldr r3,[r7,#20]
 2513 0094 DB68     	 ldr r3,[r3,#12]
 2514 0096 5A1C     	 add r2,r3,#1
 2515 0098 7B69     	 ldr r3,[r7,#20]
 2516 009a 9B68     	 ldr r3,[r3,#8]
 2517 009c 9A42     	 cmp r2,r3
 2518 009e 08D1     	 bne .L122
 2519              	 .loc 5 671 0 is_stmt 0 discriminator 1
 2520 00a0 7B69     	 ldr r3,[r7,#20]
 2521 00a2 1B6A     	 ldr r3,[r3,#32]
 2522 00a4 012B     	 cmp r3,#1
 2523 00a6 04D1     	 bne .L122
 672:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 673:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveNACK(handle);
 2524              	 .loc 5 673 0 is_stmt 1
 2525 00a8 FB68     	 ldr r3,[r7,#12]
 2526 00aa 181C     	 mov r0,r3
 2527 00ac FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2528 00b0 03E0     	 b .L123
 2529              	.L122:
 674:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 675:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 676:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 677:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ReceiveACK(handle);
 2530              	 .loc 5 677 0
 2531 00b2 FB68     	 ldr r3,[r7,#12]
 2532 00b4 181C     	 mov r0,r3
 2533 00b6 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2534              	.L123:
 678:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 679:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index++;
 2535              	 .loc 5 679 0
 2536 00ba 7B69     	 ldr r3,[r7,#20]
 2537 00bc DB68     	 ldr r3,[r3,#12]
 2538 00be 5A1C     	 add r2,r3,#1
 2539 00c0 7B69     	 ldr r3,[r7,#20]
 2540 00c2 DA60     	 str r2,[r3,#12]
 2541 00c4 54E0     	 b .L117
 2542              	.L118:
 680:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 681:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 682:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 683:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 684:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 685:../Dave/Generated/I2C_MASTER/i2c_master.c ****      send_start flag is set to false and Tx FIFO is disabled
 686:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 687:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size == 0)
 2543              	 .loc 5 687 0
 2544 00c6 FB68     	 ldr r3,[r7,#12]
 2545 00c8 5B68     	 ldr r3,[r3,#4]
 2546 00ca 2622     	 mov r2,#38
 2547 00cc 9B5C     	 ldrb r3,[r3,r2]
 2548 00ce 002B     	 cmp r3,#0
 2549 00d0 19D1     	 bne .L125
 688:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 689:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_n
 2550              	 .loc 5 689 0
 2551 00d2 7B69     	 ldr r3,[r7,#20]
 2552 00d4 DB68     	 ldr r3,[r3,#12]
 2553 00d6 5A1C     	 add r2,r3,#1
 2554 00d8 7B69     	 ldr r3,[r7,#20]
 2555 00da 9B68     	 ldr r3,[r3,#8]
 2556 00dc 9A42     	 cmp r2,r3
 2557 00de 08D1     	 bne .L126
 2558              	 .loc 5 689 0 is_stmt 0 discriminator 1
 2559 00e0 7B69     	 ldr r3,[r7,#20]
 2560 00e2 1B6A     	 ldr r3,[r3,#32]
 2561 00e4 012B     	 cmp r3,#1
 2562 00e6 04D1     	 bne .L126
 690:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 691:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveNACK(handle);
 2563              	 .loc 5 691 0 is_stmt 1
 2564 00e8 FB68     	 ldr r3,[r7,#12]
 2565 00ea 181C     	 mov r0,r3
 2566 00ec FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2567 00f0 03E0     	 b .L127
 2568              	.L126:
 692:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 693:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 694:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 695:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveACK(handle);
 2569              	 .loc 5 695 0
 2570 00f2 FB68     	 ldr r3,[r7,#12]
 2571 00f4 181C     	 mov r0,r3
 2572 00f6 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2573              	.L127:
 696:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 697:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 698:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->tx_data_index++;
 2574              	 .loc 5 698 0
 2575 00fa 7B69     	 ldr r3,[r7,#20]
 2576 00fc DB68     	 ldr r3,[r3,#12]
 2577 00fe 5A1C     	 add r2,r3,#1
 2578 0100 7B69     	 ldr r3,[r7,#20]
 2579 0102 DA60     	 str r2,[r3,#12]
 2580 0104 34E0     	 b .L117
 2581              	.L125:
 699:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 700:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 701:../Dave/Generated/I2C_MASTER/i2c_master.c ****      send_start flag is set to false and Tx FIFO is enabled
 702:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 703:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 704:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 705:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAND
 2582              	 .loc 5 705 0
 2583 0106 FB68     	 ldr r3,[r7,#12]
 2584 0108 1A68     	 ldr r2,[r3]
 2585 010a 8023     	 mov r3,#128
 2586 010c DB05     	 lsl r3,r3,#23
 2587 010e 101C     	 mov r0,r2
 2588 0110 191C     	 mov r1,r3
 2589 0112 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 706:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 707:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Fill the transmit FIFO */
 708:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 2590              	 .loc 5 708 0
 2591 0116 20E0     	 b .L128
 2592              	.L132:
 709:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 710:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 2593              	 .loc 5 710 0
 2594 0118 7B69     	 ldr r3,[r7,#20]
 2595 011a DA68     	 ldr r2,[r3,#12]
 2596 011c 7B69     	 ldr r3,[r7,#20]
 2597 011e 9B68     	 ldr r3,[r3,#8]
 2598 0120 9A42     	 cmp r2,r3
 2599 0122 19D2     	 bcs .L129
 711:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 712:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->se
 2600              	 .loc 5 712 0
 2601 0124 7B69     	 ldr r3,[r7,#20]
 2602 0126 DB68     	 ldr r3,[r3,#12]
 2603 0128 5A1C     	 add r2,r3,#1
 2604 012a 7B69     	 ldr r3,[r7,#20]
 2605 012c 9B68     	 ldr r3,[r3,#8]
 2606 012e 9A42     	 cmp r2,r3
 2607 0130 08D1     	 bne .L130
 2608              	 .loc 5 712 0 is_stmt 0 discriminator 1
 2609 0132 7B69     	 ldr r3,[r7,#20]
 2610 0134 1B6A     	 ldr r3,[r3,#32]
 2611 0136 012B     	 cmp r3,#1
 2612 0138 04D1     	 bne .L130
 713:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 714:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 2613              	 .loc 5 714 0 is_stmt 1
 2614 013a FB68     	 ldr r3,[r7,#12]
 2615 013c 181C     	 mov r0,r3
 2616 013e FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2617 0142 03E0     	 b .L131
 2618              	.L130:
 715:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 716:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 717:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 718:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 2619              	 .loc 5 718 0
 2620 0144 FB68     	 ldr r3,[r7,#12]
 2621 0146 181C     	 mov r0,r3
 2622 0148 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2623              	.L131:
 719:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 720:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 2624              	 .loc 5 720 0
 2625 014c 7B69     	 ldr r3,[r7,#20]
 2626 014e DB68     	 ldr r3,[r3,#12]
 2627 0150 5A1C     	 add r2,r3,#1
 2628 0152 7B69     	 ldr r3,[r7,#20]
 2629 0154 DA60     	 str r2,[r3,#12]
 2630 0156 00E0     	 b .L128
 2631              	.L129:
 721:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 722:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 723:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 724:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 2632              	 .loc 5 724 0
 2633 0158 0AE0     	 b .L117
 2634              	.L128:
 708:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2635              	 .loc 5 708 0
 2636 015a FB68     	 ldr r3,[r7,#12]
 2637 015c 181C     	 mov r0,r3
 2638 015e FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 2639 0162 031C     	 mov r3,r0
 2640 0164 1A1C     	 mov r2,r3
 2641 0166 0123     	 mov r3,#1
 2642 0168 5340     	 eor r3,r2
 2643 016a DBB2     	 uxtb r3,r3
 2644 016c 002B     	 cmp r3,#0
 2645 016e D3D1     	 bne .L132
 2646              	.L117:
 725:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 726:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while */
 727:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of else */
 728:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of else */
 729:../Dave/Generated/I2C_MASTER/i2c_master.c **** } /* end of function */
 2647              	 .loc 5 729 0
 2648 0170 BD46     	 mov sp,r7
 2649 0172 06B0     	 add sp,sp,#24
 2650              	 
 2651 0174 80BD     	 pop {r7,pc}
 2652              	 .cfi_endproc
 2653              	.LFE160:
 2655 0176 C046     	 .section .text.I2C_MASTER_lSendStart_Or_RepeatedStart,"ax",%progbits
 2656              	 .align 2
 2657              	 .code 16
 2658              	 .thumb_func
 2660              	I2C_MASTER_lSendStart_Or_RepeatedStart:
 2661              	.LFB161:
 730:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 731:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 732:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1) || \
 733:../Dave/Generated/I2C_MASTER/i2c_master.c ****     (I2C_MASTER_DIRECT_TX_ENABLED == 1) || (I2C_MASTER_DIRECT_RX_ENABLED == 1))
 734:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to issue Send Start/Repeated Start command */
 735:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStart_Or_RepeatedStart(I2C_MASTER_t * handle,const uint32_t address,
 736:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                const XMC_I2C_CH_CMD_t cmd)
 737:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2662              	 .loc 5 737 0
 2663              	 .cfi_startproc
 2664 0000 80B5     	 push {r7,lr}
 2665              	.LCFI120:
 2666              	 .cfi_def_cfa_offset 8
 2667              	 .cfi_offset 7,-8
 2668              	 .cfi_offset 14,-4
 2669 0002 84B0     	 sub sp,sp,#16
 2670              	.LCFI121:
 2671              	 .cfi_def_cfa_offset 24
 2672 0004 00AF     	 add r7,sp,#0
 2673              	.LCFI122:
 2674              	 .cfi_def_cfa_register 7
 2675 0006 F860     	 str r0,[r7,#12]
 2676 0008 B960     	 str r1,[r7,#8]
 2677 000a FB1D     	 add r3,r7,#7
 2678 000c 1A70     	 strb r2,[r3]
 738:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->runtime->bus_acquired == true)
 2679              	 .loc 5 738 0
 2680 000e FB68     	 ldr r3,[r7,#12]
 2681 0010 9B68     	 ldr r3,[r3,#8]
 2682 0012 2822     	 mov r2,#40
 2683 0014 9B5C     	 ldrb r3,[r3,r2]
 2684 0016 DBB2     	 uxtb r3,r3
 2685 0018 002B     	 cmp r3,#0
 2686 001a 0AD0     	 beq .L134
 739:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 740:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_SendRepeatedStart(handle, (uint16_t)address, cmd);
 2687              	 .loc 5 740 0
 2688 001c BB68     	 ldr r3,[r7,#8]
 2689 001e 9BB2     	 uxth r3,r3
 2690 0020 191C     	 mov r1,r3
 2691 0022 FA68     	 ldr r2,[r7,#12]
 2692 0024 FB1D     	 add r3,r7,#7
 2693 0026 1B78     	 ldrb r3,[r3]
 2694 0028 101C     	 mov r0,r2
 2695 002a 1A1C     	 mov r2,r3
 2696 002c FFF7FEFF 	 bl I2C_MASTER_SendRepeatedStart
 2697 0030 0EE0     	 b .L133
 2698              	.L134:
 741:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 742:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 743:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 744:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->runtime->bus_acquired = true;
 2699              	 .loc 5 744 0
 2700 0032 FB68     	 ldr r3,[r7,#12]
 2701 0034 9B68     	 ldr r3,[r3,#8]
 2702 0036 2822     	 mov r2,#40
 2703 0038 0121     	 mov r1,#1
 2704 003a 9954     	 strb r1,[r3,r2]
 745:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStart(handle, (uint16_t)address, cmd);
 2705              	 .loc 5 745 0
 2706 003c BB68     	 ldr r3,[r7,#8]
 2707 003e 9BB2     	 uxth r3,r3
 2708 0040 191C     	 mov r1,r3
 2709 0042 FA68     	 ldr r2,[r7,#12]
 2710 0044 FB1D     	 add r3,r7,#7
 2711 0046 1B78     	 ldrb r3,[r3]
 2712 0048 101C     	 mov r0,r2
 2713 004a 1A1C     	 mov r2,r3
 2714 004c FFF7FEFF 	 bl I2C_MASTER_SendStart
 2715              	.L133:
 746:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 747:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2716              	 .loc 5 747 0
 2717 0050 BD46     	 mov sp,r7
 2718 0052 04B0     	 add sp,sp,#16
 2719              	 
 2720 0054 80BD     	 pop {r7,pc}
 2721              	 .cfi_endproc
 2722              	.LFE161:
 2724 0056 C046     	 .section .text.I2C_MASTER_StartTransmitIRQ,"ax",%progbits
 2725              	 .align 2
 2726              	 .global I2C_MASTER_StartTransmitIRQ
 2727              	 .code 16
 2728              	 .thumb_func
 2730              	I2C_MASTER_StartTransmitIRQ:
 2731              	.LFB162:
 748:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 749:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 750:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
 751:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 752:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 753:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2732              	 .loc 5 753 0
 2733              	 .cfi_startproc
 2734 0000 80B5     	 push {r7,lr}
 2735              	.LCFI123:
 2736              	 .cfi_def_cfa_offset 8
 2737              	 .cfi_offset 7,-8
 2738              	 .cfi_offset 14,-4
 2739 0002 86B0     	 sub sp,sp,#24
 2740              	.LCFI124:
 2741              	 .cfi_def_cfa_offset 32
 2742 0004 00AF     	 add r7,sp,#0
 2743              	.LCFI125:
 2744              	 .cfi_def_cfa_register 7
 2745 0006 F860     	 str r0,[r7,#12]
 2746 0008 7A60     	 str r2,[r7,#4]
 2747 000a 3B60     	 str r3,[r7]
 2748 000c 0B23     	 mov r3,#11
 2749 000e FB18     	 add r3,r7,r3
 2750 0010 0A1C     	 add r2,r1,#0
 2751 0012 1A70     	 strb r2,[r3]
 754:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 755:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 756:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 757:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 2752              	 .loc 5 757 0
 2753 0014 1723     	 mov r3,#23
 2754 0016 FB18     	 add r3,r7,r3
 2755 0018 0222     	 mov r2,#2
 2756 001a 1A70     	 strb r2,[r3]
 758:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 2757              	 .loc 5 758 0
 2758 001c FB68     	 ldr r3,[r7,#12]
 2759 001e 9B68     	 ldr r3,[r3,#8]
 2760 0020 3B61     	 str r3,[r7,#16]
 759:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 760:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* If send_stop is set to TRUE, bus_acquired flag is set to FALSE.
 761:../Dave/Generated/I2C_MASTER/i2c_master.c ****    If send_start is set to FALSE and bus_acquired is set to FALSE then API will return an error. */
 762:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (((send_start == false) && (handle->runtime->bus_acquired == false)) || (data == NULL) || (siz
 2761              	 .loc 5 762 0
 2762 0022 0B23     	 mov r3,#11
 2763 0024 FB18     	 add r3,r7,r3
 2764 0026 1B78     	 ldrb r3,[r3]
 2765 0028 0122     	 mov r2,#1
 2766 002a 5340     	 eor r3,r2
 2767 002c DBB2     	 uxtb r3,r3
 2768 002e 002B     	 cmp r3,#0
 2769 0030 09D0     	 beq .L137
 2770              	 .loc 5 762 0 is_stmt 0 discriminator 1
 2771 0032 FB68     	 ldr r3,[r7,#12]
 2772 0034 9B68     	 ldr r3,[r3,#8]
 2773 0036 2822     	 mov r2,#40
 2774 0038 9B5C     	 ldrb r3,[r3,r2]
 2775 003a DBB2     	 uxtb r3,r3
 2776 003c 0122     	 mov r2,#1
 2777 003e 5340     	 eor r3,r2
 2778 0040 DBB2     	 uxtb r3,r3
 2779 0042 002B     	 cmp r3,#0
 2780 0044 05D1     	 bne .L138
 2781              	.L137:
 2782              	 .loc 5 762 0 discriminator 3
 2783 0046 3B68     	 ldr r3,[r7]
 2784 0048 002B     	 cmp r3,#0
 2785 004a 02D0     	 beq .L138
 2786              	 .loc 5 762 0 discriminator 4
 2787 004c 3B6A     	 ldr r3,[r7,#32]
 2788 004e 002B     	 cmp r3,#0
 2789 0050 04D1     	 bne .L139
 2790              	.L138:
 763:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 764:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_FAILURE;
 2791              	 .loc 5 764 0 is_stmt 1
 2792 0052 1723     	 mov r3,#23
 2793 0054 FB18     	 add r3,r7,r3
 2794 0056 0122     	 mov r2,#1
 2795 0058 1A70     	 strb r2,[r3]
 2796 005a 47E0     	 b .L140
 2797              	.L139:
 765:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 766:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 767:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 768:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->direction = (uint32_t)I2C_MASTER_DIRECTION_TRANSMIT;
 2798              	 .loc 5 768 0
 2799 005c 3B69     	 ldr r3,[r7,#16]
 2800 005e 0022     	 mov r2,#0
 2801 0060 9A61     	 str r2,[r3,#24]
 769:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 770:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (ptr_runtime->tx_busy == false)
 2802              	 .loc 5 770 0
 2803 0062 3B69     	 ldr r3,[r7,#16]
 2804 0064 2622     	 mov r2,#38
 2805 0066 9B5C     	 ldrb r3,[r3,r2]
 2806 0068 DBB2     	 uxtb r3,r3
 2807 006a 0122     	 mov r2,#1
 2808 006c 5340     	 eor r3,r2
 2809 006e DBB2     	 uxtb r3,r3
 2810 0070 002B     	 cmp r3,#0
 2811 0072 3BD0     	 beq .L140
 771:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 772:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*If there is no transmission in progress, obtain the address of data, size of data*/
 773:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data = data;
 2812              	 .loc 5 773 0
 2813 0074 3B69     	 ldr r3,[r7,#16]
 2814 0076 3A68     	 ldr r2,[r7]
 2815 0078 1A60     	 str r2,[r3]
 774:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_count = size;
 2816              	 .loc 5 774 0
 2817 007a 3B69     	 ldr r3,[r7,#16]
 2818 007c 3A6A     	 ldr r2,[r7,#32]
 2819 007e 9A60     	 str r2,[r3,#8]
 775:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 776:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Initialize to first index and set the busy flag*/
 777:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index = 0U;
 2820              	 .loc 5 777 0
 2821 0080 3B69     	 ldr r3,[r7,#16]
 2822 0082 0022     	 mov r2,#0
 2823 0084 DA60     	 str r2,[r3,#12]
 778:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_busy = true;
 2824              	 .loc 5 778 0
 2825 0086 3B69     	 ldr r3,[r7,#16]
 2826 0088 2622     	 mov r2,#38
 2827 008a 0121     	 mov r1,#1
 2828 008c 9954     	 strb r1,[r3,r2]
 779:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_stop = send_stop;
 2829              	 .loc 5 779 0
 2830 008e 2423     	 mov r3,#36
 2831 0090 FB18     	 add r3,r7,r3
 2832 0092 1A78     	 ldrb r2,[r3]
 2833 0094 3B69     	 ldr r3,[r7,#16]
 2834 0096 DA61     	 str r2,[r3,#28]
 780:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 781:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /* Enable ACK event */
 782:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_EnableEvent(handle, (uint32_t)XMC_I2C_CH_EVENT_ACK);
 2835              	 .loc 5 782 0
 2836 0098 FA68     	 ldr r2,[r7,#12]
 2837 009a 8023     	 mov r3,#128
 2838 009c DB05     	 lsl r3,r3,#23
 2839 009e 101C     	 mov r0,r2
 2840 00a0 191C     	 mov r1,r3
 2841 00a2 FFF7FEFF 	 bl I2C_MASTER_EnableEvent
 783:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_I2C_CH_SetInterruptNodePointer(handle->channel,ptr_runtime->tx_ack_sr);
 2842              	 .loc 5 783 0
 2843 00a6 FB68     	 ldr r3,[r7,#12]
 2844 00a8 1968     	 ldr r1,[r3]
 2845 00aa 3B69     	 ldr r3,[r7,#16]
 2846 00ac 2422     	 mov r2,#36
 2847 00ae 9B5C     	 ldrb r3,[r3,r2]
 2848 00b0 081C     	 mov r0,r1
 2849 00b2 191C     	 mov r1,r3
 2850 00b4 FFF7FEFF 	 bl XMC_I2C_CH_SetInterruptNodePointer
 784:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 785:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (send_start == true)
 2851              	 .loc 5 785 0
 2852 00b8 0B23     	 mov r3,#11
 2853 00ba FB18     	 add r3,r7,r3
 2854 00bc 1B78     	 ldrb r3,[r3]
 2855 00be 002B     	 cmp r3,#0
 2856 00c0 07D0     	 beq .L141
 786:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 787:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_lSendStart_Or_RepeatedStart(handle, address, (XMC_I2C_CH_CMD_t)XMC_I2C_CH_CMD_WRIT
 2857              	 .loc 5 787 0
 2858 00c2 FA68     	 ldr r2,[r7,#12]
 2859 00c4 7B68     	 ldr r3,[r7,#4]
 2860 00c6 101C     	 mov r0,r2
 2861 00c8 191C     	 mov r1,r3
 2862 00ca 0022     	 mov r2,#0
 2863 00cc FFF7FEFF 	 bl I2C_MASTER_lSendStart_Or_RepeatedStart
 2864 00d0 08E0     	 b .L142
 2865              	.L141:
 788:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 789:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 790:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 791:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Trigger the Ack interrupt*/
 792:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TriggerServiceRequest(handle->channel, (uint32_t)ptr_runtime->tx_ack_sr);
 2866              	 .loc 5 792 0
 2867 00d2 FB68     	 ldr r3,[r7,#12]
 2868 00d4 1968     	 ldr r1,[r3]
 2869 00d6 3B69     	 ldr r3,[r7,#16]
 2870 00d8 2422     	 mov r2,#36
 2871 00da 9B5C     	 ldrb r3,[r3,r2]
 2872 00dc 081C     	 mov r0,r1
 2873 00de 191C     	 mov r1,r3
 2874 00e0 FFF7FEFF 	 bl XMC_USIC_CH_TriggerServiceRequest
 2875              	.L142:
 793:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 794:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 795:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_SUCCESS;
 2876              	 .loc 5 795 0
 2877 00e4 1723     	 mov r3,#23
 2878 00e6 FB18     	 add r3,r7,r3
 2879 00e8 0022     	 mov r2,#0
 2880 00ea 1A70     	 strb r2,[r3]
 2881              	.L140:
 796:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 797:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 798:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 2882              	 .loc 5 798 0
 2883 00ec 1723     	 mov r3,#23
 2884 00ee FB18     	 add r3,r7,r3
 2885 00f0 1B78     	 ldrb r3,[r3]
 799:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2886              	 .loc 5 799 0
 2887 00f2 181C     	 mov r0,r3
 2888 00f4 BD46     	 mov sp,r7
 2889 00f6 06B0     	 add sp,sp,#24
 2890              	 
 2891 00f8 80BD     	 pop {r7,pc}
 2892              	 .cfi_endproc
 2893              	.LFE162:
 2895 00fa C046     	 .section .text.I2C_MASTER_AbortTransmitIRQ,"ax",%progbits
 2896              	 .align 2
 2897              	 .code 16
 2898              	 .thumb_func
 2900              	I2C_MASTER_AbortTransmitIRQ:
 2901              	.LFB163:
 800:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 801:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_AbortTransmitIRQ(const I2C_MASTER_t *const handle)
 802:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2902              	 .loc 5 802 0
 2903              	 .cfi_startproc
 2904 0000 80B5     	 push {r7,lr}
 2905              	.LCFI126:
 2906              	 .cfi_def_cfa_offset 8
 2907              	 .cfi_offset 7,-8
 2908              	 .cfi_offset 14,-4
 2909 0002 82B0     	 sub sp,sp,#8
 2910              	.LCFI127:
 2911              	 .cfi_def_cfa_offset 16
 2912 0004 00AF     	 add r7,sp,#0
 2913              	.LCFI128:
 2914              	 .cfi_def_cfa_register 7
 2915 0006 7860     	 str r0,[r7,#4]
 803:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_busy = false;
 2916              	 .loc 5 803 0
 2917 0008 7B68     	 ldr r3,[r7,#4]
 2918 000a 9B68     	 ldr r3,[r3,#8]
 2919 000c 2622     	 mov r2,#38
 2920 000e 0021     	 mov r1,#0
 2921 0010 9954     	 strb r1,[r3,r2]
 804:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_data = NULL;
 2922              	 .loc 5 804 0
 2923 0012 7B68     	 ldr r3,[r7,#4]
 2924 0014 9B68     	 ldr r3,[r3,#8]
 2925 0016 0022     	 mov r2,#0
 2926 0018 1A60     	 str r2,[r3]
 805:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->bus_acquired = false;
 2927              	 .loc 5 805 0
 2928 001a 7B68     	 ldr r3,[r7,#4]
 2929 001c 9B68     	 ldr r3,[r3,#8]
 2930 001e 2822     	 mov r2,#40
 2931 0020 0021     	 mov r1,#0
 2932 0022 9954     	 strb r1,[r3,r2]
 806:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 807:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*Disable the transmit interrupts*/
 808:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->txFIFO_size != XMC_USIC_CH_FIFO_DISABLED)
 2933              	 .loc 5 808 0
 2934 0024 7B68     	 ldr r3,[r7,#4]
 2935 0026 5B68     	 ldr r3,[r3,#4]
 2936 0028 2622     	 mov r2,#38
 2937 002a 9B5C     	 ldrb r3,[r3,r2]
 2938 002c 002B     	 cmp r3,#0
 2939 002e 0CD0     	 beq .L145
 809:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 810:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Disable the transmit FIFO event*/
 811:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDAR
 2940              	 .loc 5 811 0
 2941 0030 7B68     	 ldr r3,[r7,#4]
 2942 0032 1A68     	 ldr r2,[r3]
 2943 0034 8023     	 mov r3,#128
 2944 0036 DB05     	 lsl r3,r3,#23
 2945 0038 101C     	 mov r0,r2
 2946 003a 191C     	 mov r1,r3
 2947 003c FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 812:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 2948              	 .loc 5 812 0
 2949 0040 7B68     	 ldr r3,[r7,#4]
 2950 0042 1B68     	 ldr r3,[r3]
 2951 0044 181C     	 mov r0,r3
 2952 0046 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_Flush
 2953              	.L145:
 813:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 814:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_DisableEvent((I2C_MASTER_t *)handle,((uint32_t)XMC_I2C_CH_EVENT_ACK ));
 2954              	 .loc 5 814 0
 2955 004a 7A68     	 ldr r2,[r7,#4]
 2956 004c 8023     	 mov r3,#128
 2957 004e DB05     	 lsl r3,r3,#23
 2958 0050 101C     	 mov r0,r2
 2959 0052 191C     	 mov r1,r3
 2960 0054 FFF7FEFF 	 bl I2C_MASTER_DisableEvent
 815:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2961              	 .loc 5 815 0
 2962 0058 BD46     	 mov sp,r7
 2963 005a 02B0     	 add sp,sp,#8
 2964              	 
 2965 005c 80BD     	 pop {r7,pc}
 2966              	 .cfi_endproc
 2967              	.LFE163:
 2969 005e C046     	 .section .text.I2C_MASTER_StartReceiveIRQ,"ax",%progbits
 2970              	 .align 2
 2971              	 .global I2C_MASTER_StartReceiveIRQ
 2972              	 .code 16
 2973              	 .thumb_func
 2975              	I2C_MASTER_StartReceiveIRQ:
 2976              	.LFB164:
 816:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 817:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 818:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 819:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32_
 820:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                uint8_t * data, const uint32_t count, bool send_stop
 821:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2977              	 .loc 5 821 0
 2978              	 .cfi_startproc
 2979 0000 80B5     	 push {r7,lr}
 2980              	.LCFI129:
 2981              	 .cfi_def_cfa_offset 8
 2982              	 .cfi_offset 7,-8
 2983              	 .cfi_offset 14,-4
 2984 0002 86B0     	 sub sp,sp,#24
 2985              	.LCFI130:
 2986              	 .cfi_def_cfa_offset 32
 2987 0004 00AF     	 add r7,sp,#0
 2988              	.LCFI131:
 2989              	 .cfi_def_cfa_register 7
 2990 0006 F860     	 str r0,[r7,#12]
 2991 0008 7A60     	 str r2,[r7,#4]
 2992 000a 3B60     	 str r3,[r7]
 2993 000c 0B23     	 mov r3,#11
 2994 000e FB18     	 add r3,r7,r3
 2995 0010 0A1C     	 add r2,r1,#0
 2996 0012 1A70     	 strb r2,[r3]
 822:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 823:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 824:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 825:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 2997              	 .loc 5 825 0
 2998 0014 1723     	 mov r3,#23
 2999 0016 FB18     	 add r3,r7,r3
 3000 0018 0222     	 mov r2,#2
 3001 001a 1A70     	 strb r2,[r3]
 826:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 3002              	 .loc 5 826 0
 3003 001c FB68     	 ldr r3,[r7,#12]
 3004 001e 9B68     	 ldr r3,[r3,#8]
 3005 0020 3B61     	 str r3,[r7,#16]
 827:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 828:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (((handle == NULL) || ((send_start == false) && (handle->runtime->bus_acquired == false)) || (
 3006              	 .loc 5 828 0
 3007 0022 FB68     	 ldr r3,[r7,#12]
 3008 0024 002B     	 cmp r3,#0
 3009 0026 17D0     	 beq .L147
 3010              	 .loc 5 828 0 is_stmt 0 discriminator 1
 3011 0028 0B23     	 mov r3,#11
 3012 002a FB18     	 add r3,r7,r3
 3013 002c 1B78     	 ldrb r3,[r3]
 3014 002e 0122     	 mov r2,#1
 3015 0030 5340     	 eor r3,r2
 3016 0032 DBB2     	 uxtb r3,r3
 3017 0034 002B     	 cmp r3,#0
 3018 0036 09D0     	 beq .L148
 3019              	 .loc 5 828 0 discriminator 2
 3020 0038 FB68     	 ldr r3,[r7,#12]
 3021 003a 9B68     	 ldr r3,[r3,#8]
 3022 003c 2822     	 mov r2,#40
 3023 003e 9B5C     	 ldrb r3,[r3,r2]
 3024 0040 DBB2     	 uxtb r3,r3
 3025 0042 0122     	 mov r2,#1
 3026 0044 5340     	 eor r3,r2
 3027 0046 DBB2     	 uxtb r3,r3
 3028 0048 002B     	 cmp r3,#0
 3029 004a 05D1     	 bne .L147
 3030              	.L148:
 3031              	 .loc 5 828 0 discriminator 4
 3032 004c 3B68     	 ldr r3,[r7]
 3033 004e 002B     	 cmp r3,#0
 3034 0050 02D0     	 beq .L147
 3035              	 .loc 5 828 0 discriminator 5
 3036 0052 3B6A     	 ldr r3,[r7,#32]
 3037 0054 002B     	 cmp r3,#0
 3038 0056 04D1     	 bne .L149
 3039              	.L147:
 829:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (count == 0U)))
 830:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 831:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 3040              	 .loc 5 831 0 is_stmt 1
 3041 0058 1723     	 mov r3,#23
 3042 005a FB18     	 add r3,r7,r3
 3043 005c 0122     	 mov r2,#1
 3044 005e 1A70     	 strb r2,[r3]
 3045 0060 4CE0     	 b .L150
 3046              	.L149:
 832:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 833:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 834:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 835:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (ptr_runtime->rx_busy == false)
 3047              	 .loc 5 835 0
 3048 0062 3B69     	 ldr r3,[r7,#16]
 3049 0064 2722     	 mov r2,#39
 3050 0066 9B5C     	 ldrb r3,[r3,r2]
 3051 0068 DBB2     	 uxtb r3,r3
 3052 006a 0122     	 mov r2,#1
 3053 006c 5340     	 eor r3,r2
 3054 006e DBB2     	 uxtb r3,r3
 3055 0070 002B     	 cmp r3,#0
 3056 0072 43D0     	 beq .L150
 836:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 837:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->direction = (uint32_t)I2C_MASTER_DIRECTION_RECEIVE;
 3057              	 .loc 5 837 0
 3058 0074 3B69     	 ldr r3,[r7,#16]
 3059 0076 0122     	 mov r2,#1
 3060 0078 9A61     	 str r2,[r3,#24]
 838:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 839:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* If no active reception in progress, obtain the address of data buffer and number of data b
 840:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data = data;
 3061              	 .loc 5 840 0
 3062 007a 3B69     	 ldr r3,[r7,#16]
 3063 007c 3A68     	 ldr r2,[r7]
 3064 007e 5A60     	 str r2,[r3,#4]
 841:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data_count = count;
 3065              	 .loc 5 841 0
 3066 0080 3B69     	 ldr r3,[r7,#16]
 3067 0082 3A6A     	 ldr r2,[r7,#32]
 3068 0084 1A61     	 str r2,[r3,#16]
 842:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data = data;
 3069              	 .loc 5 842 0
 3070 0086 3B69     	 ldr r3,[r7,#16]
 3071 0088 3A68     	 ldr r2,[r7]
 3072 008a 1A60     	 str r2,[r3]
 843:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_count = count;
 3073              	 .loc 5 843 0
 3074 008c 3B69     	 ldr r3,[r7,#16]
 3075 008e 3A6A     	 ldr r2,[r7,#32]
 3076 0090 9A60     	 str r2,[r3,#8]
 844:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_busy = true;
 3077              	 .loc 5 844 0
 3078 0092 3B69     	 ldr r3,[r7,#16]
 3079 0094 2622     	 mov r2,#38
 3080 0096 0121     	 mov r1,#1
 3081 0098 9954     	 strb r1,[r3,r2]
 845:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_busy = true;
 3082              	 .loc 5 845 0
 3083 009a 3B69     	 ldr r3,[r7,#16]
 3084 009c 2722     	 mov r2,#39
 3085 009e 0121     	 mov r1,#1
 3086 00a0 9954     	 strb r1,[r3,r2]
 846:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_stop = send_stop;
 3087              	 .loc 5 846 0
 3088 00a2 2423     	 mov r3,#36
 3089 00a4 FB18     	 add r3,r7,r3
 3090 00a6 1A78     	 ldrb r2,[r3]
 3091 00a8 3B69     	 ldr r3,[r7,#16]
 3092 00aa DA61     	 str r2,[r3,#28]
 847:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_nack = send_nack;
 3093              	 .loc 5 847 0
 3094 00ac 2823     	 mov r3,#40
 3095 00ae FB18     	 add r3,r7,r3
 3096 00b0 1A78     	 ldrb r2,[r3]
 3097 00b2 3B69     	 ldr r3,[r7,#16]
 3098 00b4 1A62     	 str r2,[r3,#32]
 848:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data_index = 0U;
 3099              	 .loc 5 848 0
 3100 00b6 3B69     	 ldr r3,[r7,#16]
 3101 00b8 0022     	 mov r2,#0
 3102 00ba 5A61     	 str r2,[r3,#20]
 849:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index = 0U;
 3103              	 .loc 5 849 0
 3104 00bc 3B69     	 ldr r3,[r7,#16]
 3105 00be 0022     	 mov r2,#0
 3106 00c0 DA60     	 str r2,[r3,#12]
 850:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 851:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->rxFIFO_size > 0)
 3107              	 .loc 5 851 0
 3108 00c2 FB68     	 ldr r3,[r7,#12]
 3109 00c4 5B68     	 ldr r3,[r3,#4]
 3110 00c6 2722     	 mov r2,#39
 3111 00c8 9B5C     	 ldrb r3,[r3,r2]
 3112 00ca 002B     	 cmp r3,#0
 3113 00cc 08D0     	 beq .L151
 852:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 853:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_lReceive_FIFOData(handle, send_start, address, count);
 3114              	 .loc 5 853 0
 3115 00ce F868     	 ldr r0,[r7,#12]
 3116 00d0 0B23     	 mov r3,#11
 3117 00d2 FB18     	 add r3,r7,r3
 3118 00d4 1978     	 ldrb r1,[r3]
 3119 00d6 7A68     	 ldr r2,[r7,#4]
 3120 00d8 3B6A     	 ldr r3,[r7,#32]
 3121 00da FFF7FEFF 	 bl I2C_MASTER_lReceive_FIFOData
 3122 00de 09E0     	 b .L152
 3123              	.L151:
 854:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 855:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 856:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 857:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_lReceive_StdData(handle, send_start, address);
 3124              	 .loc 5 857 0
 3125 00e0 F968     	 ldr r1,[r7,#12]
 3126 00e2 0B23     	 mov r3,#11
 3127 00e4 FB18     	 add r3,r7,r3
 3128 00e6 1A78     	 ldrb r2,[r3]
 3129 00e8 7B68     	 ldr r3,[r7,#4]
 3130 00ea 081C     	 mov r0,r1
 3131 00ec 111C     	 mov r1,r2
 3132 00ee 1A1C     	 mov r2,r3
 3133 00f0 FFF7FEFF 	 bl I2C_MASTER_lReceive_StdData
 3134              	.L152:
 858:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 859:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_SUCCESS;
 3135              	 .loc 5 859 0
 3136 00f4 1723     	 mov r3,#23
 3137 00f6 FB18     	 add r3,r7,r3
 3138 00f8 0022     	 mov r2,#0
 3139 00fa 1A70     	 strb r2,[r3]
 3140              	.L150:
 860:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 861:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 862:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 3141              	 .loc 5 862 0
 3142 00fc 1723     	 mov r3,#23
 3143 00fe FB18     	 add r3,r7,r3
 3144 0100 1B78     	 ldrb r3,[r3]
 863:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3145              	 .loc 5 863 0
 3146 0102 181C     	 mov r0,r3
 3147 0104 BD46     	 mov sp,r7
 3148 0106 06B0     	 add sp,sp,#24
 3149              	 
 3150 0108 80BD     	 pop {r7,pc}
 3151              	 .cfi_endproc
 3152              	.LFE164:
 3154 010a C046     	 .section .text.I2C_MASTER_ReceiveHandler,"ax",%progbits
 3155              	 .align 2
 3156              	 .global I2C_MASTER_ReceiveHandler
 3157              	 .code 16
 3158              	 .thumb_func
 3160              	I2C_MASTER_ReceiveHandler:
 3161              	.LFB165:
 864:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 865:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
 866:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Receive interrupt handler for the APP.
 867:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * This is a common interrupt handling function for different instances of the I2C_MASTER APP.
 868:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 869:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  handle I2C_MASTER APP handle pointer of type I2C_MASTER_t*
 870:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 871:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return void
 872:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 873:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ReceiveHandler(I2C_MASTER_t * const handle)
 874:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3162              	 .loc 5 874 0
 3163              	 .cfi_startproc
 3164 0000 90B5     	 push {r4,r7,lr}
 3165              	.LCFI132:
 3166              	 .cfi_def_cfa_offset 12
 3167              	 .cfi_offset 4,-12
 3168              	 .cfi_offset 7,-8
 3169              	 .cfi_offset 14,-4
 3170 0002 85B0     	 sub sp,sp,#20
 3171              	.LCFI133:
 3172              	 .cfi_def_cfa_offset 32
 3173 0004 00AF     	 add r7,sp,#0
 3174              	.LCFI134:
 3175              	 .cfi_def_cfa_register 7
 3176 0006 7860     	 str r0,[r7,#4]
 875:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 876:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_lindex;
 877:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_min;
 878:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 879:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 3177              	 .loc 5 879 0
 3178 0008 7B68     	 ldr r3,[r7,#4]
 3179 000a 9B68     	 ldr r3,[r3,#8]
 3180 000c BB60     	 str r3,[r7,#8]
 880:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_lindex = 0U;
 3181              	 .loc 5 880 0
 3182 000e 0F23     	 mov r3,#15
 3183 0010 FB18     	 add r3,r7,r3
 3184 0012 0022     	 mov r2,#0
 3185 0014 1A70     	 strb r2,[r3]
 881:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 882:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->rx_busy == true)
 3186              	 .loc 5 882 0
 3187 0016 BB68     	 ldr r3,[r7,#8]
 3188 0018 2722     	 mov r2,#39
 3189 001a 9B5C     	 ldrb r3,[r3,r2]
 3190 001c DBB2     	 uxtb r3,r3
 3191 001e 002B     	 cmp r3,#0
 3192 0020 00D1     	 bne .LCB2865
 3193 0022 32E1     	 b .L154
 3194              	.LCB2865:
 883:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 884:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->rxFIFO_size > 0)
 3195              	 .loc 5 884 0
 3196 0024 7B68     	 ldr r3,[r7,#4]
 3197 0026 5B68     	 ldr r3,[r3,#4]
 3198 0028 2722     	 mov r2,#39
 3199 002a 9B5C     	 ldrb r3,[r3,r2]
 3200 002c 002B     	 cmp r3,#0
 3201 002e 00D1     	 bne .LCB2871
 3202 0030 E3E0     	 b .L156
 3203              	.LCB2871:
 885:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 886:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /********************************************************************************************
 887:../Dave/Generated/I2C_MASTER/i2c_master.c ****        Rx FIFO enabled
 888:../Dave/Generated/I2C_MASTER/i2c_master.c ****       *********************************************************************************************
 889:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsRXFIFOEmpty(handle) == false)
 3204              	 .loc 5 889 0
 3205 0032 22E0     	 b .L157
 3206              	.L159:
 890:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 891:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /*Read all the content of Receive FIFO */
 892:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->rx_data[ptr_runtime->rx_data_index] = (uint8_t)I2C_MASTER_GetReceivedByte(hand
 3207              	 .loc 5 892 0
 3208 0034 BB68     	 ldr r3,[r7,#8]
 3209 0036 5A68     	 ldr r2,[r3,#4]
 3210 0038 BB68     	 ldr r3,[r7,#8]
 3211 003a 5B69     	 ldr r3,[r3,#20]
 3212 003c D418     	 add r4,r2,r3
 3213 003e 7B68     	 ldr r3,[r7,#4]
 3214 0040 181C     	 mov r0,r3
 3215 0042 FFF7FEFF 	 bl I2C_MASTER_GetReceivedByte
 3216 0046 031C     	 mov r3,r0
 3217 0048 2370     	 strb r3,[r4]
 893:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->rx_data_index++;
 3218              	 .loc 5 893 0
 3219 004a BB68     	 ldr r3,[r7,#8]
 3220 004c 5B69     	 ldr r3,[r3,#20]
 3221 004e 5A1C     	 add r2,r3,#1
 3222 0050 BB68     	 ldr r3,[r7,#8]
 3223 0052 5A61     	 str r2,[r3,#20]
 894:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 895:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 3224              	 .loc 5 895 0
 3225 0054 BB68     	 ldr r3,[r7,#8]
 3226 0056 5A69     	 ldr r2,[r3,#20]
 3227 0058 BB68     	 ldr r3,[r7,#8]
 3228 005a 1B69     	 ldr r3,[r3,#16]
 3229 005c 9A42     	 cmp r2,r3
 3230 005e 0CD1     	 bne .L157
 896:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 897:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /*Reception complete*/
 898:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->rx_busy = false;
 3231              	 .loc 5 898 0
 3232 0060 BB68     	 ldr r3,[r7,#8]
 3233 0062 2722     	 mov r2,#39
 3234 0064 0021     	 mov r1,#0
 3235 0066 9954     	 strb r1,[r3,r2]
 899:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 900:../Dave/Generated/I2C_MASTER/i2c_master.c ****             /*Disable both standard receive and alternative receive FIFO events*/
 901:../Dave/Generated/I2C_MASTER/i2c_master.c ****             XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,
 3236              	 .loc 5 901 0
 3237 0068 7B68     	 ldr r3,[r7,#4]
 3238 006a 1A68     	 ldr r2,[r3]
 3239 006c C023     	 mov r3,#192
 3240 006e DB05     	 lsl r3,r3,#23
 3241 0070 101C     	 mov r0,r2
 3242 0072 191C     	 mov r1,r3
 3243 0074 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_DisableEvent
 902:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                           (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDA
 903:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                      (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERN
 904:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 905:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 3244              	 .loc 5 905 0
 3245 0078 0AE0     	 b .L158
 3246              	.L157:
 889:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 3247              	 .loc 5 889 0
 3248 007a 7B68     	 ldr r3,[r7,#4]
 3249 007c 181C     	 mov r0,r3
 3250 007e FFF7FEFF 	 bl I2C_MASTER_IsRXFIFOEmpty
 3251 0082 031C     	 mov r3,r0
 3252 0084 1A1C     	 mov r2,r3
 3253 0086 0123     	 mov r3,#1
 3254 0088 5340     	 eor r3,r2
 3255 008a DBB2     	 uxtb r3,r3
 3256 008c 002B     	 cmp r3,#0
 3257 008e D1D1     	 bne .L159
 3258              	.L158:
 906:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 907:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while(I2C_MASTER_IsRXFIFOEmpty(handle) == false)*/
 908:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 909:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Set the trigger limit if data still to be received*/
 910:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 3259              	 .loc 5 910 0
 3260 0090 BB68     	 ldr r3,[r7,#8]
 3261 0092 5A69     	 ldr r2,[r3,#20]
 3262 0094 BB68     	 ldr r3,[r7,#8]
 3263 0096 1B69     	 ldr r3,[r3,#16]
 3264 0098 9A42     	 cmp r2,r3
 3265 009a 00D3     	 bcc .LCB2928
 3266 009c 8CE0     	 b .L160
 3267              	.LCB2928:
 911:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 912:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_lReconfigureRxFIFO(handle,(uint32_t)(ptr_runtime->rx_data_count - ptr_runtime->r
 3268              	 .loc 5 912 0
 3269 009e BB68     	 ldr r3,[r7,#8]
 3270 00a0 1A69     	 ldr r2,[r3,#16]
 3271 00a2 BB68     	 ldr r3,[r7,#8]
 3272 00a4 5B69     	 ldr r3,[r3,#20]
 3273 00a6 D31A     	 sub r3,r2,r3
 3274 00a8 7A68     	 ldr r2,[r7,#4]
 3275 00aa 101C     	 mov r0,r2
 3276 00ac 191C     	 mov r1,r3
 3277 00ae FFF7FEFF 	 bl I2C_MASTER_lReconfigureRxFIFO
 913:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 914:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if ((handle->config->txFIFO_size > 0))
 3278              	 .loc 5 914 0
 3279 00b2 7B68     	 ldr r3,[r7,#4]
 3280 00b4 5B68     	 ldr r3,[r3,#4]
 3281 00b6 2622     	 mov r2,#38
 3282 00b8 9B5C     	 ldrb r3,[r3,r2]
 3283 00ba 002B     	 cmp r3,#0
 3284 00bc 17D0     	 beq .L161
 915:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 916:../Dave/Generated/I2C_MASTER/i2c_master.c ****           fifo_min = (uint8_t)calculate_minfifosize(((uint32_t)1 << (uint32_t)handle->config->txFIF
 3285              	 .loc 5 916 0
 3286 00be 7B68     	 ldr r3,[r7,#4]
 3287 00c0 5B68     	 ldr r3,[r3,#4]
 3288 00c2 2622     	 mov r2,#38
 3289 00c4 9B5C     	 ldrb r3,[r3,r2]
 3290 00c6 1A1C     	 mov r2,r3
 3291 00c8 0123     	 mov r3,#1
 3292 00ca 9340     	 lsl r3,r3,r2
 3293 00cc 191C     	 mov r1,r3
 917:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     ((uint32_t)1 << (uint32_t)handle->config->rxFIF
 3294              	 .loc 5 917 0
 3295 00ce 7B68     	 ldr r3,[r7,#4]
 3296 00d0 5B68     	 ldr r3,[r3,#4]
 3297 00d2 2722     	 mov r2,#39
 3298 00d4 9B5C     	 ldrb r3,[r3,r2]
 916:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     ((uint32_t)1 << (uint32_t)handle->config->rxFIF
 3299              	 .loc 5 916 0
 3300 00d6 1A1C     	 mov r2,r3
 3301 00d8 0123     	 mov r3,#1
 3302 00da 9340     	 lsl r3,r3,r2
 3303 00dc 081C     	 mov r0,r1
 3304 00de 191C     	 mov r1,r3
 3305 00e0 FFF7FEFF 	 bl calculate_minfifosize
 3306 00e4 021C     	 mov r2,r0
 3307 00e6 0E23     	 mov r3,#14
 3308 00e8 FB18     	 add r3,r7,r3
 3309 00ea 1A70     	 strb r2,[r3]
 3310 00ec 03E0     	 b .L162
 3311              	.L161:
 918:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 919:../Dave/Generated/I2C_MASTER/i2c_master.c ****        else
 920:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 921:../Dave/Generated/I2C_MASTER/i2c_master.c ****           fifo_min = 2U;
 3312              	 .loc 5 921 0
 3313 00ee 0E23     	 mov r3,#14
 3314 00f0 FB18     	 add r3,r7,r3
 3315 00f2 0222     	 mov r2,#2
 3316 00f4 1A70     	 strb r2,[r3]
 3317              	.L162:
 922:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 923:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*******************************************************************************************
 924:../Dave/Generated/I2C_MASTER/i2c_master.c ****          Rx and Tx FIFO enabled
 925:../Dave/Generated/I2C_MASTER/i2c_master.c ****         *******************************************************************************************
 926:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (handle->config->txFIFO_size > 0)
 3318              	 .loc 5 926 0
 3319 00f6 7B68     	 ldr r3,[r7,#4]
 3320 00f8 5B68     	 ldr r3,[r3,#4]
 3321 00fa 2622     	 mov r2,#38
 3322 00fc 9B5C     	 ldrb r3,[r3,r2]
 3323 00fe 002B     	 cmp r3,#0
 3324 0100 41D0     	 beq .L163
 927:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 928:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /*Fill the transmit FIFO */
 929:../Dave/Generated/I2C_MASTER/i2c_master.c ****           while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 3325              	 .loc 5 929 0
 3326 0102 33E0     	 b .L164
 3327              	.L169:
 930:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 931:../Dave/Generated/I2C_MASTER/i2c_master.c ****             if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 3328              	 .loc 5 931 0
 3329 0104 BB68     	 ldr r3,[r7,#8]
 3330 0106 DA68     	 ldr r2,[r3,#12]
 3331 0108 BB68     	 ldr r3,[r7,#8]
 3332 010a 9B68     	 ldr r3,[r3,#8]
 3333 010c 9A42     	 cmp r2,r3
 3334 010e 2CD2     	 bcs .L165
 932:../Dave/Generated/I2C_MASTER/i2c_master.c ****             {
 933:../Dave/Generated/I2C_MASTER/i2c_master.c ****               if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime
 3335              	 .loc 5 933 0
 3336 0110 BB68     	 ldr r3,[r7,#8]
 3337 0112 DB68     	 ldr r3,[r3,#12]
 3338 0114 5A1C     	 add r2,r3,#1
 3339 0116 BB68     	 ldr r3,[r7,#8]
 3340 0118 9B68     	 ldr r3,[r3,#8]
 3341 011a 9A42     	 cmp r2,r3
 3342 011c 08D1     	 bne .L166
 3343              	 .loc 5 933 0 is_stmt 0 discriminator 1
 3344 011e BB68     	 ldr r3,[r7,#8]
 3345 0120 1B6A     	 ldr r3,[r3,#32]
 3346 0122 012B     	 cmp r3,#1
 3347 0124 04D1     	 bne .L166
 934:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 935:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 I2C_MASTER_ReceiveNACK(handle);
 3348              	 .loc 5 935 0 is_stmt 1
 3349 0126 7B68     	 ldr r3,[r7,#4]
 3350 0128 181C     	 mov r0,r3
 3351 012a FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 3352 012e 03E0     	 b .L167
 3353              	.L166:
 936:../Dave/Generated/I2C_MASTER/i2c_master.c ****               }
 937:../Dave/Generated/I2C_MASTER/i2c_master.c ****               else
 938:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 939:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 I2C_MASTER_ReceiveACK(handle);
 3354              	 .loc 5 939 0
 3355 0130 7B68     	 ldr r3,[r7,#4]
 3356 0132 181C     	 mov r0,r3
 3357 0134 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 3358              	.L167:
 940:../Dave/Generated/I2C_MASTER/i2c_master.c ****               }
 941:../Dave/Generated/I2C_MASTER/i2c_master.c ****               ptr_runtime->tx_data_index++;
 3359              	 .loc 5 941 0
 3360 0138 BB68     	 ldr r3,[r7,#8]
 3361 013a DB68     	 ldr r3,[r3,#12]
 3362 013c 5A1C     	 add r2,r3,#1
 3363 013e BB68     	 ldr r3,[r7,#8]
 3364 0140 DA60     	 str r2,[r3,#12]
 942:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 943:../Dave/Generated/I2C_MASTER/i2c_master.c ****               /* if fifo size- break */
 944:../Dave/Generated/I2C_MASTER/i2c_master.c ****               if ((++fifo_lindex) >= fifo_min)
 3365              	 .loc 5 944 0
 3366 0142 0F23     	 mov r3,#15
 3367 0144 FB18     	 add r3,r7,r3
 3368 0146 0F22     	 mov r2,#15
 3369 0148 BA18     	 add r2,r7,r2
 3370 014a 1278     	 ldrb r2,[r2]
 3371 014c 0132     	 add r2,r2,#1
 3372 014e 1A70     	 strb r2,[r3]
 3373 0150 0F23     	 mov r3,#15
 3374 0152 FA18     	 add r2,r7,r3
 3375 0154 0E23     	 mov r3,#14
 3376 0156 FB18     	 add r3,r7,r3
 3377 0158 1278     	 ldrb r2,[r2]
 3378 015a 1B78     	 ldrb r3,[r3]
 3379 015c 9A42     	 cmp r2,r3
 3380 015e 05D3     	 bcc .L164
 945:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 946:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 fifo_lindex = 0U;
 3381              	 .loc 5 946 0
 3382 0160 0F23     	 mov r3,#15
 3383 0162 FB18     	 add r3,r7,r3
 3384 0164 0022     	 mov r2,#0
 3385 0166 1A70     	 strb r2,[r3]
 947:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 break;
 3386              	 .loc 5 947 0
 3387 0168 0CE0     	 b .L168
 3388              	.L165:
 948:../Dave/Generated/I2C_MASTER/i2c_master.c ****               }
 949:../Dave/Generated/I2C_MASTER/i2c_master.c ****             }/* end of if(handle->runtime->tx_data_index < handle->runtime->tx_data_count) */
 950:../Dave/Generated/I2C_MASTER/i2c_master.c ****             else
 951:../Dave/Generated/I2C_MASTER/i2c_master.c ****             {
 952:../Dave/Generated/I2C_MASTER/i2c_master.c ****               break;
 3389              	 .loc 5 952 0
 3390 016a 0BE0     	 b .L168
 3391              	.L164:
 929:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 3392              	 .loc 5 929 0
 3393 016c 7B68     	 ldr r3,[r7,#4]
 3394 016e 181C     	 mov r0,r3
 3395 0170 FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 3396 0174 031C     	 mov r3,r0
 3397 0176 1A1C     	 mov r2,r3
 3398 0178 0123     	 mov r3,#1
 3399 017a 5340     	 eor r3,r2
 3400 017c DBB2     	 uxtb r3,r3
 3401 017e 002B     	 cmp r3,#0
 3402 0180 C0D1     	 bne .L169
 3403 0182 19E0     	 b .L160
 3404              	.L168:
 3405 0184 18E0     	 b .L160
 3406              	.L163:
 953:../Dave/Generated/I2C_MASTER/i2c_master.c ****             }
 954:../Dave/Generated/I2C_MASTER/i2c_master.c ****          }
 955:../Dave/Generated/I2C_MASTER/i2c_master.c ****        } /* end of  if((handle->config->txFIFO_size > 0)) */
 956:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*******************************************************************************************
 957:../Dave/Generated/I2C_MASTER/i2c_master.c ****           Rx FIFO is enabled, Tx FIFO disabled
 958:../Dave/Generated/I2C_MASTER/i2c_master.c ****        ********************************************************************************************
 959:../Dave/Generated/I2C_MASTER/i2c_master.c ****        else
 960:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 961:../Dave/Generated/I2C_MASTER/i2c_master.c ****          if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->sen
 3407              	 .loc 5 961 0
 3408 0186 BB68     	 ldr r3,[r7,#8]
 3409 0188 DB68     	 ldr r3,[r3,#12]
 3410 018a 5A1C     	 add r2,r3,#1
 3411 018c BB68     	 ldr r3,[r7,#8]
 3412 018e 9B68     	 ldr r3,[r3,#8]
 3413 0190 9A42     	 cmp r2,r3
 3414 0192 08D1     	 bne .L170
 3415              	 .loc 5 961 0 is_stmt 0 discriminator 1
 3416 0194 BB68     	 ldr r3,[r7,#8]
 3417 0196 1B6A     	 ldr r3,[r3,#32]
 3418 0198 012B     	 cmp r3,#1
 3419 019a 04D1     	 bne .L170
 962:../Dave/Generated/I2C_MASTER/i2c_master.c ****          {
 963:../Dave/Generated/I2C_MASTER/i2c_master.c ****            I2C_MASTER_ReceiveNACK(handle);
 3420              	 .loc 5 963 0 is_stmt 1
 3421 019c 7B68     	 ldr r3,[r7,#4]
 3422 019e 181C     	 mov r0,r3
 3423 01a0 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 3424 01a4 03E0     	 b .L171
 3425              	.L170:
 964:../Dave/Generated/I2C_MASTER/i2c_master.c ****          }
 965:../Dave/Generated/I2C_MASTER/i2c_master.c ****          else
 966:../Dave/Generated/I2C_MASTER/i2c_master.c ****          {
 967:../Dave/Generated/I2C_MASTER/i2c_master.c ****            I2C_MASTER_ReceiveACK(handle);
 3426              	 .loc 5 967 0
 3427 01a6 7B68     	 ldr r3,[r7,#4]
 3428 01a8 181C     	 mov r0,r3
 3429 01aa FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 3430              	.L171:
 968:../Dave/Generated/I2C_MASTER/i2c_master.c ****          }
 969:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 970:../Dave/Generated/I2C_MASTER/i2c_master.c ****          ptr_runtime->tx_data_index++;
 3431              	 .loc 5 970 0
 3432 01ae BB68     	 ldr r3,[r7,#8]
 3433 01b0 DB68     	 ldr r3,[r3,#12]
 3434 01b2 5A1C     	 add r2,r3,#1
 3435 01b4 BB68     	 ldr r3,[r7,#8]
 3436 01b6 DA60     	 str r2,[r3,#12]
 3437              	.L160:
 971:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 972:../Dave/Generated/I2C_MASTER/i2c_master.c ****      } /* end of if(ptr_runtime->rx_data_index < ptr_runtime->rx_data_count) */
 973:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 974:../Dave/Generated/I2C_MASTER/i2c_master.c ****      if last byte to receive then disable receive events and jump to callback routine
 975:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 976:../Dave/Generated/I2C_MASTER/i2c_master.c ****      if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 3438              	 .loc 5 976 0
 3439 01b8 BB68     	 ldr r3,[r7,#8]
 3440 01ba 5A69     	 ldr r2,[r3,#20]
 3441 01bc BB68     	 ldr r3,[r7,#8]
 3442 01be 1B69     	 ldr r3,[r3,#16]
 3443 01c0 9A42     	 cmp r2,r3
 3444 01c2 62D1     	 bne .L154
 977:../Dave/Generated/I2C_MASTER/i2c_master.c ****      {
 978:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*Clear both standard receive and alternative receive FIFO events*/
 979:../Dave/Generated/I2C_MASTER/i2c_master.c ****        XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVE
 3445              	 .loc 5 979 0
 3446 01c4 7B68     	 ldr r3,[r7,#4]
 3447 01c6 1A68     	 ldr r2,[r3]
 3448 01c8 C023     	 mov r3,#192
 3449 01ca DB05     	 lsl r3,r3,#23
 3450 01cc 101C     	 mov r0,r2
 3451 01ce 191C     	 mov r1,r3
 3452 01d0 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_DisableEvent
 980:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                                    (uint32_t)XMC_USIC_CH_RXFIFO_EVE
 981:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 982:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*Disable both standard receive and alternative receive events*/
 983:../Dave/Generated/I2C_MASTER/i2c_master.c ****        XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE
 3453              	 .loc 5 983 0
 3454 01d4 7B68     	 ldr r3,[r7,#4]
 3455 01d6 1A68     	 ldr r2,[r3]
 3456 01d8 C023     	 mov r3,#192
 3457 01da 1B02     	 lsl r3,r3,#8
 3458 01dc 101C     	 mov r0,r2
 3459 01de 191C     	 mov r1,r3
 3460 01e0 FFF7FEFF 	 bl XMC_USIC_CH_DisableEvent
 984:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                             (uint32_t)XMC_USIC_CH_EVENT_STANDARD_RE
 985:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 986:../Dave/Generated/I2C_MASTER/i2c_master.c ****        if (ptr_runtime->bus_acquired == true)
 3461              	 .loc 5 986 0
 3462 01e4 BB68     	 ldr r3,[r7,#8]
 3463 01e6 2822     	 mov r2,#40
 3464 01e8 9B5C     	 ldrb r3,[r3,r2]
 3465 01ea DBB2     	 uxtb r3,r3
 3466 01ec 002B     	 cmp r3,#0
 3467 01ee 4CD0     	 beq .L154
 987:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 988:../Dave/Generated/I2C_MASTER/i2c_master.c ****          I2C_MASTER_lSendStop_JumpTo_RxCallback(handle);
 3468              	 .loc 5 988 0
 3469 01f0 7B68     	 ldr r3,[r7,#4]
 3470 01f2 181C     	 mov r0,r3
 3471 01f4 FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_RxCallback
 3472 01f8 47E0     	 b .L154
 3473              	.L156:
 989:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 990:../Dave/Generated/I2C_MASTER/i2c_master.c ****      }
 991:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /*  end of if(handle->config->rxFIFO_size > 0) */
 992:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 993:../Dave/Generated/I2C_MASTER/i2c_master.c ****      Rx FIFO disabled
 994:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 995:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 996:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 997:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->rx_data[ptr_runtime->rx_data_index] = (uint8_t)I2C_MASTER_GetReceivedByte(handle
 3474              	 .loc 5 997 0
 3475 01fa BB68     	 ldr r3,[r7,#8]
 3476 01fc 5A68     	 ldr r2,[r3,#4]
 3477 01fe BB68     	 ldr r3,[r7,#8]
 3478 0200 5B69     	 ldr r3,[r3,#20]
 3479 0202 D418     	 add r4,r2,r3
 3480 0204 7B68     	 ldr r3,[r7,#4]
 3481 0206 181C     	 mov r0,r3
 3482 0208 FFF7FEFF 	 bl I2C_MASTER_GetReceivedByte
 3483 020c 031C     	 mov r3,r0
 3484 020e 2370     	 strb r3,[r4]
 998:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->rx_data_index++;
 3485              	 .loc 5 998 0
 3486 0210 BB68     	 ldr r3,[r7,#8]
 3487 0212 5B69     	 ldr r3,[r3,#20]
 3488 0214 5A1C     	 add r2,r3,#1
 3489 0216 BB68     	 ldr r3,[r7,#8]
 3490 0218 5A61     	 str r2,[r3,#20]
 999:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1000:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 3491              	 .loc 5 1000 0
 3492 021a BB68     	 ldr r3,[r7,#8]
 3493 021c 5A69     	 ldr r2,[r3,#20]
 3494 021e BB68     	 ldr r3,[r7,#8]
 3495 0220 1B69     	 ldr r3,[r3,#16]
 3496 0222 9A42     	 cmp r2,r3
 3497 0224 1FD2     	 bcs .L173
1001:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
1002:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 3498              	 .loc 5 1002 0
 3499 0226 BB68     	 ldr r3,[r7,#8]
 3500 0228 DA68     	 ldr r2,[r3,#12]
 3501 022a BB68     	 ldr r3,[r7,#8]
 3502 022c 9B68     	 ldr r3,[r3,#8]
 3503 022e 9A42     	 cmp r2,r3
 3504 0230 2BD2     	 bcs .L154
1003:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
1004:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /* if receive byte is end of byte and send_nack is true, send to receive Nack otherwise A
1005:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index) == (ptr_runtime->tx_data_count - 1U)) && (ptr_runtime->
 3505              	 .loc 5 1005 0
 3506 0232 BB68     	 ldr r3,[r7,#8]
 3507 0234 DA68     	 ldr r2,[r3,#12]
 3508 0236 BB68     	 ldr r3,[r7,#8]
 3509 0238 9B68     	 ldr r3,[r3,#8]
 3510 023a 013B     	 sub r3,r3,#1
 3511 023c 9A42     	 cmp r2,r3
 3512 023e 08D1     	 bne .L175
 3513              	 .loc 5 1005 0 is_stmt 0 discriminator 1
 3514 0240 BB68     	 ldr r3,[r7,#8]
 3515 0242 1B6A     	 ldr r3,[r3,#32]
 3516 0244 012B     	 cmp r3,#1
 3517 0246 04D1     	 bne .L175
1006:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
1007:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 3518              	 .loc 5 1007 0 is_stmt 1
 3519 0248 7B68     	 ldr r3,[r7,#4]
 3520 024a 181C     	 mov r0,r3
 3521 024c FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 3522 0250 03E0     	 b .L176
 3523              	.L175:
1008:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
1009:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
1010:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
1011:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 3524              	 .loc 5 1011 0
 3525 0252 7B68     	 ldr r3,[r7,#4]
 3526 0254 181C     	 mov r0,r3
 3527 0256 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 3528              	.L176:
1012:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
1013:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 3529              	 .loc 5 1013 0
 3530 025a BB68     	 ldr r3,[r7,#8]
 3531 025c DB68     	 ldr r3,[r3,#12]
 3532 025e 5A1C     	 add r2,r3,#1
 3533 0260 BB68     	 ldr r3,[r7,#8]
 3534 0262 DA60     	 str r2,[r3,#12]
 3535 0264 11E0     	 b .L154
 3536              	.L173:
1014:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
1015:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
1016:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
1017:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
1018:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /*Disable both standard receive and alternative receive events*/
1019:../Dave/Generated/I2C_MASTER/i2c_master.c ****         XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_ALTERNATIV
 3537              	 .loc 5 1019 0
 3538 0266 7B68     	 ldr r3,[r7,#4]
 3539 0268 1A68     	 ldr r2,[r3]
 3540 026a C023     	 mov r3,#192
 3541 026c 1B02     	 lsl r3,r3,#8
 3542 026e 101C     	 mov r0,r2
 3543 0270 191C     	 mov r1,r3
 3544 0272 FFF7FEFF 	 bl XMC_USIC_CH_DisableEvent
1020:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                              (uint32_t)XMC_USIC_CH_EVENT_STANDARD_R
1021:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->bus_acquired == true)
 3545              	 .loc 5 1021 0
 3546 0276 BB68     	 ldr r3,[r7,#8]
 3547 0278 2822     	 mov r2,#40
 3548 027a 9B5C     	 ldrb r3,[r3,r2]
 3549 027c DBB2     	 uxtb r3,r3
 3550 027e 002B     	 cmp r3,#0
 3551 0280 03D0     	 beq .L154
1022:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
1023:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_lSendStop_JumpTo_RxCallback(handle);
 3552              	 .loc 5 1023 0
 3553 0282 7B68     	 ldr r3,[r7,#4]
 3554 0284 181C     	 mov r0,r3
 3555 0286 FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_RxCallback
 3556              	.L154:
1024:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
1025:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
1026:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
1027:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of  if(ptr_runtime->rx_busy == true)*/
1028:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3557              	 .loc 5 1028 0
 3558 028a BD46     	 mov sp,r7
 3559 028c 05B0     	 add sp,sp,#20
 3560              	 
 3561 028e 90BD     	 pop {r4,r7,pc}
 3562              	 .cfi_endproc
 3563              	.LFE165:
 3565              	 .section .text.I2C_MASTER_lSendStop_JumpTo_RxCallback,"ax",%progbits
 3566              	 .align 2
 3567              	 .code 16
 3568              	 .thumb_func
 3570              	I2C_MASTER_lSendStop_JumpTo_RxCallback:
 3571              	.LFB166:
1029:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1030:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to issue Send Stop command and jump to receive callback routine */
1031:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_RxCallback(I2C_MASTER_t *const handle)
1032:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3572              	 .loc 5 1032 0
 3573              	 .cfi_startproc
 3574 0000 80B5     	 push {r7,lr}
 3575              	.LCFI135:
 3576              	 .cfi_def_cfa_offset 8
 3577              	 .cfi_offset 7,-8
 3578              	 .cfi_offset 14,-4
 3579 0002 84B0     	 sub sp,sp,#16
 3580              	.LCFI136:
 3581              	 .cfi_def_cfa_offset 24
 3582 0004 00AF     	 add r7,sp,#0
 3583              	.LCFI137:
 3584              	 .cfi_def_cfa_register 7
 3585 0006 7860     	 str r0,[r7,#4]
1033:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
1034:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1035:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 3586              	 .loc 5 1035 0
 3587 0008 7B68     	 ldr r3,[r7,#4]
 3588 000a 9B68     	 ldr r3,[r3,#8]
 3589 000c FB60     	 str r3,[r7,#12]
1036:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1037:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->send_stop == true)
 3590              	 .loc 5 1037 0
 3591 000e FB68     	 ldr r3,[r7,#12]
 3592 0010 DB69     	 ldr r3,[r3,#28]
 3593 0012 012B     	 cmp r3,#1
 3594 0014 10D1     	 bne .L178
1038:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1039:../Dave/Generated/I2C_MASTER/i2c_master.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY){}
 3595              	 .loc 5 1039 0
 3596 0016 C046     	 mov r8,r8
 3597              	.L179:
 3598              	 .loc 5 1039 0 is_stmt 0 discriminator 1
 3599 0018 7B68     	 ldr r3,[r7,#4]
 3600 001a 1B68     	 ldr r3,[r3]
 3601 001c 181C     	 mov r0,r3
 3602 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 3603 0022 031E     	 sub r3,r0,#0
 3604 0024 802B     	 cmp r3,#128
 3605 0026 F7D0     	 beq .L179
1040:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1041:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->bus_acquired = false;
 3606              	 .loc 5 1041 0 is_stmt 1
 3607 0028 FB68     	 ldr r3,[r7,#12]
 3608 002a 2822     	 mov r2,#40
 3609 002c 0021     	 mov r1,#0
 3610 002e 9954     	 strb r1,[r3,r2]
1042:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1043:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStop(handle);
 3611              	 .loc 5 1043 0
 3612 0030 7B68     	 ldr r3,[r7,#4]
 3613 0032 181C     	 mov r0,r3
 3614 0034 FFF7FEFF 	 bl I2C_MASTER_SendStop
 3615              	.L178:
1044:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1045:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1046:../Dave/Generated/I2C_MASTER/i2c_master.c ****   while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY){}
 3616              	 .loc 5 1046 0
 3617 0038 C046     	 mov r8,r8
 3618              	.L180:
 3619              	 .loc 5 1046 0 is_stmt 0 discriminator 1
 3620 003a 7B68     	 ldr r3,[r7,#4]
 3621 003c 1B68     	 ldr r3,[r3]
 3622 003e 181C     	 mov r0,r3
 3623 0040 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 3624 0044 031E     	 sub r3,r0,#0
 3625 0046 802B     	 cmp r3,#128
 3626 0048 F7D0     	 beq .L180
1047:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1048:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Reception complete */
1049:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->rx_busy = false;
 3627              	 .loc 5 1049 0 is_stmt 1
 3628 004a FB68     	 ldr r3,[r7,#12]
 3629 004c 2722     	 mov r2,#39
 3630 004e 0021     	 mov r1,#0
 3631 0050 9954     	 strb r1,[r3,r2]
1050:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->tx_busy = false;
 3632              	 .loc 5 1050 0
 3633 0052 FB68     	 ldr r3,[r7,#12]
 3634 0054 2622     	 mov r2,#38
 3635 0056 0021     	 mov r1,#0
 3636 0058 9954     	 strb r1,[r3,r2]
1051:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1052:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->rx_cbhandler != NULL)
 3637              	 .loc 5 1052 0
 3638 005a 7B68     	 ldr r3,[r7,#4]
 3639 005c 5B68     	 ldr r3,[r3,#4]
 3640 005e 5B69     	 ldr r3,[r3,#20]
 3641 0060 002B     	 cmp r3,#0
 3642 0062 03D0     	 beq .L177
1053:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1054:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Execute the 'End of reception' callback function*/
1055:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->rx_cbhandler();
 3643              	 .loc 5 1055 0
 3644 0064 7B68     	 ldr r3,[r7,#4]
 3645 0066 5B68     	 ldr r3,[r3,#4]
 3646 0068 5B69     	 ldr r3,[r3,#20]
 3647 006a 9847     	 blx r3
 3648              	.L177:
1056:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1057:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3649              	 .loc 5 1057 0
 3650 006c BD46     	 mov sp,r7
 3651 006e 04B0     	 add sp,sp,#16
 3652              	 
 3653 0070 80BD     	 pop {r7,pc}
 3654              	 .cfi_endproc
 3655              	.LFE166:
 3657 0072 C046     	 .section .text.I2C_MASTER_lAbortReceiveIRQ,"ax",%progbits
 3658              	 .align 2
 3659              	 .code 16
 3660              	 .thumb_func
 3662              	I2C_MASTER_lAbortReceiveIRQ:
 3663              	.LFB167:
1058:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1059:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1060:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortReceiveIRQ(const I2C_MASTER_t *const handle)
1061:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3664              	 .loc 5 1061 0
 3665              	 .cfi_startproc
 3666 0000 80B5     	 push {r7,lr}
 3667              	.LCFI138:
 3668              	 .cfi_def_cfa_offset 8
 3669              	 .cfi_offset 7,-8
 3670              	 .cfi_offset 14,-4
 3671 0002 82B0     	 sub sp,sp,#8
 3672              	.LCFI139:
 3673              	 .cfi_def_cfa_offset 16
 3674 0004 00AF     	 add r7,sp,#0
 3675              	.LCFI140:
 3676              	 .cfi_def_cfa_register 7
 3677 0006 7860     	 str r0,[r7,#4]
1062:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Reset the user buffer pointer to null */
1063:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->rx_busy = false;
 3678              	 .loc 5 1063 0
 3679 0008 7B68     	 ldr r3,[r7,#4]
 3680 000a 9B68     	 ldr r3,[r3,#8]
 3681 000c 2722     	 mov r2,#39
 3682 000e 0021     	 mov r1,#0
 3683 0010 9954     	 strb r1,[r3,r2]
1064:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_busy = false;
 3684              	 .loc 5 1064 0
 3685 0012 7B68     	 ldr r3,[r7,#4]
 3686 0014 9B68     	 ldr r3,[r3,#8]
 3687 0016 2622     	 mov r2,#38
 3688 0018 0021     	 mov r1,#0
 3689 001a 9954     	 strb r1,[r3,r2]
1065:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->rx_data = NULL;
 3690              	 .loc 5 1065 0
 3691 001c 7B68     	 ldr r3,[r7,#4]
 3692 001e 9B68     	 ldr r3,[r3,#8]
 3693 0020 0022     	 mov r2,#0
 3694 0022 5A60     	 str r2,[r3,#4]
1066:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1067:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->bus_acquired = false;
 3695              	 .loc 5 1067 0
 3696 0024 7B68     	 ldr r3,[r7,#4]
 3697 0026 9B68     	 ldr r3,[r3,#8]
 3698 0028 2822     	 mov r2,#40
 3699 002a 0021     	 mov r1,#0
 3700 002c 9954     	 strb r1,[r3,r2]
1068:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1069:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Disable the receive interrupts */
1070:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->rxFIFO_size != XMC_USIC_CH_FIFO_DISABLED)
 3701              	 .loc 5 1070 0
 3702 002e 7B68     	 ldr r3,[r7,#4]
 3703 0030 5B68     	 ldr r3,[r3,#4]
 3704 0032 2722     	 mov r2,#39
 3705 0034 9B5C     	 ldrb r3,[r3,r2]
 3706 0036 002B     	 cmp r3,#0
 3707 0038 08D0     	 beq .L183
1071:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1072:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_
 3708              	 .loc 5 1072 0
 3709 003a 7B68     	 ldr r3,[r7,#4]
 3710 003c 1A68     	 ldr r2,[r3]
 3711 003e C023     	 mov r3,#192
 3712 0040 DB05     	 lsl r3,r3,#23
 3713 0042 101C     	 mov r0,r2
 3714 0044 191C     	 mov r1,r3
 3715 0046 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_DisableEvent
 3716 004a 07E0     	 b .L184
 3717              	.L183:
1073:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNA
1074:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1075:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1076:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1077:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEI
 3718              	 .loc 5 1077 0
 3719 004c 7B68     	 ldr r3,[r7,#4]
 3720 004e 1A68     	 ldr r2,[r3]
 3721 0050 C023     	 mov r3,#192
 3722 0052 1B02     	 lsl r3,r3,#8
 3723 0054 101C     	 mov r0,r2
 3724 0056 191C     	 mov r1,r3
 3725 0058 FFF7FEFF 	 bl XMC_USIC_CH_DisableEvent
 3726              	.L184:
1078:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                  (uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE));
1079:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1080:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_DisableEvent((I2C_MASTER_t *)handle,((uint32_t)XMC_I2C_CH_EVENT_ACK ));
 3727              	 .loc 5 1080 0
 3728 005c 7A68     	 ldr r2,[r7,#4]
 3729 005e 8023     	 mov r3,#128
 3730 0060 DB05     	 lsl r3,r3,#23
 3731 0062 101C     	 mov r0,r2
 3732 0064 191C     	 mov r1,r3
 3733 0066 FFF7FEFF 	 bl I2C_MASTER_DisableEvent
1081:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3734              	 .loc 5 1081 0
 3735 006a BD46     	 mov sp,r7
 3736 006c 02B0     	 add sp,sp,#8
 3737              	 
 3738 006e 80BD     	 pop {r7,pc}
 3739              	 .cfi_endproc
 3740              	.LFE167:
 3742              	 .section .text.I2C_MASTER_ProtocolHandler,"ax",%progbits
 3743              	 .align 2
 3744              	 .global I2C_MASTER_ProtocolHandler
 3745              	 .code 16
 3746              	 .thumb_func
 3748              	I2C_MASTER_ProtocolHandler:
 3749              	.LFB168:
1082:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1083:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1084:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
1085:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Protocol interrupt handling function.
1086:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * The function is common for different instances of the I2C_MASTER APP.
1087:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1088:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  handle I2C_MASTER APP handle pointer of type I2C_MASTER_t*
1089:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1090:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return void
1091:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
1092:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ProtocolHandler(I2C_MASTER_t * const handle)
1093:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3750              	 .loc 5 1093 0
 3751              	 .cfi_startproc
 3752 0000 80B5     	 push {r7,lr}
 3753              	.LCFI141:
 3754              	 .cfi_def_cfa_offset 8
 3755              	 .cfi_offset 7,-8
 3756              	 .cfi_offset 14,-4
 3757 0002 84B0     	 sub sp,sp,#16
 3758              	.LCFI142:
 3759              	 .cfi_def_cfa_offset 24
 3760 0004 00AF     	 add r7,sp,#0
 3761              	.LCFI143:
 3762              	 .cfi_def_cfa_register 7
 3763 0006 7860     	 str r0,[r7,#4]
1094:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t psr_status;
1095:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1096:../Dave/Generated/I2C_MASTER/i2c_master.c ****   psr_status = XMC_I2C_CH_GetStatusFlag(handle->channel);
 3764              	 .loc 5 1096 0
 3765 0008 7B68     	 ldr r3,[r7,#4]
 3766 000a 1B68     	 ldr r3,[r3]
 3767 000c 181C     	 mov r0,r3
 3768 000e FFF7FEFF 	 bl XMC_I2C_CH_GetStatusFlag
 3769 0012 031C     	 mov r3,r0
 3770 0014 FB60     	 str r3,[r7,#12]
1097:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1098:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Check for nack event */
1099:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->nack_cbhandler != NULL) && (psr_status & (uint32_t)XMC_I2C_CH_STATUS_FLAG_NA
 3771              	 .loc 5 1099 0
 3772 0016 7B68     	 ldr r3,[r7,#4]
 3773 0018 5B68     	 ldr r3,[r3,#4]
 3774 001a 9B69     	 ldr r3,[r3,#24]
 3775 001c 002B     	 cmp r3,#0
 3776 001e 0CD0     	 beq .L186
 3777              	 .loc 5 1099 0 is_stmt 0 discriminator 1
 3778 0020 FB68     	 ldr r3,[r7,#12]
 3779 0022 2022     	 mov r2,#32
 3780 0024 1340     	 and r3,r2
 3781 0026 08D0     	 beq .L186
1100:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1101:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ClearFlag(handle,(uint32_t)XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED);
 3782              	 .loc 5 1101 0 is_stmt 1
 3783 0028 7B68     	 ldr r3,[r7,#4]
 3784 002a 181C     	 mov r0,r3
 3785 002c 2021     	 mov r1,#32
 3786 002e FFF7FEFF 	 bl I2C_MASTER_ClearFlag
1102:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->nack_cbhandler();
 3787              	 .loc 5 1102 0
 3788 0032 7B68     	 ldr r3,[r7,#4]
 3789 0034 5B68     	 ldr r3,[r3,#4]
 3790 0036 9B69     	 ldr r3,[r3,#24]
 3791 0038 9847     	 blx r3
 3792              	.L186:
1103:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1104:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1105:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Check for arbitration lost */
1106:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->arbitration_cbhandler != NULL) && (psr_status & (uint32_t)XMC_I2C_CH_STATUS_
 3793              	 .loc 5 1106 0
 3794 003a 7B68     	 ldr r3,[r7,#4]
 3795 003c 5B68     	 ldr r3,[r3,#4]
 3796 003e DB69     	 ldr r3,[r3,#28]
 3797 0040 002B     	 cmp r3,#0
 3798 0042 0CD0     	 beq .L187
 3799              	 .loc 5 1106 0 is_stmt 0 discriminator 1
 3800 0044 FB68     	 ldr r3,[r7,#12]
 3801 0046 4022     	 mov r2,#64
 3802 0048 1340     	 and r3,r2
 3803 004a 08D0     	 beq .L187
1107:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1108:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ClearFlag(handle,(uint32_t)XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST);
 3804              	 .loc 5 1108 0 is_stmt 1
 3805 004c 7B68     	 ldr r3,[r7,#4]
 3806 004e 181C     	 mov r0,r3
 3807 0050 4021     	 mov r1,#64
 3808 0052 FFF7FEFF 	 bl I2C_MASTER_ClearFlag
1109:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->arbitration_cbhandler();
 3809              	 .loc 5 1109 0
 3810 0056 7B68     	 ldr r3,[r7,#4]
 3811 0058 5B68     	 ldr r3,[r3,#4]
 3812 005a DB69     	 ldr r3,[r3,#28]
 3813 005c 9847     	 blx r3
 3814              	.L187:
1110:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1111:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1112:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Check for error detected */
1113:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->error_cbhandler != NULL) && (psr_status & ((uint32_t)XMC_I2C_CH_STATUS_FLAG_
 3815              	 .loc 5 1113 0
 3816 005e 7B68     	 ldr r3,[r7,#4]
 3817 0060 5B68     	 ldr r3,[r3,#4]
 3818 0062 1B6A     	 ldr r3,[r3,#32]
 3819 0064 002B     	 cmp r3,#0
 3820 0066 0FD0     	 beq .L185
 3821              	 .loc 5 1113 0 is_stmt 0 discriminator 1
 3822 0068 FA68     	 ldr r2,[r7,#12]
 3823 006a 8123     	 mov r3,#129
 3824 006c 5B00     	 lsl r3,r3,#1
 3825 006e 1340     	 and r3,r2
 3826 0070 0AD0     	 beq .L185
1114:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1115:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ClearFlag(handle,(uint32_t)XMC_I2C_CH_STATUS_FLAG_ERROR);
 3827              	 .loc 5 1115 0 is_stmt 1
 3828 0072 7A68     	 ldr r2,[r7,#4]
 3829 0074 8023     	 mov r3,#128
 3830 0076 5B00     	 lsl r3,r3,#1
 3831 0078 101C     	 mov r0,r2
 3832 007a 191C     	 mov r1,r3
 3833 007c FFF7FEFF 	 bl I2C_MASTER_ClearFlag
1116:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->error_cbhandler();
 3834              	 .loc 5 1116 0
 3835 0080 7B68     	 ldr r3,[r7,#4]
 3836 0082 5B68     	 ldr r3,[r3,#4]
 3837 0084 1B6A     	 ldr r3,[r3,#32]
 3838 0086 9847     	 blx r3
 3839              	.L185:
1117:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1118:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3840              	 .loc 5 1118 0
 3841 0088 BD46     	 mov sp,r7
 3842 008a 04B0     	 add sp,sp,#16
 3843              	 
 3844 008c 80BD     	 pop {r7,pc}
 3845              	 .cfi_endproc
 3846              	.LFE168:
 3848 008e C046     	 .section .text.I2C_MASTER_lReconfigureRxFIFO,"ax",%progbits
 3849              	 .align 2
 3850              	 .code 16
 3851              	 .thumb_func
 3853              	I2C_MASTER_lReconfigureRxFIFO:
 3854              	.LFB169:
1119:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1120:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
1121:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
1122:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief A local function to reconfigure Receive FIFO with the given size and trigger limit.
1123:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Size is needed because the FIFO should be disabled before changing the trigger limit by
1124:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * clearing the FIFO size.
1125:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1126:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param I2C_MASTER_t * pointer to the I2C_MASTER APP handle
1127:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param uint32_t  number of bytes to be received.
1128:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1129:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return void.
1130:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
1131:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1132:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReconfigureRxFIFO(const I2C_MASTER_t * const handle, uint32_t data_size)
1133:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3855              	 .loc 5 1133 0
 3856              	 .cfi_startproc
 3857 0000 80B5     	 push {r7,lr}
 3858              	.LCFI144:
 3859              	 .cfi_def_cfa_offset 8
 3860              	 .cfi_offset 7,-8
 3861              	 .cfi_offset 14,-4
 3862 0002 86B0     	 sub sp,sp,#24
 3863              	.LCFI145:
 3864              	 .cfi_def_cfa_offset 32
 3865 0004 00AF     	 add r7,sp,#0
 3866              	.LCFI146:
 3867              	 .cfi_def_cfa_register 7
 3868 0006 7860     	 str r0,[r7,#4]
 3869 0008 3960     	 str r1,[r7]
1134:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t minfifo_value;
1135:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t tx_fifo_size;
1136:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t rx_fifo_size;
1137:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_limit;
1138:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1139:../Dave/Generated/I2C_MASTER/i2c_master.c ****   rx_fifo_size = (uint8_t)((uint8_t)1 << handle->config->rxFIFO_size);
 3870              	 .loc 5 1139 0
 3871 000a 7B68     	 ldr r3,[r7,#4]
 3872 000c 5B68     	 ldr r3,[r3,#4]
 3873 000e 2722     	 mov r2,#39
 3874 0010 9B5C     	 ldrb r3,[r3,r2]
 3875 0012 1A1C     	 mov r2,r3
 3876 0014 0123     	 mov r3,#1
 3877 0016 9340     	 lsl r3,r3,r2
 3878 0018 1A1C     	 mov r2,r3
 3879 001a 1623     	 mov r3,#22
 3880 001c FB18     	 add r3,r7,r3
 3881 001e 1A70     	 strb r2,[r3]
1140:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1141:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->txFIFO_size > 0))
 3882              	 .loc 5 1141 0
 3883 0020 7B68     	 ldr r3,[r7,#4]
 3884 0022 5B68     	 ldr r3,[r3,#4]
 3885 0024 2622     	 mov r2,#38
 3886 0026 9B5C     	 ldrb r3,[r3,r2]
 3887 0028 002B     	 cmp r3,#0
 3888 002a 0BD0     	 beq .L190
1142:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1143:../Dave/Generated/I2C_MASTER/i2c_master.c ****     tx_fifo_size = (uint8_t)((uint8_t)1 << handle->config->txFIFO_size);
 3889              	 .loc 5 1143 0
 3890 002c 7B68     	 ldr r3,[r7,#4]
 3891 002e 5B68     	 ldr r3,[r3,#4]
 3892 0030 2622     	 mov r2,#38
 3893 0032 9B5C     	 ldrb r3,[r3,r2]
 3894 0034 1A1C     	 mov r2,r3
 3895 0036 0123     	 mov r3,#1
 3896 0038 9340     	 lsl r3,r3,r2
 3897 003a 1A1C     	 mov r2,r3
 3898 003c 1723     	 mov r3,#23
 3899 003e FB18     	 add r3,r7,r3
 3900 0040 1A70     	 strb r2,[r3]
 3901 0042 03E0     	 b .L191
 3902              	.L190:
1144:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1145:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1146:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1147:../Dave/Generated/I2C_MASTER/i2c_master.c ****     tx_fifo_size = 1U;
 3903              	 .loc 5 1147 0
 3904 0044 1723     	 mov r3,#23
 3905 0046 FB18     	 add r3,r7,r3
 3906 0048 0122     	 mov r2,#1
 3907 004a 1A70     	 strb r2,[r3]
 3908              	.L191:
1148:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1149:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1150:../Dave/Generated/I2C_MASTER/i2c_master.c ****   minfifo_value = (uint32_t)(calculate_minfifosize((uint32_t)tx_fifo_size, (uint32_t)rx_fifo_size))
 3909              	 .loc 5 1150 0
 3910 004c 1723     	 mov r3,#23
 3911 004e FB18     	 add r3,r7,r3
 3912 0050 1A78     	 ldrb r2,[r3]
 3913 0052 1623     	 mov r3,#22
 3914 0054 FB18     	 add r3,r7,r3
 3915 0056 1B78     	 ldrb r3,[r3]
 3916 0058 101C     	 mov r0,r2
 3917 005a 191C     	 mov r1,r3
 3918 005c FFF7FEFF 	 bl calculate_minfifosize
 3919 0060 031C     	 mov r3,r0
 3920 0062 3B61     	 str r3,[r7,#16]
1151:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1152:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_limit = (uint8_t)(calculate_minfifosize(data_size, minfifo_value));
 3921              	 .loc 5 1152 0
 3922 0064 3A68     	 ldr r2,[r7]
 3923 0066 3B69     	 ldr r3,[r7,#16]
 3924 0068 101C     	 mov r0,r2
 3925 006a 191C     	 mov r1,r3
 3926 006c FFF7FEFF 	 bl calculate_minfifosize
 3927 0070 021C     	 mov r2,r0
 3928 0072 0F23     	 mov r3,#15
 3929 0074 FB18     	 add r3,r7,r3
 3930 0076 1A70     	 strb r2,[r3]
1153:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1154:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Set the limit value */
1155:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_SetRXFIFOTriggerLimit((I2C_MASTER_t *)handle, handle->config->rxFIFO_size, ((uint32_t)
 3931              	 .loc 5 1155 0
 3932 0078 7B68     	 ldr r3,[r7,#4]
 3933 007a 5B68     	 ldr r3,[r3,#4]
 3934 007c 2722     	 mov r2,#39
 3935 007e 9B5C     	 ldrb r3,[r3,r2]
 3936 0080 191C     	 mov r1,r3
 3937 0082 0F23     	 mov r3,#15
 3938 0084 FB18     	 add r3,r7,r3
 3939 0086 1B78     	 ldrb r3,[r3]
 3940 0088 013B     	 sub r3,r3,#1
 3941 008a 7A68     	 ldr r2,[r7,#4]
 3942 008c 101C     	 mov r0,r2
 3943 008e 1A1C     	 mov r2,r3
 3944 0090 FFF7FEFF 	 bl I2C_MASTER_SetRXFIFOTriggerLimit
1156:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3945              	 .loc 5 1156 0
 3946 0094 BD46     	 mov sp,r7
 3947 0096 06B0     	 add sp,sp,#24
 3948              	 
 3949 0098 80BD     	 pop {r7,pc}
 3950              	 .cfi_endproc
 3951              	.LFE169:
 3953 009a C046     	 .section .text.I2C_MASTER_AbortTransmit,"ax",%progbits
 3954              	 .align 2
 3955              	 .global I2C_MASTER_AbortTransmit
 3956              	 .code 16
 3957              	 .thumb_func
 3959              	I2C_MASTER_AbortTransmit:
 3960              	.LFB170:
1157:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1158:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1159:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
1160:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief Aborts the ongoing data transmission.
1161:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param I2C_MASTER_t*  I2C_MASTER APP handle pointer of type I2C_MASTER_t
1162:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return I2C_MASTER_STATUS_t
1163:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1164:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Details of function:
1165:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * If there is a transmission in progress, it will be stopped. If transmit FIFO is used,
1166:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * the existing data will be flushed. After the transmission is stopped, user can start
1167:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * a new transmission without delay.
1168:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
1169:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle)
1170:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3961              	 .loc 5 1170 0
 3962              	 .cfi_startproc
 3963 0000 80B5     	 push {r7,lr}
 3964              	.LCFI147:
 3965              	 .cfi_def_cfa_offset 8
 3966              	 .cfi_offset 7,-8
 3967              	 .cfi_offset 14,-4
 3968 0002 84B0     	 sub sp,sp,#16
 3969              	.LCFI148:
 3970              	 .cfi_def_cfa_offset 24
 3971 0004 00AF     	 add r7,sp,#0
 3972              	.LCFI149:
 3973              	 .cfi_def_cfa_register 7
 3974 0006 7860     	 str r0,[r7,#4]
1171:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
1172:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1173:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_SUCCESS;
 3975              	 .loc 5 1173 0
 3976 0008 0F23     	 mov r3,#15
 3977 000a FB18     	 add r3,r7,r3
 3978 000c 0022     	 mov r2,#0
 3979 000e 1A70     	 strb r2,[r3]
1174:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1175:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 3980              	 .loc 5 1175 0
 3981 0010 7B68     	 ldr r3,[r7,#4]
 3982 0012 5B68     	 ldr r3,[r3,#4]
 3983 0014 2422     	 mov r2,#36
 3984 0016 9B5C     	 ldrb r3,[r3,r2]
 3985 0018 002B     	 cmp r3,#0
 3986 001a 04D1     	 bne .L193
1176:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1177:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
1178:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_AbortTransmitIRQ(handle);
 3987              	 .loc 5 1178 0
 3988 001c 7B68     	 ldr r3,[r7,#4]
 3989 001e 181C     	 mov r0,r3
 3990 0020 FFF7FEFF 	 bl I2C_MASTER_AbortTransmitIRQ
 3991 0024 09E0     	 b .L194
 3992              	.L193:
1179:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1180:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1181:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 3993              	 .loc 5 1181 0
 3994 0026 7B68     	 ldr r3,[r7,#4]
 3995 0028 5B68     	 ldr r3,[r3,#4]
 3996 002a 2422     	 mov r2,#36
 3997 002c 9B5C     	 ldrb r3,[r3,r2]
 3998 002e 012B     	 cmp r3,#1
 3999 0030 03D0     	 beq .L194
1182:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1183:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
1184:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lAbortTransmitDMA(handle);
1185:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1186:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1187:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1188:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1189:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 4000              	 .loc 5 1189 0
 4001 0032 0F23     	 mov r3,#15
 4002 0034 FB18     	 add r3,r7,r3
 4003 0036 0122     	 mov r2,#1
 4004 0038 1A70     	 strb r2,[r3]
 4005              	.L194:
1190:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1191:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->channel->PSCR |= USIC_CH_PSR_IICMode_WTDF_Msk; /*clear WDTF*/
 4006              	 .loc 5 1191 0
 4007 003a 7B68     	 ldr r3,[r7,#4]
 4008 003c 1B68     	 ldr r3,[r3]
 4009 003e 7A68     	 ldr r2,[r7,#4]
 4010 0040 1268     	 ldr r2,[r2]
 4011 0042 D26C     	 ldr r2,[r2,#76]
 4012 0044 0221     	 mov r1,#2
 4013 0046 0A43     	 orr r2,r1
 4014 0048 DA64     	 str r2,[r3,#76]
1192:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->channel->FMR = 0x00000002U;/*clear TDV*/
 4015              	 .loc 5 1192 0
 4016 004a 7B68     	 ldr r3,[r7,#4]
 4017 004c 1B68     	 ldr r3,[r3]
 4018 004e 0222     	 mov r2,#2
 4019 0050 9A66     	 str r2,[r3,#104]
1193:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1194:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 4020              	 .loc 5 1194 0
 4021 0052 0F23     	 mov r3,#15
 4022 0054 FB18     	 add r3,r7,r3
 4023 0056 1B78     	 ldrb r3,[r3]
1195:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 4024              	 .loc 5 1195 0
 4025 0058 181C     	 mov r0,r3
 4026 005a BD46     	 mov sp,r7
 4027 005c 04B0     	 add sp,sp,#16
 4028              	 
 4029 005e 80BD     	 pop {r7,pc}
 4030              	 .cfi_endproc
 4031              	.LFE170:
 4033              	 .section .text.I2C_MASTER_AbortReceive,"ax",%progbits
 4034              	 .align 2
 4035              	 .global I2C_MASTER_AbortReceive
 4036              	 .code 16
 4037              	 .thumb_func
 4039              	I2C_MASTER_AbortReceive:
 4040              	.LFB171:
1196:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1197:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
1198:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief Aborts the ongoing data reception.
1199:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param I2C_MASTER_t* I2C_MASTER APP handle pointer of type I2C_MASTER_t
1200:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return I2C_MASTER_STATUS_t
1201:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1202:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Details of function:
1203:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * If a reception is in progress, it will be stopped. When a reception request
1204:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * is active, user will not be able to place a new receive request till the active
1205:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * reception is complete. This API can stop the progressing reception to make
1206:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * a new receive request.
1207:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
1208:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle)
1209:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 4041              	 .loc 5 1209 0
 4042              	 .cfi_startproc
 4043 0000 80B5     	 push {r7,lr}
 4044              	.LCFI150:
 4045              	 .cfi_def_cfa_offset 8
 4046              	 .cfi_offset 7,-8
 4047              	 .cfi_offset 14,-4
 4048 0002 84B0     	 sub sp,sp,#16
 4049              	.LCFI151:
 4050              	 .cfi_def_cfa_offset 24
 4051 0004 00AF     	 add r7,sp,#0
 4052              	.LCFI152:
 4053              	 .cfi_def_cfa_register 7
 4054 0006 7860     	 str r0,[r7,#4]
1210:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
1211:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1212:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_SUCCESS;
 4055              	 .loc 5 1212 0
 4056 0008 0F23     	 mov r3,#15
 4057 000a FB18     	 add r3,r7,r3
 4058 000c 0022     	 mov r2,#0
 4059 000e 1A70     	 strb r2,[r3]
1213:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1214:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 4060              	 .loc 5 1214 0
 4061 0010 7B68     	 ldr r3,[r7,#4]
 4062 0012 5B68     	 ldr r3,[r3,#4]
 4063 0014 2522     	 mov r2,#37
 4064 0016 9B5C     	 ldrb r3,[r3,r2]
 4065 0018 002B     	 cmp r3,#0
 4066 001a 04D1     	 bne .L197
1215:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1216:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
1217:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lAbortReceiveIRQ(handle);
 4067              	 .loc 5 1217 0
 4068 001c 7B68     	 ldr r3,[r7,#4]
 4069 001e 181C     	 mov r0,r3
 4070 0020 FFF7FEFF 	 bl I2C_MASTER_lAbortReceiveIRQ
 4071 0024 09E0     	 b .L198
 4072              	.L197:
1218:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1219:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1220:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 4073              	 .loc 5 1220 0
 4074 0026 7B68     	 ldr r3,[r7,#4]
 4075 0028 5B68     	 ldr r3,[r3,#4]
 4076 002a 2522     	 mov r2,#37
 4077 002c 9B5C     	 ldrb r3,[r3,r2]
 4078 002e 012B     	 cmp r3,#1
 4079 0030 03D0     	 beq .L198
1221:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1222:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
1223:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lAbortReceiveDMA(handle);
1224:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1225:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1226:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1227:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1228:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 4080              	 .loc 5 1228 0
 4081 0032 0F23     	 mov r3,#15
 4082 0034 FB18     	 add r3,r7,r3
 4083 0036 0122     	 mov r2,#1
 4084 0038 1A70     	 strb r2,[r3]
 4085              	.L198:
1229:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1230:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1231:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 4086              	 .loc 5 1231 0
 4087 003a 0F23     	 mov r3,#15
 4088 003c FB18     	 add r3,r7,r3
 4089 003e 1B78     	 ldrb r3,[r3]
1232:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 4090              	 .loc 5 1232 0
 4091 0040 181C     	 mov r0,r3
 4092 0042 BD46     	 mov sp,r7
 4093 0044 04B0     	 add sp,sp,#16
 4094              	 
 4095 0046 80BD     	 pop {r7,pc}
 4096              	 .cfi_endproc
 4097              	.LFE171:
 4099              	 .text
 4100              	.Letext0:
 4101              	 .file 6 "c:\\users\\victor.paschoal\\documents\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4102              	 .file 7 "c:\\users\\victor.paschoal\\documents\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4103              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 4104              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/MK2_TESTE_ACIONAMENTO2/Dave/Generated/DAVE_Common.h"
DEFINED SYMBOLS
                            *ABS*:00000000 i2c_master.c
    {standard input}:18     .text.__NVIC_ClearPendingIRQ:00000000 $t
    {standard input}:22     .text.__NVIC_ClearPendingIRQ:00000000 __NVIC_ClearPendingIRQ
    {standard input}:67     .text.__NVIC_ClearPendingIRQ:00000030 $d
    {standard input}:72     .text.XMC_USIC_CH_EnableEvent:00000000 $t
    {standard input}:76     .text.XMC_USIC_CH_EnableEvent:00000000 XMC_USIC_CH_EnableEvent
    {standard input}:110    .text.XMC_USIC_CH_DisableEvent:00000000 $t
    {standard input}:114    .text.XMC_USIC_CH_DisableEvent:00000000 XMC_USIC_CH_DisableEvent
    {standard input}:148    .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:152    .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:185    .text.XMC_USIC_CH_TriggerServiceRequest:00000000 $t
    {standard input}:189    .text.XMC_USIC_CH_TriggerServiceRequest:00000000 XMC_USIC_CH_TriggerServiceRequest
    {standard input}:222    .text.XMC_USIC_CH_TXFIFO_EnableEvent:00000000 $t
    {standard input}:226    .text.XMC_USIC_CH_TXFIFO_EnableEvent:00000000 XMC_USIC_CH_TXFIFO_EnableEvent
    {standard input}:264    .text.XMC_USIC_CH_TXFIFO_DisableEvent:00000000 $t
    {standard input}:268    .text.XMC_USIC_CH_TXFIFO_DisableEvent:00000000 XMC_USIC_CH_TXFIFO_DisableEvent
    {standard input}:307    .text.XMC_USIC_CH_TXFIFO_Flush:00000000 $t
    {standard input}:311    .text.XMC_USIC_CH_TXFIFO_Flush:00000000 XMC_USIC_CH_TXFIFO_Flush
    {standard input}:343    .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 $t
    {standard input}:347    .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 XMC_USIC_CH_TXFIFO_IsFull
    {standard input}:384    .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 $t
    {standard input}:388    .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 XMC_USIC_CH_TXFIFO_IsEmpty
    {standard input}:425    .text.XMC_USIC_CH_RXFIFO_EnableEvent:00000000 $t
    {standard input}:429    .text.XMC_USIC_CH_RXFIFO_EnableEvent:00000000 XMC_USIC_CH_RXFIFO_EnableEvent
    {standard input}:467    .text.XMC_USIC_CH_RXFIFO_DisableEvent:00000000 $t
    {standard input}:471    .text.XMC_USIC_CH_RXFIFO_DisableEvent:00000000 XMC_USIC_CH_RXFIFO_DisableEvent
    {standard input}:510    .text.XMC_USIC_CH_RXFIFO_Flush:00000000 $t
    {standard input}:514    .text.XMC_USIC_CH_RXFIFO_Flush:00000000 XMC_USIC_CH_RXFIFO_Flush
    {standard input}:546    .text.XMC_USIC_CH_RXFIFO_IsEmpty:00000000 $t
    {standard input}:550    .text.XMC_USIC_CH_RXFIFO_IsEmpty:00000000 XMC_USIC_CH_RXFIFO_IsEmpty
    {standard input}:586    .text.XMC_I2C_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:590    .text.XMC_I2C_CH_SetInterruptNodePointer:00000000 XMC_I2C_CH_SetInterruptNodePointer
    {standard input}:627    .text.XMC_I2C_CH_GetStatusFlag:00000000 $t
    {standard input}:631    .text.XMC_I2C_CH_GetStatusFlag:00000000 XMC_I2C_CH_GetStatusFlag
    {standard input}:660    .text.XMC_I2C_CH_ClearStatusFlag:00000000 $t
    {standard input}:664    .text.XMC_I2C_CH_ClearStatusFlag:00000000 XMC_I2C_CH_ClearStatusFlag
    {standard input}:697    .text.I2C_MASTER_SetRXFIFOTriggerLimit:00000000 $t
    {standard input}:701    .text.I2C_MASTER_SetRXFIFOTriggerLimit:00000000 I2C_MASTER_SetRXFIFOTriggerLimit
    {standard input}:739    .text.I2C_MASTER_IsTXFIFOFull:00000000 $t
    {standard input}:743    .text.I2C_MASTER_IsTXFIFOFull:00000000 I2C_MASTER_IsTXFIFOFull
    {standard input}:775    .text.I2C_MASTER_IsRXFIFOEmpty:00000000 $t
    {standard input}:779    .text.I2C_MASTER_IsRXFIFOEmpty:00000000 I2C_MASTER_IsRXFIFOEmpty
    {standard input}:811    .text.I2C_MASTER_GetReceivedByte:00000000 $t
    {standard input}:815    .text.I2C_MASTER_GetReceivedByte:00000000 I2C_MASTER_GetReceivedByte
    {standard input}:847    .text.I2C_MASTER_TransmitByte:00000000 $t
    {standard input}:851    .text.I2C_MASTER_TransmitByte:00000000 I2C_MASTER_TransmitByte
    {standard input}:887    .text.I2C_MASTER_EnableEvent:00000000 $t
    {standard input}:891    .text.I2C_MASTER_EnableEvent:00000000 I2C_MASTER_EnableEvent
    {standard input}:924    .text.I2C_MASTER_DisableEvent:00000000 $t
    {standard input}:928    .text.I2C_MASTER_DisableEvent:00000000 I2C_MASTER_DisableEvent
    {standard input}:961    .text.I2C_MASTER_ReceiveACK:00000000 $t
    {standard input}:965    .text.I2C_MASTER_ReceiveACK:00000000 I2C_MASTER_ReceiveACK
    {standard input}:995    .text.I2C_MASTER_ReceiveNACK:00000000 $t
    {standard input}:999    .text.I2C_MASTER_ReceiveNACK:00000000 I2C_MASTER_ReceiveNACK
    {standard input}:1029   .text.I2C_MASTER_SendStop:00000000 $t
    {standard input}:1033   .text.I2C_MASTER_SendStop:00000000 I2C_MASTER_SendStop
    {standard input}:1069   .text.I2C_MASTER_SendStart:00000000 $t
    {standard input}:1073   .text.I2C_MASTER_SendStart:00000000 I2C_MASTER_SendStart
    {standard input}:1118   .text.I2C_MASTER_SendRepeatedStart:00000000 $t
    {standard input}:1122   .text.I2C_MASTER_SendRepeatedStart:00000000 I2C_MASTER_SendRepeatedStart
    {standard input}:1167   .text.calculate_minfifosize:00000000 $t
    {standard input}:1171   .text.calculate_minfifosize:00000000 calculate_minfifosize
    {standard input}:1215   .text.I2C_MASTER_GetAppVersion:00000000 $t
    {standard input}:1220   .text.I2C_MASTER_GetAppVersion:00000000 I2C_MASTER_GetAppVersion
    {standard input}:1285   .text.I2C_MASTER_GetAppVersion:00000058 $d
    {standard input}:1291   .text.I2C_MASTER_Init:00000000 $t
    {standard input}:1296   .text.I2C_MASTER_Init:00000000 I2C_MASTER_Init
    {standard input}:1348   .text.I2C_MASTER_GetFlagStatus:00000000 $t
    {standard input}:1353   .text.I2C_MASTER_GetFlagStatus:00000000 I2C_MASTER_GetFlagStatus
    {standard input}:1391   .text.I2C_MASTER_ClearFlag:00000000 $t
    {standard input}:1396   .text.I2C_MASTER_ClearFlag:00000000 I2C_MASTER_ClearFlag
    {standard input}:1429   .text.I2C_MASTER_Transmit:00000000 $t
    {standard input}:1434   .text.I2C_MASTER_Transmit:00000000 I2C_MASTER_Transmit
    {standard input}:2730   .text.I2C_MASTER_StartTransmitIRQ:00000000 I2C_MASTER_StartTransmitIRQ
    {standard input}:1504   .text.I2C_MASTER_TransmitHandler:00000000 $t
    {standard input}:1509   .text.I2C_MASTER_TransmitHandler:00000000 I2C_MASTER_TransmitHandler
    {standard input}:3748   .text.I2C_MASTER_ProtocolHandler:00000000 I2C_MASTER_ProtocolHandler
    {standard input}:1919   .text.I2C_MASTER_lSendStop_JumpTo_TxCallback:00000000 I2C_MASTER_lSendStop_JumpTo_TxCallback
    {standard input}:1915   .text.I2C_MASTER_lSendStop_JumpTo_TxCallback:00000000 $t
    {standard input}:1998   .text.I2C_MASTER_Receive:00000000 $t
    {standard input}:2003   .text.I2C_MASTER_Receive:00000000 I2C_MASTER_Receive
    {standard input}:2975   .text.I2C_MASTER_StartReceiveIRQ:00000000 I2C_MASTER_StartReceiveIRQ
    {standard input}:2077   .text.I2C_MASTER_lReceive_FIFOData:00000000 $t
    {standard input}:2081   .text.I2C_MASTER_lReceive_FIFOData:00000000 I2C_MASTER_lReceive_FIFOData
    {standard input}:3853   .text.I2C_MASTER_lReconfigureRxFIFO:00000000 I2C_MASTER_lReconfigureRxFIFO
    {standard input}:2660   .text.I2C_MASTER_lSendStart_Or_RepeatedStart:00000000 I2C_MASTER_lSendStart_Or_RepeatedStart
    {standard input}:2411   .text.I2C_MASTER_lReceive_StdData:00000000 $t
    {standard input}:2415   .text.I2C_MASTER_lReceive_StdData:00000000 I2C_MASTER_lReceive_StdData
    {standard input}:2656   .text.I2C_MASTER_lSendStart_Or_RepeatedStart:00000000 $t
    {standard input}:2725   .text.I2C_MASTER_StartTransmitIRQ:00000000 $t
    {standard input}:2896   .text.I2C_MASTER_AbortTransmitIRQ:00000000 $t
    {standard input}:2900   .text.I2C_MASTER_AbortTransmitIRQ:00000000 I2C_MASTER_AbortTransmitIRQ
    {standard input}:2970   .text.I2C_MASTER_StartReceiveIRQ:00000000 $t
    {standard input}:3155   .text.I2C_MASTER_ReceiveHandler:00000000 $t
    {standard input}:3160   .text.I2C_MASTER_ReceiveHandler:00000000 I2C_MASTER_ReceiveHandler
    {standard input}:3570   .text.I2C_MASTER_lSendStop_JumpTo_RxCallback:00000000 I2C_MASTER_lSendStop_JumpTo_RxCallback
    {standard input}:3566   .text.I2C_MASTER_lSendStop_JumpTo_RxCallback:00000000 $t
    {standard input}:3658   .text.I2C_MASTER_lAbortReceiveIRQ:00000000 $t
    {standard input}:3662   .text.I2C_MASTER_lAbortReceiveIRQ:00000000 I2C_MASTER_lAbortReceiveIRQ
    {standard input}:3743   .text.I2C_MASTER_ProtocolHandler:00000000 $t
    {standard input}:3849   .text.I2C_MASTER_lReconfigureRxFIFO:00000000 $t
    {standard input}:3954   .text.I2C_MASTER_AbortTransmit:00000000 $t
    {standard input}:3959   .text.I2C_MASTER_AbortTransmit:00000000 I2C_MASTER_AbortTransmit
    {standard input}:4034   .text.I2C_MASTER_AbortReceive:00000000 $t
    {standard input}:4039   .text.I2C_MASTER_AbortReceive:00000000 I2C_MASTER_AbortReceive
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_SetInterruptNodePointer
XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
XMC_I2C_CH_GetReceivedData
XMC_I2C_CH_MasterTransmit
XMC_I2C_CH_EnableEvent
XMC_I2C_CH_DisableEvent
XMC_I2C_CH_MasterReceiveAck
XMC_I2C_CH_MasterReceiveNack
XMC_I2C_CH_MasterStop
XMC_I2C_CH_MasterStart
XMC_I2C_CH_MasterRepeatedStart
